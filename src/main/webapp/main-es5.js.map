{"version":3,"sources":["webpack:///src/app/domain-webhook-deliveries/domain-webhook-deliveries.component.ts","webpack:///src/app/domain-webhook-deliveries/domain-webhook-deliveries.component.html","webpack:///src/app/services/util.service.ts","webpack:///src/app/shared/header/header.component.ts","webpack:///src/app/shared/header/header.component.html","webpack:///src/app/models/faq_question.ts","webpack:///src/app/add-qna/add-qna.component.ts","webpack:///src/app/add-qna/add-qna.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/services/domain.service.ts","webpack:///src/app/services/ask-question.service.ts","webpack:///src/app/domain-settings/domain-settings.component.ts","webpack:///src/app/domain-settings/domain-settings.component.html","webpack:///src/app/ask-question/ask-question.component.ts","webpack:///src/app/ask-question/ask-question.component.html","webpack:///src/app/reset-password/reset-password.component.ts","webpack:///src/app/reset-password/reset-password.component.html","webpack:///src/app/iam-update-profile/iam-update-profile.component.ts","webpack:///src/app/iam-update-profile/iam-update-profile.component.html","webpack:///src/app/domain-faq/domain-faq.component.ts","webpack:///src/app/domain-faq/domain-faq.component.html","webpack:///src/app/shared/domain-navigation/domain-navigation.component.ts","webpack:///src/app/shared/domain-navigation/domain-navigation.component.html","webpack:///src/app/pipes/linkify.pipe.ts","webpack:///src/app/services/configuration.service.ts","webpack:///src/app/services/aesencrypt-decrypt.service.ts","webpack:///src/app/domain-insights/domain-insights.component.ts","webpack:///src/app/domain-insights/domain-insights.component.html","webpack:///src/app/models/domain_insights.ts","webpack:///src/app/improve-trained-qna/improve-trained-qna.component.ts","webpack:///src/app/improve-trained-qna/improve-trained-qna.component.html","webpack:///src/app/models/answer.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/shared/ask-katie/ask-katie.component.ts","webpack:///src/app/shared/ask-katie/ask-katie.component.html","webpack:///src/app/domain-ask/domain-ask.component.ts","webpack:///src/app/domain-ask/domain-ask.component.html","webpack:///src/app/trained-questions-answers/trained-questions-answers.component.ts","webpack:///src/app/trained-questions-answers/trained-questions-answers.component.html","webpack:///src/app/models/faq_topic.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/iam-update-user/iam-update-user.component.ts","webpack:///src/app/iam-update-user/iam-update-user.component.html","webpack:///src/app/rate-answer/rate-answer.component.ts","webpack:///src/app/rate-answer/rate-answer.component.html","webpack:///src/app/forgot-password/forgot-password.component.ts","webpack:///src/app/forgot-password/forgot-password.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/trained-question-answer/trained-question-answer.component.ts","webpack:///src/app/trained-question-answer/trained-question-answer.component.html","webpack:///src/app/resubmitted-questions/resubmitted-questions.component.ts","webpack:///src/app/resubmitted-questions/resubmitted-questions.component.html","webpack:///src/app/add-domain/add-domain.component.ts","webpack:///src/app/add-domain/add-domain.component.html","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/view-qna/view-qna.component.ts","webpack:///src/app/view-qna/view-qna.component.html","webpack:///src/app/faq/faq.component.ts","webpack:///src/app/faq/faq.component.html","webpack:///src/app/asked-questions/asked-questions.component.ts","webpack:///src/app/asked-questions/asked-questions.component.html","webpack:///src/app/domain-members/domain-members.component.ts","webpack:///src/app/domain-members/domain-members.component.html","webpack:///src/app/approve-answer/approve-answer.component.ts","webpack:///src/app/approve-answer/approve-answer.component.html","webpack:///src/app/answer-resubmitted-question/answer-resubmitted-question.component.ts","webpack:///src/app/answer-resubmitted-question/answer-resubmitted-question.component.html","webpack:///src/app/services/questions.service.ts","webpack:///src/app/domain/domain.component.ts","webpack:///src/app/domain/domain.component.html","webpack:///src/app/shared/footer/footer.component.ts","webpack:///src/app/shared/footer/footer.component.html","webpack:///src/app/pipes/epoch-human-readable.pipe.ts","webpack:///src/app/services/iam.service.ts","webpack:///src/app/logout/logout.component.ts","webpack:///src/app/logout/logout.component.html","webpack:///src/app/domain-webhooks/domain-webhooks.component.ts","webpack:///src/app/domain-webhooks/domain-webhooks.component.html","webpack:///src/app/display-answer-of-resubmitted-question/display-answer-of-resubmitted-question.component.ts","webpack:///src/app/display-answer-of-resubmitted-question/display-answer-of-resubmitted-question.component.html","webpack:///src/app/pipes/safecontent.pipe.ts","webpack:///src/app/my-katie/my-katie.component.ts","webpack:///src/app/my-katie/my-katie.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/iam/iam.component.ts","webpack:///src/app/iam/iam.component.html","webpack:///src/app/services/data-sharing.service.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["DomainWebhookDeliveriesComponent","configurationService","route","domainService","requests","domainId","snapshot","paramMap","get","getDomain","webhookId","getWebhookRequests","getContext","then","response","domain","console","info","id","selector","templateUrl","styleUrls","UtilService","plainText","replacedText","replacePattern1","replacePattern2","replacePattern3","includes","replace","warn","providedIn","HeaderComponent","authenticationService","dataSharingService","eRef","document","isUserLoggedIn","subscribe","value","getUser","event","nativeElement","contains","target","getElementById","classList","toggle","user","username","debug","clickout","FaqQuestion","AddQnaComponent","questionsService","router","jwtToken","faqLanguages","topics","KATIE_NO_TOPIC_SELECTED","queryParams","params","subQuestion","getFAQLanguagesAndTopics","getFAQLanguages","length","getFAQTopics","language","getFAQ","question","faqLanguage","faqTopicId","alert","answer","tinymce_content","tinymce","remove","e","addQnA","uuid","addQnAtoFAQ","navigate","reloadFAQTopics","HomeComponent","getKatieVersion","submitQuestion","isUserSignedIn","getVersion","katieVersion","timestamp","Date","now","environment","production","apiBaseUrl","DomainService","httpClient","baseUrl","webhooks","webhookRequests","members","payloadURL","url","promise","Promise","resolve","reject","post","responseType","toPromise","status","error","message","code","lastNumberOfDays","insights","searchImpl","email","registrationRequired","put","isModerator","isExpert","answersMustBeApproved","name","patch","emails","hostname","port","password","uuidOnly","topicId","AskQuestionService","translate","answers","questionerLang","limit","offset","instant","properties","submittedQuestion","DomainSettingsComponent","isContentEditable","innerHTML","contentEditable","domainName","updateDomainName","emailReplyTo","updateImapConfiguration","updateMatchReplyToEmails","reindex","toggleApprovalOfAnswers","style","backgroundColor","updatedHostname","updateMessageBodyHostname","addImapConfiguration","AskQuestionComponent","askQuestionService","aesEncryptDecryptService","translateService","answerReceived","setQuestion","askQuestion","getUsername","toggleOverlay","currentLang","submitQuestionToExpert","decrypt","passwordType","y","type","src","encapsulation","None","ResetPasswordComponent","iamService","passwordSubmitted","token","resetPassword","IamUpdateProfileComponent","firstname","lastname","updatedUser","role","myKatieId","updateUser","DomainFaqComponent","selectableFAQLanguages","getSelectableFAQLanguages","supportedLanguages","lang","isSelectable","push","topic1Title","topic2Title","topic3Title","topic1","title","topic2","topic3","addFAQ","addFaq","DomainNavigationComponent","pageId","LinkifyPipe","utilService","linkify","ConfigurationService","answersGenerallyProtected","mailSubjectTag","domain_id","context","msg","displayInfo","domains","version","serverConfig","_domainId","AesencryptDecryptService","text","secretKey","encrypt","trim","toString","textToDecrypt","Utf8","DomainInsightsComponent","getDomainInsights","lastDays","getInsights","selectTimePeriod","DomainInsights","ImproveTrainedQnaComponent","getTrainedAnswerQuestion","getTrainedQuestionAnswer","questionAnswer","Answer","DashboardComponent","getDomains","getServerConfiguration","createMyKatie","addUser","AskKatieComponent","seeMoreAnswersClicked","errorCode","askQuestionV2","decryptAnswer","togglePw","DomainAskComponent","TrainedQuestionsAnswersComponent","qAnswers","getTrainedQuestionsAnswers","deleteTrainedQnA","FaqTopic","AppComponent","titleService","pLocation","browserLanguage","navigator","indexOf","setDefaultLang","setTitle","currentRoute","hash","newTitle","use","IamUpdateUserComponent","userid","confirmedPassword","RateQuestionComponent","rating","rateAnswer","qna","originalquestion","ForgotPasswordComponent","usernameSubmitted","submitUsername","AppModule","provide","useValue","forRoot","loader","useFactory","HttpLoaderFactory","deps","declarations","imports","providers","bootstrap","http","TrainedQuestionAnswerComponent","ownershipRadio","updatedQuestion","updateQuestionOfTrainedQnA","unencryptedAnswer","answerClientSideEncrypted","encryptedAnswer","decryptedAnswer","qaOwnership","ownership","train","deleteResubmittedQuestion","updateTrainedQuestionAnswer","toggleEditQuestion","decryptSavedAnswer","ResubmittedQuestionsComponent","questions","pendingQuestions","getPendingResubmittedQuestions","getAllResubmittedQuestions","getResubmittedQuestions","AddDomainComponent","domainCreated","answersProtectedByDefault","addDomain","newDomainId","AuthenticationService","httpOptions","headers","body","userDetails","ViewQnaComponent","qnaUuid","getQnA","FaqComponent","limitTopics","moreTopics","limitQnAs","pageOfTopics","domainInfo","getDomainDisplayInformation","loadUuidOnly","counterTopics","topic","resolveQnAs","pageTopic","Array","counterQnAs","pageQnA","add","getAnswer","AskedQuestionsComponent","getAllAskedQuestions","DomainMembersComponent","getMembers","getAllMembers","inviteMember","toggleUserIsModerator","toggleUserIsExpert","ApproveAnswerComponent","qid","getAskedQuestion","askedQuestion","answerUUID","channelType","getEmailContainingQuestion","discardAnswer","discardedQuestion","approveAnswer","approvedQuestion","AnswerResubmittedQuestionComponent","getResubmittedQuestion","updateQuestionOfResubmittedQuestion","contextId","reQuestion","getContextConfigurationAndResetOwnership","answerLinkType","channelRequestId","fcmtoken","slackChannelId","remoteAddress","respondentId","respondentUserId","respondent","answerClientSideEncryptedAlgorithm","answerClientSideEncryptionAlgorithm","trained","feedback","sendEmail","answerResubmittedQuestion","sendAnswerToUser","QuestionsService","_questions","redirect","set","emailContainingQuestion","information","keywords","requestUrl","credentialsHint","encryptedCredentials","clientSideEncryptionAlgorithm","originalQuestion","DomainComponent","FooterComponent","useLanguage","currentLanguage","buttonID","className","EpochHumanReadablePipe","IamService","users","resetToken","LogoutComponent","doLogout","next","DomainWebhooksComponent","getWebhooks","addWebhook","deleteWebhook","DisplayAnswerOfResubmittedQuestionComponent","getAnswerOfResubmittedQuestion","SafecontentPipe","sanitizer","bypassSecurityTrustHtml","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","Error","MyKatieComponent","getMyKatieDomain","isAskTabSelected","isShareTabSelected","currentItemType","getSignedInUser","itemId","display","setDisplay","shareInformation","tinymce_note","link","shareURLWithKatie","location","startDate","endDate","hint","pwd4Encryption","shareCredentialsWithKatie","phoneNumber","address","shareShoppingListWithKatie","tinymce_shopping_list","tinymce_recipe_ingredients","tinymce_recipe_preparation","myKatieDomain","shareInformationWithKatie","sharedItemUUID","toggleItemMenu","shareInformationWithAnotherUser","toggleShareTab","toggleAskTab","selectShareItemType","cancel","shareOneLiner","shareNote","shareLink","shareAppointment","sharePassword","shareContact","shareShoppingList","shareRecipe","shareItem","routes","path","component","AppRoutingModule","useHash","exports","LoginComponent","doLoginUsingJWT","doLogin","roles","IamComponent","getAllUsers","DataSharingService","bootstrapModule","err","webpackEmptyAsyncContext","req","keys","module"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCE;;AAAkD;;AAAuB;;AAAS;;AAAK;;AAAE;;AAAiC;;AAAe;;AAAI;;;;;;AAAjD;;AAAA;;AAA8B;;AAAA;;;;;;AAqBtH;;AACE;;AAAG;;AAAoC;;AACvC;;AACA;;AAAG;;AAAwH;;AAC3H;;AACA;;AAAI;;AAAwD;;AAC9D;;;;;;AAQE;;AACE;;AAAI;;;;AAAwC;;AAC5C;;AAAI;;AAAsB;;AAC5B;;;;;;AAFM;;AAAA;;AACA;;AAAA;;;;;;AARR;;AACA;;AACE;;AACE;;AAAI;;AAAS;;AACb;;AAAI;;AAAW;;AACjB;;AACA;;AAIF;;AACA;;;;;;AALM;;AAAA;;;;UDvBCA,gC;AAQX,kDAAoBC,oBAApB,EAAwEC,KAAxE,EAAuGC,aAAvG,EAAqI;AAAA;;AAAjH,eAAAF,oBAAA,GAAAA,oBAAA;AAAoD,eAAAC,KAAA,GAAAA,KAAA;AAA+B,eAAAC,aAAA,GAAAA,aAAA;AAFvG,eAAAC,QAAA,GAA6B,EAA7B;AAEwI;;;;qCAEhI;AACN,iBAAKC,QAAL,GAAgB,KAAKH,KAAL,CAAWI,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,IAAjC,CAAhB;AACA,iBAAKC,SAAL;AACA,iBAAKC,SAAL,GAAiB,KAAKR,KAAL,CAAWI,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,MAAjC,CAAjB;AAEA,iBAAKG,kBAAL;AACD;AAED;;;;;;sCAGS;AAAA;;AACP,iBAAKV,oBAAL,CAA0BW,UAA1B,CAAqC,KAAKP,QAA1C,EAAoDQ,IAApD,CAAyD,UAAAC,QAAQ,EAAI;AACnE,mBAAI,CAACC,MAAL,GAAuBD,QAAvB;AACAE,qBAAO,CAACC,IAAR,CAAa,aAAa,KAAI,CAACF,MAAL,CAAYG,EAAzB,GAA8B,oBAA3C;AACD,aAHD;AAID;AAED;;;;;;+CAGkB;AAAA;;AAChBF,mBAAO,CAACC,IAAR,CAAa,8BAAb;AAEA,iBAAKd,aAAL,CAAmBQ,kBAAnB,CAAsC,KAAKN,QAA3C,EAAqD,KAAKK,SAA1D,EAAqEG,IAArE,CAA0E,UAAAC,QAAQ,EAAI;AACpF,oBAAI,CAACV,QAAL,GAAkCU,QAAlC;AACD,aAFD;AAGD;;;;;;;yBArCUd,gC,EAAgC,qJ,EAAA,+H,EAAA,uI;AAAA,O;;;cAAhCA,gC;AAAgC,sD;AAAA,iB;AAAA,gB;AAAA,4d;AAAA;AAAA;ACb7C;;AACE;;AACF;;AAEA;;AACE;;AACA;;AAEE;;AACE;;AACE;;AAAI;;AAA0C;;AAAO;;AAAI;;AACzD;;AAAI;;AAA0C;;AAAmB;;AAAI;;AACrE;;AAAI;;AAA0C;;AAAkB;;AAAI;;AACpE;;AAAI;;AAA0C;;AAAkB;;AAAI;;AACpE;;AAAI;;AAAmD;;AAAQ;;AAAI;;AACrE;;AACF;;AAEA;;AACE;;AAAI;;AAAkB;;AACtB;;AAEA;;AAQA;;AAYF;;AACF;;AACF;;;;AA3C6B;;AAAA;;AAIJ;;AAAA,+FAAqB,QAArB,EAAqB,MAArB;;AAKV;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAQJ;;AAAA;;AAQA;;AAAA;;;;;;;;;;wEDjBEA,gC,EAAgC;gBAL5C,uDAK4C;iBALlC;AACTmB,oBAAQ,EAAE,+BADD;AAETC,uBAAW,EAAE,4CAFJ;AAGTC,qBAAS,EAAE,CAAC,2CAAD;AAHF,W;AAKkC,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEb7C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAKaC,W;AAEX,+BAAc;AAAA;AAAG;AAEjB;;;;;;;;;kCAKeC,S,EAAS;AACtB,gBAAIC,YAAJ;AACA,gBAAIC,eAAJ;AACA,gBAAIC,eAAJ;AACA,gBAAIC,eAAJ;;AAEA,gBAAI,CAACJ,SAAS,CAACK,QAAV,CAAmB,UAAnB,CAAL,EAAqC;AAAE;AACrC;AACAH,6BAAe,GAAG,yEAAlB;AACAD,0BAAY,GAAGD,SAAS,CAACM,OAAV,CAAkBJ,eAAlB,EAAmC,qCAAnC,CAAf,CAHmC,CAKnC;;AACAC,6BAAe,GAAG,gCAAlB;AACAF,0BAAY,GAAGA,YAAY,CAACK,OAAb,CAAqBH,eAArB,EAAsC,8CAAtC,CAAf,CAPmC,CASnC;;AACAC,6BAAe,GAAG,0DAAlB;AACAH,0BAAY,GAAGA,YAAY,CAACK,OAAb,CAAqBF,eAArB,EAAsC,4BAAtC,CAAf;AACD,aAZD,MAYO;AACLX,qBAAO,CAACc,IAAR,CAAa,kFAAkFP,SAA/F;AACA,qBAAOA,SAAP;AACD;;AAED,mBAAOC,YAAP;AACD;;;;;;;yBAjCUF,W;AAAW,O;;;eAAXA,W;AAAW,iBAAXA,WAAW,K;AAAA,oBAFV;;;;;wEAEDA,W,EAAW;gBAHvB,wDAGuB;iBAHZ;AACVS,sBAAU,EAAE;AADF,W;AAGY,U;;;;;;;;;;;;;;;;;;;;ACLxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACKQ;;AACE;;AAA4E;;;;AAAiC;;AAC/G;;;;AADU;;AAAA;;AAAoE;;AAAA;;;;;;AAO1E;;AAA0C;;AAAmB;;;;;;AAAnB;;AAAA;;;;;;;;;;AAE1C;;AAAwG;;AAAQ;;;;AAArC;;;;;;AAC3E;;AAA2G;;AAAgB;;;;;;;;;;AAI3H;;AAAsF;;;;AAA2C;;;;AAAhF;;AAAqC;;AAAA;;;;;;;;;;;;;;;;AAZ1F;;AACE;;AAAyC;AAAA;;AAAA;;AAAA,mBAAS,qBAA4B,WAA5B,CAAT;AAAiD,WAAjD;;AACvC;;AACF;;AACA;;AACE;;AACA;;AACA;;AACA;;AACA;;AAAK;;AACL;;AAA0D;;;;AAAmC;;AAC7F;;AAAK;;AACL;;AACA;;AACA;;AAAuD;;;;AAAkC;;AAC3F;;AACF;;;;;;AAXyB;;AAAA;;AAElB;;AAAA;;AACA;;AAAA;;AAEyB;;AAAA;;AAA8B;;AAAA;;AAEvD;;AAAA;;AAEyB;;AAAA;;AAA2B;;AAAA;;;;;;;;UDXtDC,e;AAsBX;;;AAGA,iCAAoBC,qBAApB,EAA0EC,kBAA1E,EAA0HC,IAA1H,EAAsKC,QAAtK,EAAgL;AAAA;;AAAA;;AAA5J,eAAAH,qBAAA,GAAAA,qBAAA;AAAsD,eAAAC,kBAAA,GAAAA,kBAAA;AAAgD,eAAAC,IAAA,GAAAA,IAAA;AAA4C,eAAAC,QAAA,GAAAA,QAAA;AAChK,eAAKF,kBAAL,CAAwBG,cAAxB,CAAuCC,SAAvC,CAAkD,UAAAC,KAAK,EAAI;AACvD,kBAAI,CAACF,cAAL,GAAsBE,KAAtB;;AAEA,kBAAI,CAACC,OAAL;AACH,WAJD;AAKL;;;;mCAzBQC,K,EAAO;AACd,gBAAG,KAAKN,IAAL,CAAUO,aAAV,CAAwBC,QAAxB,CAAiCF,KAAK,CAACG,MAAvC,CAAH,EAAmD;AACjD;AACA,kBAAIH,KAAK,CAACG,MAAN,CAAa1B,EAAb,IAAmB,eAAnB,IAAsC,KAAKkB,QAAL,CAAcS,cAAd,CAA6B,YAA7B,EAA2CC,SAA3C,CAAqDH,QAArD,CAA8D,WAA9D,CAA1C,EAAsH;AACpH3B,uBAAO,CAACC,IAAR,CAAa,cAAb;AACA,qBAAKmB,QAAL,CAAcS,cAAd,CAA6B,YAA7B,EAA2CC,SAA3C,CAAqDC,MAArD,CAA4D,WAA5D;AACD;AACF,aAND,MAMO;AACL;AACA,kBAAI,KAAKX,QAAL,CAAcS,cAAd,CAA6B,YAA7B,KAA8C,IAA9C,IAAsD,KAAKT,QAAL,CAAcS,cAAd,CAA6B,YAA7B,EAA2CC,SAA3C,CAAqDH,QAArD,CAA8D,WAA9D,CAA1D,EAAsI;AACpI3B,uBAAO,CAACC,IAAR,CAAa,cAAb;AACA,qBAAKmB,QAAL,CAAcS,cAAd,CAA6B,YAA7B,EAA2CC,SAA3C,CAAqDC,MAArD,CAA4D,WAA5D;AACD;AACF;AACF;AAaD;;;;;;qCAGQ,CACP;AAED;;;;;;oCAGO;AAAA;;AACL,iBAAKd,qBAAL,CAA2BO,OAA3B,GAAqC3B,IAArC,CAA0C,UAAAC,QAAQ,EAAI;AACpD,oBAAI,CAACkC,IAAL,GAAkBlC,QAAlB;;AAEA,kBAAI,MAAI,CAACkC,IAAL,IAAc,IAAlB,EAAwB;AACtB;AACAhC,uBAAO,CAACC,IAAR,CAAa,eAAe,MAAI,CAAC+B,IAAL,CAAUC,QAAtC;AACD,eAHD,MAGO;AACLjC,uBAAO,CAACkC,KAAR,CAAc,gDAAd;AACD;AACF,aATD;AAUD;;;;;;;yBArDUlB,e,EAAe,uJ,EAAA,kJ,EAAA,yH,EAAA,gEAyB0H,wDAzB1H,C;AAyBkI,O;;;cAzBjJA,e;AAAe,mC;AAAA;AAAA;;qBAAf,oB;AAAgB,a,EAAA,K,EAAA,+D;;;;;;;;ACX7B;;AACM;;AAEE;;AAAwB;;AAA0E;;AAElG;;AAGA;;AAiBF;;AACN;;;;AAvBW;;AAAA;;AAEkB;;AAAA;;AAGP;;AAAA;;;;;;;;;;wEDGTA,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACTb,oBAAQ,EAAE,YADD;AAETC,uBAAW,EAAE,yBAFJ;AAGTC,qBAAS,EAAE,CAAC,wBAAD;AAHF,W;AAKiB,U;;;;;;;;;;oBAyBmH,oD;qBAAO,wD;;;;AAnBpJ8B,kBAAQ;kBADP,0DACO;mBADM,gB,EAAkB,CAAC,QAAD,C;AACxB;;;;;;;;;;;;;;;;;;;AEjBV;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;UAGaC,W;;;;;;;;;;;;;;;;;;;ACHb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCE;;AAAkD;;;;AAA4C;;AAAqC;;AAAe;;AAAI;;;;;;AAApG;;AAAA;;AAA+C;;AAAA;;AAAkC;;AAAA;;;;;;AAkCvH;;AAAmE;;AAAY;;;;;;AAAjC;;AAAqB;;AAAA;;;;;;AAMnE;;AAA0D;;AAAe;;;;;;AAApC;;AAAqB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UD1B3DC,e;AAcX;;;AAGA,iCAAoBnD,KAApB,EAAmDoD,gBAAnD,EAA+FC,MAA/F,EAAuHpD,aAAvH,EAA6JF,oBAA7J,EAAyM;AAAA;;AAArL,eAAAC,KAAA,GAAAA,KAAA;AAA+B,eAAAoD,gBAAA,GAAAA,gBAAA;AAA4C,eAAAC,MAAA,GAAAA,MAAA;AAAwB,eAAApD,aAAA,GAAAA,aAAA;AAAsC,eAAAF,oBAAA,GAAAA,oBAAA;AAT7J,eAAAuD,QAAA,GAAmB,IAAnB;AAEA,eAAAC,YAAA,GAAyB,EAAzB;AACA,eAAAC,MAAA,GAAqB,EAArB;AACA,eAAAC,uBAAA,GAAkC,yBAAlC;AAK4M;AAE5M;;;;;;;qCAGQ;AAAA;;AACN;AAEA,iBAAKzD,KAAL,CACG0D,WADH,CAEGtB,SAFH,CAEa,UAAAuB,MAAM,EAAI;AACnB,oBAAI,CAACC,WAAL,GAAmBD,MAAM,CAAC,GAAD,CAAN,IAAe,IAAlC;AACA,oBAAI,CAACL,QAAL,GAAgBK,MAAM,CAAC,OAAD,CAAN,IAAmB,IAAnC;AACD,aALH;AAOA,iBAAKxD,QAAL,GAAgB,KAAKH,KAAL,CAAWI,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,UAAjC,CAAhB;AACA,iBAAKC,SAAL;AAEA,iBAAKsD,wBAAL;AACD;AAED;;;;;;sCAGS;AAAA;;AACP,iBAAK9D,oBAAL,CAA0BW,UAA1B,CAAqC,KAAKP,QAA1C,EAAoDQ,IAApD,CAAyD,UAAAC,QAAQ,EAAI;AACnE,oBAAI,CAACC,MAAL,GAAuBD,QAAvB;AACAE,qBAAO,CAACC,IAAR,CAAa,aAAa,MAAI,CAACF,MAAL,CAAYG,EAAzB,GAA8B,oBAA3C;AACD,aAHD;AAID;AAED;;;;;;qDAG2B;AAAA;;AACzBF,mBAAO,CAACC,IAAR,CAAa,6CAA6C,KAAKZ,QAAlD,GAA6D,OAA1E;AACA,iBAAKF,aAAL,CAAmB6D,eAAnB,CAAmC,KAAK3D,QAAxC,EAAkDQ,IAAlD,CAAuD,UAAAC,QAAQ,EAAI;AACjE,oBAAI,CAAC2C,YAAL,GAA8B3C,QAA9B;AACAE,qBAAO,CAACC,IAAR,CAAa,8BAA8B,MAAI,CAACwC,YAAL,CAAkBQ,MAA7D;;AAEA,kBAAI,MAAI,CAACR,YAAL,CAAkBQ,MAAlB,GAA2B,CAA/B,EAAkC;AAChC,sBAAI,CAACC,YAAL,CAAkB,MAAI,CAAC7D,QAAvB,EAAiC,MAAI,CAACoD,YAAL,CAAkB,CAAlB,CAAjC;AACD;AACF,aAPD;AAQD;AAED;;;;;;uCAGapD,Q,EAAkB8D,Q,EAAkB;AAAA;;AAC/C,iBAAKhE,aAAL,CAAmBiE,MAAnB,CAA0B/D,QAA1B,EAAoC8D,QAApC,EAA8C,IAA9C,EAAoDtD,IAApD,CAAyD,UAAAC,QAAQ,EAAI;AACnE,oBAAI,CAAC4C,MAAL,GAA0B5C,QAA1B;AACAE,qBAAO,CAACC,IAAR,CAAa,SAAS,MAAI,CAACyC,MAAL,CAAYO,MAArB,GAA8B,yBAA9B,GAA0D5D,QAA1D,GAAqE,qBAAlF;AACD,aAHD;AAID;AAED;;;;;;0CAGgB8D,Q,EAAkB;AAChC;AACAnD,mBAAO,CAACC,IAAR,CAAa,4CAA4CkD,QAA5C,GAAuD,OAApE;AACA,iBAAKD,YAAL,CAAkB,KAAK7D,QAAvB,EAAiC8D,QAAjC;AACD;AAED;;;;;;;;iCAKOE,Q,EAAkBC,W,EAAqBC,U,EAAkB;AAAA;;AAC9D,gBAAIF,QAAQ,IAAI,IAAZ,IAAqBA,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,CAACJ,MAAT,IAAmB,CAAhE,EAAoE;AAClEO,mBAAK,CAAC,gDAAD,CAAL;AACA;AACD;;AAED,gBAAIC,MAAM,GAAG,KAAKC,eAAlB,CAN8D,CAQ9D;;AACA,gBAAI;AACFC,qBAAO,CAACC,MAAR,CAAe,iBAAf;AACD,aAFD,CAEE,OAAMC,CAAN,EAAS;AACTL,mBAAK,CAAC,YAAYK,CAAb,CAAL;AACD;;AAED7D,mBAAO,CAACC,IAAR,CAAa,cAAcoD,QAAd,GAAyB,KAAzB,GAAiCI,MAA9C;AAEA,iBAAKnB,gBAAL,CAAsBwB,MAAtB,CAA6BT,QAA7B,EAAuCI,MAAvC,EAA+C,KAAKpE,QAApD,EAA8D,KAAKmD,QAAnE,EAA6E3C,IAA7E,CAAkF,UAAAC,QAAQ,EAAI;AAC5F,kBAAIiE,IAAI,GAAGjE,QAAX;AACAE,qBAAO,CAACC,IAAR,CAAa,6BAA6B8D,IAA1C;AAEA/D,qBAAO,CAACC,IAAR,CAAa,4BAA4BsD,UAAzC;;AACA,kBAAIA,UAAU,IAAI,MAAI,CAACZ,uBAAvB,EAAgD;AAC9C3C,uBAAO,CAACC,IAAR,CAAa,2BAA2BsD,UAA3B,GAAwC,OAArD;;AACA,sBAAI,CAACpE,aAAL,CAAmB6E,WAAnB,CAA+B,MAAI,CAAC3E,QAApC,EAA8CiE,WAA9C,EAA2DC,UAA3D,EAAuEQ,IAAvE,EAA6ElE,IAA7E,CAAkF,UAAAC,QAAQ,EAAI;AAC5F;AACAE,yBAAO,CAACC,IAAR,CAAa,yBAAb;AACD,iBAHD;AAID;;AAED,oBAAI,CAACsC,MAAL,CAAY0B,QAAZ,CAAqB,CAAC,gCAAgC,MAAI,CAAC5E,QAAtC,CAArB;AACD,aAdD;AAeD;;;;;;;yBAvHUgD,e,EAAe,+H,EAAA,6I,EAAA,uH,EAAA,uI,EAAA,qJ;AAAA,O;;;cAAfA,e;AAAe,oC;AAAA,iB;AAAA,gB;AAAA,o0B;AAAA;AAAA;;;ACf5B;;AACE;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACA;;AAAG;;;;AAAyK;;AAC5K;;AACN;;AACG;AAAA;AAAA;;AAgBD;;AAEQ;;AACE;;AAAK;;AAEL;;;;AAEA;;AAAqF;AAAA;;AAAA;;AAAA,qBAAU,IAAA6B,eAAA,WAAV;AAA6C,aAA7C;;AACnF;;AACF;;AACA;;AAEA;;AACE;;AAA4D;;AAAgB;;AAC5E;;AACF;;AACF;;AAEV;;AAEM;;AAAwD;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,qBAAS,IAAAJ,MAAA,iCAAT;AAAqE,aAArE;;AAAqF;;;;AAAiC;;AAC9K;;AACF;;AACF;;AAEF;;;;AAnDK;;AAAA;;AAOmG;;AAAA;;AAAwB;;AAG7H;;AAAA,qGAA6B,MAA7B,EAA6B,8IAA7B;;AAkBgC;;AAAA;;AAGvB;;AAAA;;AAGU;;AAAA;;AAKgB;;AAAA;;AAChB;;AAAA;;AAM6H;;AAAA;;;;;;;;;;wEDhCtIzB,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACTlC,oBAAQ,EAAE,aADD;AAETC,uBAAW,EAAE,0BAFJ;AAGTC,qBAAS,EAAE,CAAC,yBAAD;AAHF,W;AAKiB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEf5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCA;;AACE;;AAA2B;;;;AAA6E;;AAC1G;;;;;;AAD6B;;AAAA;;;;;;AAQrB;;AACE;;AAAsB;;AAAO;;AAAI;;AACjC;;AAAK;;AACP;;;;;;AANN;;AACE;;AACE;;AACE;;AAIA;;AAAuB;;;;AAAmC;;AAC5D;;AACF;;AACF;;;;;;AAPY;;AAAA;;AAIiB;;AAAA;;;;;;AAM7B;;AACE;;AACE;;AACE;;AAAmB;;;;AAA0C;;AACjE;;AAAiB;;AAAiC;;AAClD;;AAAiB;;AAAyC;;AACxD;;AACF;;AACF;;;;;;AALyB;;AAAA;;AACN;;AAAA;;AACA;;AAAA;;;;;;AAMnB;;AACE;;AACE;;AACE;;AAAmB;;;;AAAiD;;AACpE;;AAAiB;;;;AAAkE;;AACnF;;AAAiB;;;;AAA6C;;AAC9D;;AAAiB;;AAAsC;;;;AAAmC;;AAAI;;AAAM;;AAAM;;;;AAA6B;;AAAO;;AAAM;;AAAM;;;;AAAoC;;AAAO;;AAAC;;AAatM;;AAEE;;AACE;;AAAI;;;;AAAsE;;AAC1E;;AAAiB;;;;AAAqE;;AACxF;;AACA;;AACE;;AAAI;;AAAM;;AACV;;AAAI;;;;AAA+C;;AAA+O;;;;AAA8C;;AAAI;;AACtV;;AAIF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACA;;AAAkB;;;;AAAuD;;AACzE;;AAAG;;;;AAAsD;;AAC3D;;AACA;;AACE;;AACA;;AAAkB;;;;AAA+C;;AACjE;;AAAG;;;;AAA8C;;AACnD;;AACF;;AAEA;;AACE;;AACE;;AACA;;AAAkB;;;;AAAyD;;AAC3E;;AAAG;;;;AAAyD;;AAC9D;;AACA;;AACE;;AACA;;AAAmB;;;;AAA0C;;AAC7D;;AAAG;;;;AAA2C;;AAAsC;;;;AAA2C;;AAAI;;;;AAA2C;;AAChL;;AACF;;AAEA;;AACE;;AACE;;AACA;;AAAkB;;;;AAAiD;;AACnE;;AAAG;;;;AAAgD;;AACrD;;AACA;;AACE;;AACA;;AAAkB;;;;AAAiD;;AACnE;;AAEE;;AAA0C;;AAA8C;;AAAM;;AAAyB;;AAAQ;;AAAK;;AAAS;;AAAO;;AACpJ;;AAAK;;AACL;;AAA4C;;AAAiD;;AAAM;;AAAyB;;AAAQ;;AAAK;;AAAS;;AAAO;;AAGzJ;;AAUF;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AAAc;;;;AAAsC;;AACpD;;AAAiB;;;;AAAqC;;AACxD;;AACF;;AACA;;AACE;;AAIE;;AAAkB;;AAAiB;;AACrC;;AACF;;AAEA;;AACE;;AACE;;AAAiB;;AAAM;;AACzB;;AACF;;AAEF;;AACF;;AACF;;;;AAjHyB;;AAAA;;AACF;;AAAA;;AACA;;AAAA;;AACsC;;AAAA;;AAAmD;;AAAA;;AAAgD;;AAAA;;AAgBlJ;;AAAA;;AACa;;AAAA;;AAIb;;AAAA;;AAA8R;;AAAA;;AAW5Q;;AAAA;;AACf;;AAAA;;AAIe;;AAAA;;AACf;;AAAA;;AAOe;;AAAA;;AACf;;AAAA;;AAIgB;;AAAA;;AAChB;;AAAA;;AAAiF;;AAAA;;AAA+C;;AAAA;;AAOjH;;AAAA;;AACf;;AAAA;;AAIe;;AAAA;;AA0BR;;AAAA;;AACG;;AAAA;;;;UDnHhB8D,a;AASX,+BAAoB5B,MAApB,EAA4CrD,KAA5C,EAA2ED,oBAA3E,EAA+HgC,qBAA/H,EAA6K;AAAA;;AAAzJ,eAAAsB,MAAA,GAAAA,MAAA;AAAwB,eAAArD,KAAA,GAAAA,KAAA;AAA+B,eAAAD,oBAAA,GAAAA,oBAAA;AAAoD,eAAAgC,qBAAA,GAAAA,qBAAA,CAA8C,CAP7K;;AACA,eAAAoC,QAAA,GAAmB,IAAnB;AAOErD,iBAAO,CAACC,IAAR,CAAa,2CAAb;AACD;AAED;;;;;;;qCAGQ;AAAA;;AACN,iBAAKmE,eAAL;AAEA,iBAAK5C,OAAL;AAEA,iBAAKtC,KAAL,CACG0D,WADH,CAEGtB,SAFH,CAEa,UAAAuB,MAAM,EAAI;AACnB,qBAAI,CAACQ,QAAL,GAAgBR,MAAM,CAAC,GAAD,CAAN,IAAe,IAA/B;;AAEA,kBAAI,OAAI,CAACQ,QAAL,IAAiB,IAArB,EAA2B;AACzBrD,uBAAO,CAACC,IAAR,CAAa,kCAAkC,OAAI,CAACoD,QAApD,EADyB,CAEzB;;AAEA,uBAAI,CAACgB,cAAL,CAAoB,OAAI,CAAChB,QAAzB;AACD;AACF,aAXH;AAYD;AAED;;;;;;oCAGO;AAAA;;AACL,iBAAKpC,qBAAL,CAA2BO,OAA3B,GAAqC3B,IAArC,CAA0C,UAAAC,QAAQ,EAAI;AACpD,qBAAI,CAACkC,IAAL,GAAkBlC,QAAlB;;AAEA,kBAAI,OAAI,CAACkC,IAAL,IAAc,IAAlB,EAAwB;AACtBhC,uBAAO,CAACC,IAAR,CAAa,eAAe,OAAI,CAAC+B,IAAL,CAAUC,QAAtC;AACA,uBAAI,CAACqC,cAAL,GAAsB,IAAtB;AACD,eAHD,MAGO;AACLtE,uBAAO,CAACkC,KAAR,CAAc,qBAAd;AACA,uBAAI,CAACoC,cAAL,GAAsB,KAAtB;AACD;AACF,aAVD;AAWD;AAED;;;;;;4CAGe;AAAA;;AACbtE,mBAAO,CAACC,IAAR,CAAa,6CAAb;AACA,iBAAKhB,oBAAL,CAA0BsF,UAA1B,GAAuC1E,IAAvC,CAA4C,UAAAC,QAAQ,EAAI;AACtD,qBAAI,CAAC0E,YAAL,GAAkC1E,QAAlC;AACD,aAFD;AAGD;AAED;;;;;;yCAGeuD,Q,EAAgB;AAE7B,gBAAIA,QAAQ,CAACJ,MAAT,KAAoB,CAAxB,EAA2B;AACzBO,mBAAK,CAAC,mCAAD,CAAL;AACA;AACD,aAL4B,CAO7B;;;AACA,gBAAIiB,SAAS,GAAGC,IAAI,CAACC,GAAL,EAAhB;AACA,iBAAKpC,MAAL,CAAY0B,QAAZ,CAAqB,CAAC,MAAD,CAArB,EAA+B;AAAErB,yBAAW,EAAE;AAAE,qBAAKS,QAAP;AAAiB,sBAAMoB;AAAvB;AAAf,aAA/B;AACD;;;;;;;yBA3EUN,a,EAAa,uH,EAAA,+H,EAAA,qJ,EAAA,uJ;AAAA,O;;;cAAbA,a;AAAa,iC;AAAA,gB;AAAA,e;AAAA,qjD;AAAA;AAAA;ACX1B;;AAIA;;AAEE;;AAaA;;AAWA;;AAqHF;;;;AAnJwB;;AAMjB;;AAAA;;AAaiB;;AAAA;;AAWC;;AAAA;;;;;;;;;;wEDnBZA,a,EAAa;gBALzB,uDAKyB;iBALf;AACThE,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,uBAFJ;AAGTC,qBAAS,EAAE,CAAC,sBAAD;AAHF,W;AAKe,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ1B;AAAA;;;AAAA;AAAA;AAAA,S,CAAA;AACA;AACA;;;AAEO,UAAMuE,WAAW,GAAG;AACzBC,kBAAU,EAAE,KADa;AAEzBC,kBAAU,EAAE;AAFa,OAApB,C,CAKP;AACA;AACA;;AAEA;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCPaC,a;AAWX;;;AAGA,+BAAoBC,UAApB,EAA4C;AAAA;;AAAxB,eAAAA,UAAA,GAAAA,UAAA;AAZpB,eAAAC,OAAA,GAAU,sEAAYH,UAAtB;AAGA,eAAAI,QAAA,GAAsB,EAAtB;AACA,eAAAC,eAAA,GAAoC,EAApC;AACA,eAAAC,OAAA,GAAkB,EAAlB;AACA,eAAA1C,MAAA,GAAqB,EAArB;AACA,eAAAD,YAAA,GAAyB,EAAzB;AAMEzC,iBAAO,CAACC,IAAR,CAAa,4BAAb;AACD;AAED;;;;;;;;;qCAKiBZ,Q,EAAkBgG,U,EAAkB;;;;;;;;;AACnD;AACArF,6BAAO,CAACC,IAAR,CAAa,kBAAkBZ,QAAlB,GAA6B,KAA7B,GAAqCgG,UAArC,GAAkD,GAA/D;AAEIC,yB,GAAM,KAAKL,OAAL,GAAe,aAAf,GAA+B5F,QAA/B,GAA0C,U;AAChDkG,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,+BAAI,CAACV,UAAL,CAAgBW,IAAhB,CAAqBL,GAArB,EAA0B;AAACD,oCAAU,EAAVA;AAAD,yBAA1B,EAAwC;AAAEO,sCAAY,EAAE;AAAhB,yBAAxC,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB;AACAE,iCAAO,CAACC,IAAR,CAAa,oBAAoBoF,UAAjC;AACAI,iCAAO;AACN,yBANL,WAOS,UAAA3F,QAAQ,EAAI;AACjBE,iCAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC/F,iCAAO,CAACC,IAAR,CAAa,kDAAkD8F,KAAK,CAACC,OAAxD,GAAkE,IAAlE,GAAyED,KAAK,CAACE,IAA5F;;AACA,8BAAInG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BtC,iCAAK,CAAC,8BAAD,CAAL;AACAxD,mCAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,kCAAM;AACP,2BAJD,MAIO;AACLlC,iCAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,kCAAM;AACP;AACF,yBAnBH;AAoBD,uBArBa,C,EAsBd;;AACA1F,6BAAO,CAACC,IAAR,CAAa,2BAAb;uDACOsF,O;;;;;;;;;AACR;AAED;;;;;;;;wCAKoBlG,Q,EAAkBK,S,EAAiB;;;;;;;;;AACrD;AACAM,6BAAO,CAACC,IAAR,CAAa,qBAAqBZ,QAArB,GAAgC,KAAhC,GAAwCK,SAAxC,GAAoD,GAAjE;AAEI4F,yB,GAAM,KAAKL,OAAL,GAAe,aAAf,GAA+B5F,QAA/B,GAA0C,YAA1C,GAAyDK,S;AAC/D6F,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,+BAAI,CAACV,UAAL,WAAuBM,GAAvB,EAA4B;AAAEM,sCAAY,EAAE;AAAhB,yBAA5B,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB;AACAE,iCAAO,CAACC,IAAR,CAAa,sBAAsBP,SAAnC;AACA+F,iCAAO;AACN,yBANL,WAOS,UAAA3F,QAAQ,EAAI;AACjBE,iCAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC/F,iCAAO,CAACC,IAAR,CAAa,qDAAqD8F,KAAK,CAACC,OAA3D,GAAqE,IAArE,GAA4ED,KAAK,CAACE,IAA/F;;AACA,8BAAInG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BtC,iCAAK,CAAC,8BAAD,CAAL;AACAxD,mCAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,kCAAM;AACP,2BAJD,MAIO;AACLlC,iCAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,kCAAM;AACP;AACF,yBAnBH;AAoBD,uBArBa,C,EAsBd;;AACA1F,6BAAO,CAACC,IAAR,CAAa,8BAAb;wDACOsF,O;;;;;;;;;AACR;AAED;;;;;;;;6CAKyBlG,Q,EAAkBK,S,EAAiB;;;;;;;;;AAC1D;AACAM,6BAAO,CAACC,IAAR,CAAa,8BAAb;AAEIqF,yB,GAAM,KAAKL,OAAL,GAAe,aAAf,GAA+B5F,QAA/B,GAA0C,YAA1C,GAAyDK,SAAzD,GAAqE,a;AAC3E6F,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,+BAAI,CAACV,UAAL,CAAgBxF,GAAhB,CAAoB8F,GAApB,EAAyB;AAAEM,sCAAY,EAAE;AAAhB,yBAAzB,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,iCAAI,CAACqF,eAAL,GAAyCrF,QAAzC;AACAE,iCAAO,CAACC,IAAR,CAAa,uCAAuC,OAAI,CAACkF,eAAL,CAAqBlC,MAAzE;AACAwC,iCAAO,CAAC,OAAI,CAACN,eAAN,CAAP;AACC,yBANL,WAOS,UAAArF,QAAQ,EAAI;AACjBE,iCAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC,8BAAIjG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3B9F,mCAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,kCAAM;AACP,2BAHD,MAGO;AACLlC,iCAAK,CAAC,uBAAuBuC,KAAK,CAACE,IAA7B,GAAoC,IAApC,GAA2CF,KAAK,CAACC,OAAlD,CAAL;AACAN,kCAAM;AACP;AACF,yBAjBH;AAkBD,uBAnBa,C;wDAoBPH,O;;;;;;;;;AACR;AAED;;;;;;;sCAIkBlG,Q,EAAgB;;;;;;;;;AAChC;AACAW,6BAAO,CAACC,IAAR,CAAa,sBAAb;AAEIqF,yB,GAAM,KAAKL,OAAL,GAAe,aAAf,GAA+B5F,QAA/B,GAA0C,W;AAChDkG,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,+BAAI,CAACV,UAAL,CAAgBxF,GAAhB,CAAoB8F,GAApB,EAAyB;AAAEM,sCAAY,EAAE;AAAhB,yBAAzB,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,iCAAI,CAACoF,QAAL,GAA2BpF,QAA3B;AACAE,iCAAO,CAACC,IAAR,CAAa,+BAA+B,OAAI,CAACiF,QAAL,CAAcjC,MAA1D;AACAwC,iCAAO,CAAC,OAAI,CAACP,QAAN,CAAP;AACC,yBANL,WAOS,UAAApF,QAAQ,EAAI;AACjBE,iCAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC,8BAAIjG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3B9F,mCAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,kCAAM;AACP,2BAHD,MAGO;AACLlC,iCAAK,CAAC,uBAAuBuC,KAAK,CAACE,IAA7B,GAAoC,IAApC,GAA2CF,KAAK,CAACC,OAAlD,CAAL;AACAN,kCAAM;AACP;AACF,yBAjBH;AAkBD,uBAnBa,C;wDAoBPH,O;;;;;;;;;AACR;AAED;;;;;;;sCAIkBlG,Q,EAAkB6G,gB,EAAwB;;;;;;;;;AAC1D;AACAlG,6BAAO,CAACC,IAAR,CAAa,yBAAb;AAEIqF,yB,GAAM,KAAKL,OAAL,GAAe,aAAf,GAA+B5F,QAA/B,GAA0C,W;;AACpD,0BAAI6G,gBAAgB,GAAG,CAAvB,EAA0B;AACxBZ,2BAAG,GAAG,KAAKL,OAAL,GAAe,aAAf,GAA+B5F,QAA/B,GAA0C,gCAA1C,GAA6E6G,gBAAnF;AACD;;AACGX,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,+BAAI,CAACV,UAAL,CAAgBxF,GAAhB,CAAoB8F,GAApB,EAAyB;AAAEM,sCAAY,EAAE;AAAhB,yBAAzB,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,iCAAI,CAACqG,QAAL,GAAgCrG,QAAhC;AACAE,iCAAO,CAACC,IAAR,CAAa,uCAAb;AACAwF,iCAAO,CAAC,OAAI,CAACU,QAAN,CAAP;AACC,yBANL,WAOS,UAAArG,QAAQ,EAAI;AACjBE,iCAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC,8BAAIjG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3B9F,mCAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,kCAAM;AACP,2BAHD,MAGO;AACLlC,iCAAK,CAAC,uBAAuBuC,KAAK,CAACE,IAA7B,GAAoC,IAApC,GAA2CF,KAAK,CAACC,OAAlD,CAAL;AACAN,kCAAM;AACP;AACF,yBAjBH;AAkBD,uBAnBa,C;wDAoBPH,O;;;;;;;;;AACR;AAED;;;;;;iCAGalG,Q,EAAkB8D,Q,EAAkBT,M,EAAkB;;;;;;;;;AACjE1C,6BAAO,CAACC,IAAR,CAAa,2BAA2BkD,QAA3B,GAAsC,OAAnD;AAEImC,yB,GAAM,KAAKL,OAAL,GAAe,mBAAf,GAAqC5F,QAArC,GAAgD,YAAhD,GAA+D8D,Q;AAErEoC,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,+BAAI,CAACV,UAAL,CAAgBW,IAAhB,CAAqBL,GAArB,EAA0B;AAAE5C,gCAAM,EAANA;AAAF,yBAA1B,EAAsC;AAAEkD,sCAAY,EAAE;AAAhB,yBAAtC,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB;AACA;AACAE,iCAAO,CAACC,IAAR,CAAa,wBAAb;AACAwF,iCAAO,GAJS,CAKhB;AACC,yBARL,WASS,UAAA3F,QAAQ,EAAI;AACjBE,iCAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC/F,iCAAO,CAACC,IAAR,CAAa,kDAAkD8F,KAAK,CAACC,OAAxD,GAAkE,IAAlE,GAAyED,KAAK,CAACE,IAA5F;;AACA,8BAAInG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BtC,iCAAK,CAAC,8BAAD,CAAL;AACAxD,mCAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,kCAAM;AACP,2BAJD,MAIO;AACLlC,iCAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,kCAAM;AACP;AACF,yBArBH;AAsBD,uBAvBa,C,EAyBd;;AACA1F,6BAAO,CAACC,IAAR,CAAa,uBAAb;wDACOsF,O;;;;;;;;;AACR;AAED;;;;;;;;kCAKcrF,E,EAAYkG,U,EAAkB;;;;;;;;;AAC1CpG,6BAAO,CAACC,IAAR,CAAa,4DAA4DC,EAA5D,GAAiE,gCAAjE,GAAoGkG,UAApG,GAAiH,OAA9H;AAEId,yB,GAAM,KAAKL,OAAL,GAAe,aAAf,GAA+B/E,EAA/B,GAAoC,gBAApC,GAAuDkG,U;AAE7Db,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,+BAAI,CAACV,UAAL,CAAgBxF,GAAhB,CAAoB8F,GAApB,EACGO,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB2F,iCAAO;AACN,yBAJL,WAKS,UAAA3F,QAAQ,EAAI;AACjB;AACAE,iCAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAHiB,CAGkB;;AACnC/F,iCAAO,CAACC,IAAR,CAAa,uBAAuB8F,KAAK,CAACC,OAA1C;AACAxC,+BAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,gCAAM,CAACK,KAAK,CAACC,OAAP,CAAN;AACD,yBAZH;AAaD,uBAda,C,EAed;;wDACOT,O;;;;;;;;;AACR;AAED;;;;;;;;uCAKmBrF,E,EAAYmG,K,EAAa;;;;;;;;;AAC1CrG,6BAAO,CAACC,IAAR,CAAa,uEAAuEoG,KAAvE,GAA+E,eAA/E,GAAiGnG,EAAjG,GAAsG,OAAnH;AAEIoF,yB,GAAM,KAAKL,OAAL,GAAe,aAAf,GAA+B/E,EAA/B,GAAoC,qBAApC,GAA4DmG,K;AAElEd,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,+BAAI,CAACV,UAAL,CAAgBW,IAAhB,CAAqBL,GAArB,EAA0B;AAAEM,sCAAY,EAAE;AAAhB,yBAA1B,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,8BAAIwG,oBAAoB,GAAGxG,QAAQ,CAAC,uBAAD,CAAnC;;AACA,8BAAIwG,oBAAoB,KAAK,MAA7B,EAAqC;AACnCtG,mCAAO,CAACC,IAAR,CAAa,sBAAsBoG,KAAtB,GAA8B,0BAA3C;AACD,2BAFD,MAEO;AACLrG,mCAAO,CAACC,IAAR,CAAa,sBAAsBoG,KAAtB,GAA8B,0BAA3C;AACD;;AACDZ,iCAAO,CAACa,oBAAD,CAAP;AACC,yBAVL,WAWS,UAAAxG,QAAQ,EAAI;AACjB;AACAE,iCAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAHiB,CAGkB;;AACnC/F,iCAAO,CAACC,IAAR,CAAa,uBAAuB8F,KAAK,CAACC,OAA1C;;AACA,8BAAID,KAAK,CAACE,IAAN,KAAe,qBAAnB,EAA0C;AACxCzC,iCAAK,CAAC,cAAcuC,KAAK,CAACC,OAArB,CAAL;AACAP,mCAAO;AACR,2BAHD,MAGO;AACLjC,iCAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,kCAAM,CAACK,KAAK,CAACC,OAAP,CAAN;AACD;AACF,yBAvBH;AAwBD,uBAzBa,C,EA0Bd;;wDACOT,O;;;;;;;;;AACR;AAED;;;;;;gDAGsBlG,Q,EAAkB4C,Q,EAAkB;AAAA;;AACxDjC,mBAAO,CAACC,IAAR,CAAa,0BAA0BgC,QAA1B,GAAqC,4BAArC,GAAoE5C,QAApE,GAA+E,GAA5F;AAEA,gBAAIiG,GAAG,GAAG,KAAKL,OAAL,GAAe,aAAf,GAA+B5F,QAA/B,GAA0C,QAA1C,GAAqD4C,QAArD,GAAgE,YAA1E;AAEA,gBAAIsD,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,qBAAI,CAACV,UAAL,CAAgBuB,GAAhB,CAAoBjB,GAApB,EAAyB;AAAEM,4BAAY,EAAE;AAAhB,eAAzB,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,oBAAI0G,WAAW,GAAG1G,QAAQ,CAAC,WAAD,CAA1B;AACAE,uBAAO,CAACC,IAAR,CAAa,0BAA0BuG,WAAvC;AACAf,uBAAO,CAACe,WAAD,CAAP;AACC,eANL,WAOS,UAAA1G,QAAQ,EAAI;AACjBE,uBAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,oBAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC/F,uBAAO,CAACC,IAAR,CAAa,wEAAwE8F,KAAK,CAACC,OAA9E,GAAwF,IAAxF,GAA+FD,KAAK,CAACE,IAAlH;;AACA,oBAAInG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BtC,uBAAK,CAAC,8BAAD,CAAL;AACAxD,yBAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,wBAAM;AACP,iBAJD,MAIO;AACLlC,uBAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,wBAAM;AACP;AACF,eAnBH;AAoBD,aArBa,CAAd;AAuBA1F,mBAAO,CAACC,IAAR,CAAa,kDAAb;AACA,mBAAOsF,OAAP;AACD;AAED;;;;;;6CAGmBlG,Q,EAAkB4C,Q,EAAkB;AAAA;;AACrDjC,mBAAO,CAACC,IAAR,CAAa,0BAA0BgC,QAA1B,GAAqC,yBAArC,GAAiE5C,QAAjE,GAA4E,GAAzF;AAEA,gBAAIiG,GAAG,GAAG,KAAKL,OAAL,GAAe,aAAf,GAA+B5F,QAA/B,GAA0C,QAA1C,GAAqD4C,QAArD,GAAgE,SAA1E;AAEA,gBAAIsD,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,qBAAI,CAACV,UAAL,CAAgBuB,GAAhB,CAAoBjB,GAApB,EAAyB;AAAEM,4BAAY,EAAE;AAAhB,eAAzB,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,oBAAI2G,QAAQ,GAAG3G,QAAQ,CAAC,QAAD,CAAvB;AACAE,uBAAO,CAACC,IAAR,CAAa,uBAAuBwG,QAApC;AACAhB,uBAAO,CAACgB,QAAD,CAAP;AACC,eANL,WAOS,UAAA3G,QAAQ,EAAI;AACjBE,uBAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,oBAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC/F,uBAAO,CAACC,IAAR,CAAa,qEAAqE8F,KAAK,CAACC,OAA3E,GAAqF,IAArF,GAA4FD,KAAK,CAACE,IAA/G;;AACA,oBAAInG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BtC,uBAAK,CAAC,8BAAD,CAAL;AACAxD,yBAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,wBAAM;AACP,iBAJD,MAIO;AACLlC,uBAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,wBAAM;AACP;AACF,eAnBH;AAoBD,aArBa,CAAd;AAuBA1F,mBAAO,CAACC,IAAR,CAAa,+CAAb;AACA,mBAAOsF,OAAP;AACD;AAED;;;;;;kDAGwBlG,Q,EAAkB;AAAA;;AACxCW,mBAAO,CAACC,IAAR,CAAa,2CAA2CZ,QAA3C,GAAsD,GAAnE;AAEA,gBAAIiG,GAAG,GAAG,KAAKL,OAAL,GAAe,aAAf,GAA+B5F,QAA/B,GAA0C,aAApD;AAEA,gBAAIkG,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,qBAAI,CAACV,UAAL,CAAgBuB,GAAhB,CAAoBjB,GAApB,EAAyB;AAAEM,4BAAY,EAAE;AAAhB,eAAzB,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,oBAAI4G,qBAAqB,GAAG5G,QAAQ,CAAC,YAAD,CAApC,CADgB,CAEhB;;AACAE,uBAAO,CAACC,IAAR,CAAa,2CAA2CyG,qBAAxD;AACAjB,uBAAO,CAACiB,qBAAD,CAAP;AACC,eAPL,WAQS,UAAA5G,QAAQ,EAAI;AACjBE,uBAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,oBAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC/F,uBAAO,CAACC,IAAR,CAAa,iEAAiE8F,KAAK,CAACC,OAAvE,GAAiF,IAAjF,GAAwFD,KAAK,CAACE,IAA3G;;AACA,oBAAInG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BtC,uBAAK,CAAC,8BAAD,CAAL;AACAxD,yBAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,wBAAM;AACP,iBAJD,MAIO;AACLlC,uBAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,wBAAM;AACP;AACF,eApBH;AAqBD,aAtBa,CAAd;AAwBA1F,mBAAO,CAACC,IAAR,CAAa,0CAAb;AACA,mBAAOsF,OAAP;AACD;AAED;;;;;;;2CAIuBlG,Q,EAAkBsH,I,EAAc;;;;;;;;;AACrD3G,6BAAO,CAACC,IAAR,CAAa,4BAA4BZ,QAA5B,GAAuC,GAApD;AAEIiG,yB,GAAM,KAAKL,OAAL,GAAe,aAAf,GAA+B5F,QAA/B,GAA0C,O;AAEhDkG,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,+BAAI,CAACV,UAAL,CAAgB4B,KAAhB,CAAsBtB,GAAtB,EAA2B;AAACqB,8BAAI,EAAJA;AAAD,yBAA3B,EAAmC;AAAEf,sCAAY,EAAE;AAAhB,yBAAnC,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB;AACAE,iCAAO,CAACC,IAAR,CAAa,2CAAb;AACAwF,iCAAO;AACN,yBANL,WAOS,UAAA3F,QAAQ,EAAI;AACjBE,iCAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC/F,iCAAO,CAACC,IAAR,CAAa,yDAAyD8F,KAAK,CAACC,OAA/D,GAAyE,IAAzE,GAAgFD,KAAK,CAACE,IAAnG;;AACA,8BAAInG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BtC,iCAAK,CAAC,8BAAD,CAAL;AACAxD,mCAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,kCAAM;AACP,2BAJD,MAIO;AACLlC,iCAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,kCAAM;AACP;AACF,yBAnBH;AAoBD,uBArBa,C;AAuBd1F,6BAAO,CAACC,IAAR,CAAa,kCAAb;wDACOsF,O;;;;;;;;;AACR;AAED;;;;;;;mDAI+BlG,Q,EAAkBwH,M,EAAkB;;;;;;;;;AACjE7G,6BAAO,CAACC,IAAR,CAAa,uCAAuCZ,QAAvC,GAAkD,GAA/D;AAEIiG,yB,GAAM,KAAKL,OAAL,GAAe,aAAf,GAA+B5F,QAA/B,GAA0C,uB;AAEhDkG,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,+BAAI,CAACV,UAAL,CAAgBuB,GAAhB,CAAoBjB,GAApB,EAAyB;AAACuB,gCAAM,EAANA;AAAD,yBAAzB,EAAmC;AAAEjB,sCAAY,EAAE;AAAhB,yBAAnC,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB;AACAE,iCAAO,CAACC,IAAR,CAAa,sDAAb;AACAwF,iCAAO;AACN,yBANL,WAOS,UAAA3F,QAAQ,EAAI;AACjBE,iCAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC/F,iCAAO,CAACC,IAAR,CAAa,6DAA6D8F,KAAK,CAACC,OAAnE,GAA6E,IAA7E,GAAoFD,KAAK,CAACE,IAAvG;;AACA,8BAAInG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BtC,iCAAK,CAAC,8BAAD,CAAL;AACAxD,mCAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,kCAAM;AACP,2BAJD,MAIO;AACLlC,iCAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,kCAAM;AACP;AACF,yBAnBH;AAoBD,uBArBa,C;AAuBd1F,6BAAO,CAACC,IAAR,CAAa,sCAAb;yDACOsF,O;;;;;;;;;AACR;AAED;;;;;;;;kDAK8BlG,Q,EAAkByH,Q,EAAkBC,I,EAAc9E,Q,EAAkB+E,Q,EAAkB;;;;;;;;;AAClHhH,6BAAO,CAACC,IAAR,CAAa,0CAA0CZ,QAA1C,GAAqD,GAAlE;AAEIiG,yB,GAAM,KAAKL,OAAL,GAAe,aAAf,GAA+B5F,QAA/B,GAA0C,qB;AAEhDkG,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,+BAAI,CAACV,UAAL,CAAgBuB,GAAhB,CAAoBjB,GAApB,EAAyB;AAACwB,kCAAQ,EAARA,QAAD;AAAWC,8BAAI,EAAJA,IAAX;AAAiB9E,kCAAQ,EAARA,QAAjB;AAA2B+E,kCAAQ,EAARA;AAA3B,yBAAzB,EAA+D;AAAEpB,sCAAY,EAAE;AAAhB,yBAA/D,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB;AACAE,iCAAO,CAACC,IAAR,CAAa,kDAAb;AACAwF,iCAAO;AACN,yBANL,WAOS,UAAA3F,QAAQ,EAAI;AACjBE,iCAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC/F,iCAAO,CAACC,IAAR,CAAa,gEAAgE8F,KAAK,CAACC,OAAtE,GAAgF,IAAhF,GAAuFD,KAAK,CAACE,IAA1G;;AACA,8BAAInG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BtC,iCAAK,CAAC,8BAAD,CAAL;AACAxD,mCAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,kCAAM;AACP,2BAJD,MAIO;AACLlC,iCAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,kCAAM;AACP;AACF,yBAnBH;AAoBD,uBArBa,C;AAuBd1F,6BAAO,CAACC,IAAR,CAAa,yCAAb;yDACOsF,O;;;;;;;;;AACR;AAED;;;;;;;wCAIoBlG,Q,EAAgB;;;;;;;;;AAClC;AACAW,6BAAO,CAACC,IAAR,CAAa,qBAAb;AAEIqF,yB,GAAM,KAAKL,OAAL,GAAe,W;;AACzB,0BAAI5F,QAAQ,IAAI,IAAhB,EAAsB;AACpBiG,2BAAG,GAAGA,GAAG,GAAG,YAAN,GAAqBjG,QAA3B;AACD;;AACGkG,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,+BAAI,CAACV,UAAL,CAAgBxF,GAAhB,CAAoB8F,GAApB,EAAyB;AAAEM,sCAAY,EAAE;AAAhB,yBAAzB,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,iCAAI,CAACsF,OAAL,GAAuBtF,QAAvB;AACAE,iCAAO,CAACC,IAAR,CAAa,8BAA8B,OAAI,CAACmF,OAAL,CAAanC,MAAxD;AACAwC,iCAAO,CAAC,OAAI,CAACL,OAAN,CAAP;AACC,yBANL,WAOS,UAAAtF,QAAQ,EAAI;AACjBE,iCAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC,8BAAIjG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3B9F,mCAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,kCAAM;AACP,2BAHD,MAGO;AACLlC,iCAAK,CAAC,uBAAuBuC,KAAK,CAACE,IAA7B,GAAoC,IAApC,GAA2CF,KAAK,CAACC,OAAlD,CAAL;AACAN,kCAAM;AACP;AACF,yBAjBH;AAkBD,uBAnBa,C;yDAoBPH,O;;;;;;;;;AACR;AAED;;;;;;;;;iCAMalG,Q,EAAkB8D,Q,EAAkB8D,Q,EAAiB;;;;;;;;;AAChE;AACAjH,6BAAO,CAACC,IAAR,CAAa,aAAb;AAEIqF,yB,GAAM,KAAKL,OAAL,GAAe,oBAAf,GAAsCgC,QAAtC,GAAiD,YAAjD,GAAgE9D,Q;;AAC1E,0BAAI9D,QAAQ,IAAI,IAAhB,EAAsB;AACpBiG,2BAAG,GAAGA,GAAG,GAAG,WAAN,GAAoBjG,QAA1B;AACD;;AACGkG,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,+BAAI,CAACV,UAAL,CAAgBxF,GAAhB,CAAoB8F,GAApB,EAAyB;AAAEM,sCAAY,EAAE;AAAhB,yBAAzB,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,iCAAI,CAAC4C,MAAL,GAA0B5C,QAA1B;AACAE,iCAAO,CAACC,IAAR,CAAa,6BAA6B,OAAI,CAACyC,MAAL,CAAYO,MAAtD;AACAwC,iCAAO,CAAC,OAAI,CAAC/C,MAAN,CAAP;AACC,yBANL,WAOS,UAAA5C,QAAQ,EAAI;AACjBE,iCAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC,8BAAIjG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3B9F,mCAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,kCAAM;AACP,2BAHD,MAGO;AACLlC,iCAAK,CAAC,uBAAuBuC,KAAK,CAACE,IAA7B,GAAoC,IAApC,GAA2CF,KAAK,CAACC,OAAlD,CAAL;AACAN,kCAAM;AACP;AACF,yBAjBH;AAkBD,uBAnBa,C;yDAoBPH,O;;;;;;;;;AACR;AAED;;;;;;;0CAIsBlG,Q,EAAgB;;;;;;;;;AACpC;AACAW,6BAAO,CAACC,IAAR,CAAa,sBAAb;AAEIqF,yB,GAAM,KAAKL,OAAL,GAAe,mB;;AACzB,0BAAI5F,QAAQ,IAAI,IAAhB,EAAsB;AACpBiG,2BAAG,GAAGA,GAAG,GAAG,WAAN,GAAoBjG,QAA1B;AACD;;AACGkG,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,+BAAI,CAACV,UAAL,CAAgBxF,GAAhB,CAAoB8F,GAApB,EAAyB;AAAEM,sCAAY,EAAE;AAAhB,yBAAzB,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,iCAAI,CAAC2C,YAAL,GAA8B3C,QAA9B;AACAE,iCAAO,CAACC,IAAR,CAAa,gCAAgC,OAAI,CAACwC,YAAL,CAAkBQ,MAA/D;AACAwC,iCAAO,CAAC,OAAI,CAAChD,YAAN,CAAP;AACC,yBANL,WAOS,UAAA3C,QAAQ,EAAI;AACjBE,iCAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC,8BAAIjG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3B9F,mCAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,kCAAM;AACP,2BAHD,MAGO;AACLlC,iCAAK,CAAC,uBAAuBuC,KAAK,CAACE,IAA7B,GAAoC,IAApC,GAA2CF,KAAK,CAACC,OAAlD,CAAL;AACAN,kCAAM;AACP;AACF,yBAjBH;AAkBD,uBAnBa,C;yDAoBPH,O;;;;;;;;;AACR;AAED;;;;;;sCAGYlG,Q,EAAkB8D,Q,EAAkB+D,O,EAAiBnD,I,EAAc;AAAA;;AAC7E/D,mBAAO,CAACC,IAAR,CAAa,cAAc8D,IAAd,GAAqB,sBAArB,GAA8C1E,QAA9C,GAAyD,IAAtE;AAEA,gBAAIiG,GAAG,GAAG,KAAKL,OAAL,GAAe,uBAAf,GAAyC5F,QAAzC,GAAoD,YAApD,GAAmE8D,QAAnE,GAA8E,WAA9E,GAA4F+D,OAA5F,GAAsG,QAAtG,GAAiHnD,IAA3H;AAEA,gBAAIwB,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,qBAAI,CAACV,UAAL,CAAgBuB,GAAhB,CAAoBjB,GAApB,EAAyB,EAAzB,EAA6B;AAAEM,4BAAY,EAAE;AAAhB,eAA7B,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB;AACA;AACAE,uBAAO,CAACC,IAAR,CAAa,wBAAb;AACAwF,uBAAO,GAJS,CAKhB;AACC,eARL,WASS,UAAA3F,QAAQ,EAAI;AACjBE,uBAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,oBAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC/F,uBAAO,CAACC,IAAR,CAAa,qDAAqD8F,KAAK,CAACC,OAA3D,GAAqE,IAArE,GAA4ED,KAAK,CAACE,IAA/F;;AACA,oBAAInG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BtC,uBAAK,CAAC,8BAAD,CAAL;AACAxD,yBAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,wBAAM;AACP,iBAJD,MAIO;AACLlC,uBAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,wBAAM;AACP;AACF,eArBH;AAsBD,aAvBa,CAAd,CAL6E,CA8B7E;;AACA1F,mBAAO,CAACC,IAAR,CAAa,8BAAb;AACA,mBAAOsF,OAAP;AACD;;;;;;;yBAjpBUR,a,EAAa,uH;AAAA,O;;;eAAbA,a;AAAa,iBAAbA,aAAa,K;AAAA,oBAFZ;;;;;wEAEDA,a,EAAa;gBAHzB,wDAGyB;iBAHd;AACVhE,sBAAU,EAAE;AADF,W;AAGc,U;;;;;;;;;;;;;;;;;;;;;;ACb1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAWaoG,kB;AAOX;;;AAGA,oCAAoBnC,UAApB,EAAoDzC,MAApD,EAA4E6E,SAA5E,EAAyG;AAAA;;AAArF,eAAApC,UAAA,GAAAA,UAAA;AAAgC,eAAAzC,MAAA,GAAAA,MAAA;AAAwB,eAAA6E,SAAA,GAAAA,SAAA;AAR5E,eAAAnC,OAAA,GAAU,sEAAYH,UAAtB;AAGA,eAAAuC,OAAA,GAAoB,EAApB;AAMErH,iBAAO,CAACC,IAAR,CAAa,iCAAb;AACD;AAED;;;;;;;;;;;;;;wCAUcoD,Q,EAAkBgD,K,EAAehH,Q,EAAkBiI,c,EAAwBC,K,EAAeC,M,EAAc;AAAA;;AACpH;AACAxH,mBAAO,CAACC,IAAR,CAAa,yEAAyEoD,QAAzE,GAAoF,eAApF,GAAsGgD,KAAtG,GAA8G,mBAA9G,GAAoIhH,QAApI,GAA+I,OAA5J;AAEA,gBAAIiG,GAAG,GAAG,KAAKL,OAAL,GAAe,mBAAf,GAAqC5B,QAArC,GAAgD,SAAhD,GAA4DkE,KAA5D,GAAoE,UAApE,GAAiFC,MAA3F;;AACA,gBAAInB,KAAK,IAAI,IAAb,EAAmB;AACjB;AACAf,iBAAG,GAAGA,GAAG,GAAG,SAAN,GAAkBe,KAAxB;AACD;;AACD,gBAAIhH,QAAQ,IAAI,IAAhB,EAAsB;AACpBiG,iBAAG,GAAGA,GAAG,GAAG,YAAN,GAAqBjG,QAA3B;AACD;;AACD,gBAAIiI,cAAc,IAAI,IAAtB,EAA4B;AAC1BhC,iBAAG,GAAGA,GAAG,GAAG,sBAAN,GAA+BgC,cAArC;AACD;;AACD,gBAAI/B,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,qBAAI,CAACV,UAAL,CAAgBxF,GAAhB,CAAoB8F,GAApB,EAAyB;AAAEM,4BAAY,EAAE;AAAhB,eAAzB,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,oBAAIuG,KAAK,IAAI,IAAb,EAAmB;AACjBrG,yBAAO,CAACC,IAAR,CAAa,2CAA2CoG,KAA3C,GAAmD,yCAAhE;AACA,yBAAI,CAACgB,OAAL,GAAe,EAAf;AACD,iBAHD,MAGO;AACL,yBAAI,CAACA,OAAL,GAAyBvH,QAAzB;AACAE,yBAAO,CAACC,IAAR,CAAa,4DAA4D,OAAI,CAACoH,OAAL,CAAapE,MAAtF;;AACA,sBAAI,OAAI,CAACoE,OAAL,CAAapE,MAAb,IAAuB,CAA3B,EAA8B;AAC5BjD,2BAAO,CAACC,IAAR,CAAa,uCAAuCoD,QAAvC,GAAkD,IAA/D,EAD4B,CAE5B;AACD;AACF;;AACDoC,uBAAO,CAAC,OAAI,CAAC4B,OAAN,CAAP;AACC,eAfL,WAgBS,UAAAvH,QAAQ,EAAI;AACjB,oBAAIA,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,sBAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAD2B,CACQ;;AACnC,sBAAIC,OAAO,GAAG,IAAd;;AACA,sBAAID,KAAK,CAACE,IAAN,KAAe,qBAAnB,EAA0C;AACxCD,2BAAO,GAAG,OAAI,CAACoB,SAAL,CAAeK,OAAf,CAAuB,wBAAvB,CAAV;AACD,mBAFD,MAEO;AACLzB,2BAAO,GAAG,gCAAgCD,KAAK,CAACE,IAAhD;AACD,mBAP0B,CAQ3B;;;AACA,yBAAI,CAAC1D,MAAL,CAAY0B,QAAZ,CAAqB,CAAC,QAAD,CAArB,EAAiC;AAACrB,+BAAW,EAAE;AAAC,kCAAYS,QAAb;AAAuB,iCAAW2C;AAAlC;AAAd,mBAAjC,EAT2B,CAU3B;;AACD,iBAXD,MAWO,IAAIlG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAClC,sBAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CADkC,CACC;;AACnC,sBAAIC,OAAO,GAAG,IAAd;;AACA,sBAAID,KAAK,CAACE,IAAN,KAAe,2CAAnB,EAAgE;AAC9DD,2BAAO,GAAG,2BAA2BD,KAAK,CAAC2B,UAAN,CAAiB,UAAjB,CAA3B,GAA0D,4GAApE;AACD,mBAFD,MAEO;AACL1B,2BAAO,GAAG,gCAAgCD,KAAK,CAACE,IAAhD;AACD,mBAPiC,CAQlC;;;AACA,yBAAI,CAAC1D,MAAL,CAAY0B,QAAZ,CAAqB,CAAC,QAAD,CAArB,EAAiC;AAACrB,+BAAW,EAAE;AAAC,kCAAYS,QAAb;AAAuB,iCAAW2C;AAAlC;AAAd,mBAAjC,EATkC,CAUlC;;AACD,iBAXM,MAWA,IAAIlG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAClC,sBAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CADkC,CACC;;AACnC,sBAAIA,KAAK,CAACE,IAAN,KAAe,sBAAnB,EAA2C;AACzCjG,2BAAO,CAACC,IAAR,CAAa,mEAAmEZ,QAAnE,GAA8E,aAA3F;AACAqG,0BAAM,CAACK,KAAK,CAACE,IAAP,CAAN;AACD,mBAHD,MAGO;AACLjG,2BAAO,CAAC+F,KAAR,CAAc,uFAAuFA,KAAK,CAACE,IAA3G;AACD;AACF,iBARM,MAQA;AACLjG,yBAAO,CAACC,IAAR,CAAa,0DAA0DH,QAAQ,CAACgG,MAAhF;AACA9F,yBAAO,CAAC+F,KAAR,CAAc,uFAAuFjG,QAAQ,CAACiG,KAA9G,EAFK,CAGL;AACA;AACD;AACF,eArDH;AAsDD,aAvDa,CAAd;AAwDA,mBAAOR,OAAP;AACD;AAED;;;;;;;;;;;sCAQYlC,Q,EAAkBgD,K,EAAehH,Q,EAAkBiI,c,EAAsB;AAAA;;AACnF;AACAtH,mBAAO,CAACC,IAAR,CAAa,qCAAqCoD,QAArC,GAAgD,eAAhD,GAAkEgD,KAAlE,GAA0E,mBAA1E,GAAgGhH,QAAhG,GAA2G,OAAxH;AAEA,gBAAIiG,GAAG,GAAG,KAAKL,OAAL,GAAe,mBAAf,GAAqC5B,QAA/C;;AACA,gBAAIgD,KAAK,IAAI,IAAb,EAAmB;AACjB;AACAf,iBAAG,GAAGA,GAAG,GAAG,SAAN,GAAkBe,KAAxB;AACD;;AACD,gBAAIhH,QAAQ,IAAI,IAAhB,EAAsB;AACpBiG,iBAAG,GAAGA,GAAG,GAAG,YAAN,GAAqBjG,QAA3B;AACD;;AACD,gBAAIiI,cAAc,IAAI,IAAtB,EAA4B;AAC1BhC,iBAAG,GAAGA,GAAG,GAAG,sBAAN,GAA+BgC,cAArC;AACD;;AACD,gBAAI/B,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,qBAAI,CAACV,UAAL,CAAgBxF,GAAhB,CAAoB8F,GAApB,EAAyB;AAAEM,4BAAY,EAAE;AAAhB,eAAzB,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,uBAAI,CAAC2D,MAAL,GAAsB3D,QAAtB,CADgB,CAEhB;;AACAE,uBAAO,CAACC,IAAR,CAAa,+CAA+C,OAAI,CAACwD,MAAL,CAAYA,MAAxE;;AACA,oBAAI,OAAI,CAACA,MAAL,CAAYA,MAAZ,IAAsB,IAA1B,EAAgC;AAC9BzD,yBAAO,CAACC,IAAR,CAAa,uCAAuCoD,QAAvC,GAAkD,IAA/D,EAD8B,CAE9B;AACD;;AACDoC,uBAAO,CAAC,OAAI,CAAChC,MAAN,CAAP;AACC,eAXL,WAYS,UAAA3D,QAAQ,EAAI;AACjB,oBAAIA,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,sBAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAD2B,CACQ;;AACnC,sBAAIC,OAAO,GAAG,IAAd;;AACA,sBAAID,KAAK,CAACE,IAAN,KAAe,qBAAnB,EAA0C;AACxCD,2BAAO,GAAG,OAAI,CAACoB,SAAL,CAAeK,OAAf,CAAuB,wBAAvB,CAAV;AACD,mBAFD,MAEO;AACLzB,2BAAO,GAAG,gCAAgCD,KAAK,CAACE,IAAhD;AACD,mBAP0B,CAQ3B;;;AACA,yBAAI,CAAC1D,MAAL,CAAY0B,QAAZ,CAAqB,CAAC,QAAD,CAArB,EAAiC;AAACrB,+BAAW,EAAE;AAAC,kCAAYS,QAAb;AAAuB,iCAAW2C;AAAlC;AAAd,mBAAjC,EAT2B,CAU3B;;AACD,iBAXD,MAWO,IAAIlG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAClC,sBAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CADkC,CACC;;AACnC,sBAAIC,OAAO,GAAG,IAAd;;AACA,sBAAID,KAAK,CAACE,IAAN,KAAe,2CAAnB,EAAgE;AAC9DD,2BAAO,GAAG,2BAA2BD,KAAK,CAAC2B,UAAN,CAAiB,UAAjB,CAA3B,GAA0D,4GAApE;AACD,mBAFD,MAEO;AACL1B,2BAAO,GAAG,gCAAgCD,KAAK,CAACE,IAAhD;AACD,mBAPiC,CAQlC;;;AACA,yBAAI,CAAC1D,MAAL,CAAY0B,QAAZ,CAAqB,CAAC,QAAD,CAArB,EAAiC;AAACrB,+BAAW,EAAE;AAAC,kCAAYS,QAAb;AAAuB,iCAAW2C;AAAlC;AAAd,mBAAjC,EATkC,CAUlC;;AACD,iBAXM,MAWA;AACLhG,yBAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,sBAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFK,CAE8B;;AACnC/F,yBAAO,CAAC+F,KAAR,CAAc,mDAAmDA,KAAK,CAACC,OAAzD,GAAmE,IAAnE,GAA0ED,KAAK,CAACE,IAA9F;AACAzC,uBAAK,CAAC,mDAAmDuC,KAAK,CAACC,OAAzD,GAAmE,IAAnE,GAA0ED,KAAK,CAACE,IAAjF,CAAL,CAJK,CAKL;AACA;AACD;AACF,eA3CH;AA4CD,aA7Ca,CAAd;AA8CA,mBAAOV,OAAP;AACD;AAED;;;;;;iDAGuBlC,Q,EAAkBhE,Q,EAAgB;AAAA;;AACvD;AAEA,gBAAIiG,GAAG,GAAG,KAAKL,OAAL,GAAe,sCAAf,GAAwD5B,QAAlE;;AACA,gBAAIhE,QAAQ,IAAK,IAAjB,EAAuB;AACrBiG,iBAAG,GAAGA,GAAG,GAAG,YAAN,GAAqBjG,QAA3B;AACD;;AACD,gBAAIkG,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,qBAAI,CAACV,UAAL,CAAgBxF,GAAhB,CAAoB8F,GAApB,EAAyB;AAAEM,4BAAY,EAAE;AAAhB,eAAzB,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,uBAAI,CAAC2D,MAAL,GAAsB3D,QAAtB,CADgB,CAEhB;;AACAE,uBAAO,CAACC,IAAR,CAAa,mFAAmF,OAAI,CAACwD,MAAL,CAAYkE,iBAA5G;AACAlC,uBAAO,CAAC,OAAI,CAAChC,MAAN,CAAP;AACC,eAPL,WAQS,UAAA3D,QAAQ,EAAI;AACjB,oBAAIA,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,sBAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAD2B,CACQ;;AACnC,sBAAIC,OAAO,GAAG,gCAAgCD,KAAK,CAACE,IAApD,CAF2B,CAG3B;;AACAP,wBAAM;AACP,iBALD,MAKO;AACL1F,yBAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,sBAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFK,CAE8B;;AACnC/F,yBAAO,CAACC,IAAR,CAAa,gEAAgE8F,KAAK,CAACC,OAAtE,GAAgF,IAAhF,GAAuFD,KAAK,CAACE,IAA1G;AACAzC,uBAAK,CAAC,gEAAgEuC,KAAK,CAACC,OAAtE,GAAgF,IAAhF,GAAuFD,KAAK,CAACE,IAA9F,CAAL,CAJK,CAKL;AACD;AACF,eArBH;AAsBD,aAvBa,CAAd;AAwBA,mBAAOV,OAAP;AACD;;;;;;;yBA7MU4B,kB,EAAkB,uH,EAAA,8G,EAAA,4H;AAAA,O;;;eAAlBA,kB;AAAkB,iBAAlBA,kBAAkB,K;AAAA,oBAFjB;;;;;wEAEDA,kB,EAAkB;gBAH9B,wDAG8B;iBAHnB;AACVpG,sBAAU,EAAE;AADF,W;AAGmB,U;;;;;;;;;;;;;;;;;;;;;;;;;;ACX/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCE;;AAAkD;;AAAuB;;AAAS;;AAAK;;AAAE;;AAAiC;;AAAe;;AAAI;;;;;;AAAjD;;AAAA;;AAA8B;;AAAA;;;;;;;;AAsB5H;;AAAiD;;AAAa;;AAA8C;;AAAiB;;AAAO;;AAAY;;AAAqB;AAAA;;AAAA;;AAAA;AAAA;;AAAiC;;AAAmG;;AAAS;;;;;;AAAtM;;AAAA;;;;;;;;AAC0F;;AAA8G;AAAA;;AAAA;;AAAA;AAAA;;AAA9G;;;;;;;;AAA4I;;AAAgH;AAAA;;AAAA;;AAAA;AAAA;;AAAhH;;;;;;AAAlV;;AAAiD;;;;AAAoD;;AAAiC;;AAA6C;;AAAO;;AAAY;;AAA4I;;AAA8I;;;;;;AAA/a;;AAAA;;AAAqF;;AAAA;;AAAqE;;AAAA;;AAA4I;;AAAA;;;;;;AACvV;;AAAiD;;AAAwE;;;;;;AAAxE;;AAAA;;;;;;AAKjD;;AAAiD;;AAAgE;;;;;;AAAhE;;AAAA;;;;;;AA6BjD;;AAA0B;;AAA6B;;AAAyB;;AAAO;;AAA2B;;;;;;AAA3B;;AAAA;;;;;;AACvF;;AAA0B;;AAA6B;;;;AAAqD;;AAAO;;AAA6B;;AAAoG;;AAAgF;;AAAI;;;;;;AAAjR;;AAAA;;AAA4D;;AAAA;;;;;;;;AAEnH;;AAAiD;;AAAsB;;AAA4C;;AAAyB;;AAAO;;AAAY;;AAAgD;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAAa;;AAAS;;;;;;AAAjJ;;AAAA;;;;;;AAMnH;;AAAqF;;AAAkI;;;;;;AAAlI;;AAAA;;;;;;AACrF;;AAAgF;;AAAuC;;;;;;AAAvC;;AAAA;;;;;;;;AACxE;;AACE;;AACA;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,sBAAgC,cAAhC,CAAT;AAAwD,WAAxD;;AAAoG;;;;AAAyC;;AACvJ;;;;AAD8G;;AAAA;;;;UD5DzG6G,uB;AAKX,yCAAoB3I,oBAApB,EAAwEC,KAAxE,EAAuGC,aAAvG,EAA+JiC,QAA/J,EAAyK;AAAA;;AAArJ,eAAAnC,oBAAA,GAAAA,oBAAA;AAAoD,eAAAC,KAAA,GAAAA,KAAA;AAA+B,eAAAC,aAAA,GAAAA,aAAA;AAAwD,eAAAiC,QAAA,GAAAA,QAAA;AAAa;;;;qCAEpK;AACN,iBAAK/B,QAAL,GAAgB,KAAKH,KAAL,CAAWI,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,IAAjC,CAAhB;AACA,iBAAKC,SAAL;AACD;AAED;;;;;;sCAGS;AAAA;;AACP,iBAAKR,oBAAL,CAA0BW,UAA1B,CAAqC,KAAKP,QAA1C,EAAoDQ,IAApD,CAAyD,UAAAC,QAAQ,EAAI;AACnE,qBAAI,CAACC,MAAL,GAAuBD,QAAvB;AACAE,qBAAO,CAACC,IAAR,CAAa,aAAa,OAAI,CAACF,MAAL,CAAYG,EAAzB,GAA8B,oBAA3C;AACD,aAHD;AAID;AAED;;;;;;iDAGuB;AACrB;AACA,gBAAI,CAAC,KAAKkB,QAAL,CAAcS,cAAd,CAA6B,YAA7B,EAA2CgG,iBAAhD,EAAmE;AACjE;AACA,mBAAKzG,QAAL,CAAcS,cAAd,CAA6B,SAA7B,EAAwCiG,SAAxC,GAAoD,qGAApD;AAEA,mBAAK1G,QAAL,CAAcS,cAAd,CAA6B,YAA7B,EAA2CkG,eAA3C,GAA6D,MAA7D;AACD,aALD,MAKO;AACL,kBAAIC,UAAU,GAAG,KAAK5G,QAAL,CAAcS,cAAd,CAA6B,YAA7B,EAA2CiG,SAA5D,CADK,CAEL;;AACA,mBAAK3I,aAAL,CAAmB8I,gBAAnB,CAAoC,KAAK5I,QAAzC,EAAmD2I,UAAnD,EAA+DnI,IAA/D,CAAoE,UAAAC,QAAQ,EAAI;AAC9E;AACAE,uBAAO,CAACC,IAAR,CAAa,4CAAb;AACD,eAHD;AAKA,mBAAKmB,QAAL,CAAcS,cAAd,CAA6B,SAA7B,EAAwCiG,SAAxC,GAAoD,qGAApD;AAEA,mBAAK1G,QAAL,CAAcS,cAAd,CAA6B,YAA7B,EAA2CkG,eAA3C,GAA6D,OAA7D;AACD;AACF;AAED;;;;;;+CAGqBjB,Q,EAAkBC,I,EAAc9E,Q,EAAkB+E,Q,EAAkBkB,Y,EAAoB;AAAA;;AAC3G1E,iBAAK,CAAC,oCAAoCsD,QAApC,GAA+C,OAAhD,CAAL;AAEA,iBAAK3H,aAAL,CAAmBgJ,uBAAnB,CAA2C,KAAK9I,QAAhD,EAA0DyH,QAA1D,EAAoEC,IAApE,EAA0E9E,QAA1E,EAAoF+E,QAApF,EAA8FnH,IAA9F,CAAmG,UAAAC,QAAQ,EAAI;AAC7GE,qBAAO,CAACC,IAAR,CAAa,yCAAb;AAEA,kBAAI4G,MAAM,GAAa,CAACqB,YAAD,CAAvB;;AACA,qBAAI,CAAC/I,aAAL,CAAmBiJ,wBAAnB,CAA4C,OAAI,CAAC/I,QAAjD,EAA2DwH,MAA3D,EAAmEhH,IAAnE,CAAwE,UAAAC,QAAQ,EAAI;AAClFE,uBAAO,CAACC,IAAR,CAAa,4CAAb;;AAEA,uBAAI,CAACmB,QAAL,CAAcS,cAAd,CAA6B,gBAA7B,EAA+CC,SAA/C,CAAyDC,MAAzD,CAAgE,cAAhE;;AACA,uBAAI,CAACtC,SAAL;AACD,eALD;AAMD,aAVD;AAWD;AAED;;;;;;kCAGQ2G,U,EAAkB;AAAA;;AACxB;AACApG,mBAAO,CAACC,IAAR,CAAa,0CAA0CmG,UAA1C,GAAuD,OAApE;AACA,iBAAKhF,QAAL,CAAcS,cAAd,CAA6B,gBAA7B,EAA+CC,SAA/C,CAAyDC,MAAzD,CAAgE,cAAhE;AAEA,iBAAK5C,aAAL,CAAmBkJ,OAAnB,CAA2B,KAAKhJ,QAAhC,EAA0C+G,UAA1C,EAAsDvG,IAAtD,CAA2D,UAAAC,QAAQ,EAAI;AACrEE,qBAAO,CAACC,IAAR,CAAa,+BAAb;;AACA,qBAAI,CAACR,SAAL;AACD,aAHD;AAID;AAED;;;;;;6CAGmB;AAAA;;AACf;AACA,iBAAKN,aAAL,CAAmBmJ,uBAAnB,CAA2C,KAAKjJ,QAAhD,EAA0DQ,IAA1D,CAA+D,UAAAC,QAAQ,EAAI;AACzE,kBAAI4G,qBAAqB,GAAG5G,QAA5B,CADyE,CAEzE;;AACAE,qBAAO,CAACC,IAAR,CAAa,sCAAsCyG,qBAAnD,EAHyE,CAKzE;;AACA,qBAAI,CAACjH,SAAL,GANyE,CAOzE;;AACD,aARD;AASH;AAED;;;;;;+CAGqB;AACnB,gBAAI,CAAC,KAAK2B,QAAL,CAAcS,cAAd,CAA6B,UAA7B,EAAyCgG,iBAA9C,EAAiE;AAC/D;AACA,mBAAKzG,QAAL,CAAcS,cAAd,CAA6B,SAA7B,EAAwCiG,SAAxC,GAAoD,eAApD;AACA,mBAAK1G,QAAL,CAAcS,cAAd,CAA6B,SAA7B,EAAwC0G,KAAxC,CAA8CC,eAA9C,GAAgE,SAAhE;AAEA,mBAAKpH,QAAL,CAAcS,cAAd,CAA6B,UAA7B,EAAyCkG,eAAzC,GAA2D,MAA3D;AACD,aAND,MAMO;AACL,kBAAIU,eAAe,GAAG,KAAKrH,QAAL,CAAcS,cAAd,CAA6B,UAA7B,EAAyCiG,SAA/D,CADK,CAEL;;AACA,mBAAK7I,oBAAL,CAA0ByJ,yBAA1B,CAAoD,KAAKrJ,QAAzD,EAAmEoJ,eAAnE,EAAoF5I,IAApF,CAAyF,UAAAC,QAAQ,EAAI;AACnG;AACAE,uBAAO,CAACC,IAAR,CAAa,yCAAb;AACD,eAHD;AAKA,mBAAKmB,QAAL,CAAcS,cAAd,CAA6B,SAA7B,EAAwCiG,SAAxC,GAAoD,eAApD;AACA,mBAAK1G,QAAL,CAAcS,cAAd,CAA6B,SAA7B,EAAwC0G,KAAxC,CAA8CC,eAA9C,GAAgE,MAAhE;AAEA,mBAAKpH,QAAL,CAAcS,cAAd,CAA6B,UAA7B,EAAyCkG,eAAzC,GAA2D,OAA3D;AACD;AACF;;;;;;;yBAtHUH,uB,EAAuB,qJ,EAAA,+H,EAAA,uI,EAAA,gEAK2G,wDAL3G,C;AAKmH,O;;;cAL1IA,uB;AAAuB,4C;AAAA,kB;AAAA,gB;AAAA,mhF;AAAA;AAAA;;;ACZpC;;AACE;;AACF;;AAEA;;AACE;;AACA;;AAEE;;AACE;;AACE;;AAAI;;AAAO;;AACX;;AAAI;;AAAmB;;AACvB;;AAAI;;AAAkB;;AACtB;;AAAI;;AAAkB;;AACtB;;AAAI;;AAAmD;;AAAQ;;AAAI;;AACrE;;AACF;;AAEA;;AACJ;;AAAI;;;;AAAkC;;AACtC;;AACA;;AAAI;;AAAO;;AACX;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAAI;;AAAmB;;AACvB;;AACA;;AACQ;;AACE;;AACA;;AAAQ;AAAA;;AAAA;;AAAA,qBAAS,qBAAgC,cAAhC,CAAT;AAAwD,aAAxD;;AAAoG;;AAAO;;AACrH;;AAEA;;AACE;;AACE;;AAAI;;;;AAAiC;;AACrC;;AAAiB;;;;AAAsD;;AACvE;;AACE;;AAAqB;;AAAM;;AAC3B;;AAA6B;;AAAmB;;AAChD;;AAA8B;;AAAY;;AAC1C;;AAA8B;;AAAa;;AAC3C;;AAAgC;;AAAe;;AACjD;;AACA;;AACE;;AAAkE;AAAA;;AAAA;;AAAA,qBAAS,qBAAgC,cAAhC,CAAT;AAAwD,aAAxD;;AAA0D;;;;AAAgC;;AAC5J;;AAAkD;AAAA;;AAAA;;AAAA,qBAAS,IAAAS,OAAA,WAAT;AAAmC,aAAnC;;AAAqC;;AAAO;;AAChG;;AACF;;AACF;;AACR;;AAEA;;AAAI;;AAAkB;;AACtB;;AACA;;AAAG;;AAA8J;;AACjK;;AACA;;AACA;;AAEA;;AAEA;;AAAI;;AAAkB;;AACtB;;AACA;;AAAG;;AAAuF;;AAC1F;;AACA;;AACA;;AACQ;;AAKA;;AACE;;AACE;;AAAI;;;;AAAyC;;AAC7C;;AAAiB;;;;AAAuC;;AACxD;;AACA;;AACA;;;;AACA;;;;AACA;;AACA;;AACE;;AAAkE;AAAA;;AAAA;;AAAA,qBAAS,sBAAgC,cAAhC,CAAT;AAAwD,aAAxD;;AAA0D;;;;AAAgC;;AAC5J;;AAAkD;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,qBAAS,IAAAM,oBAAA,4DAAT;AAAkI,aAAlI;;AAAoI;;;;AAA6B;;AACrN;;AACF;;AACF;;AAEJ;;AACF;;AACF;;;;AA5F6B;;AAAA;;AAIJ;;AAAA,+FAAqB,QAArB,EAAqB,UAArB;;AASV;;AAAA;;AAKX;;AAAA;;AAIsB;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAKA;;AAAA;;AAQV;;AAAA;;AACa;;AAAA;;AAS6G;;AAAA;;AAWvI;;AAAA;;AACA;;AAAA;;AAEuB;;AAAA;;AAMA;;AAAA;;AACA;;AAAA;;AACf;;AAAA;;AAOK;;AAAA;;AACa;;AAAA;;AAG6D;;AAAA;;AACI;;AAAA;;AAG4C;;AAAA;;AAC0D;;AAAA;;;;;;;;;;wED1EvLf,uB,EAAuB;gBALnC,uDAKmC;iBALzB;AACTzH,oBAAQ,EAAE,qBADD;AAETC,uBAAW,EAAE,kCAFJ;AAGTC,qBAAS,EAAE,CAAC,iCAAD;AAHF,W;AAKyB,U;;;;;;;;;;oBAKoG,oD;qBAAO,wD;;;;;;;;;;;;;;;;;;;;;AEjB/I;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAiBauI,oB;AAUX,sCAAoBC,kBAApB,EAAsFzH,QAAtF,EAAwGmB,MAAxG,EAAgIrD,KAAhI,EAA+J+B,qBAA/J,EAAqN6H,wBAArN,EAAiRC,gBAAjR,EAAqT;AAAA;;AAAjS,eAAAF,kBAAA,GAAAA,kBAAA;AAAkE,eAAAzH,QAAA,GAAAA,QAAA;AAAkB,eAAAmB,MAAA,GAAAA,MAAA;AAAwB,eAAArD,KAAA,GAAAA,KAAA;AAA+B,eAAA+B,qBAAA,GAAAA,qBAAA;AAAsD,eAAA6H,wBAAA,GAAAA,wBAAA;AAA4D,eAAAC,gBAAA,GAAAA,gBAAA;AAC/Q/I,iBAAO,CAACC,IAAR,CAAa,yDAAb;AACD;AAED;;;;;;;qCAGQ;AAAA;;AACN;AACA,iBAAKwD,MAAL,GAAc,IAAI,qDAAJ,EAAd;AACA,iBAAKuF,cAAL,GAAsB,KAAtB;AAEA,iBAAK9J,KAAL,CACG0D,WADH,CAEGtB,SAFH,CAEa,UAAAuB,MAAM,EAAI;AACnB,qBAAI,CAACQ,QAAL,GAAgBR,MAAM,CAAC,GAAD,CAAN,IAAe,IAA/B;AACA,qBAAI,CAACxD,QAAL,GAAgBwD,MAAM,CAAC,WAAD,CAAN,IAAuB,IAAvC;;AAEA,kBAAI,OAAI,CAACQ,QAAL,IAAiB,IAArB,EAA2B;AACzBrD,uBAAO,CAACC,IAAR,CAAa,mEAAmE,OAAI,CAACoD,QAArF,EADyB,CAEzB;;AAEA,uBAAI,CAAC4F,WAAL,CAAiB,OAAI,CAAC5F,QAAtB;;AAEA,uBAAI,CAAC6F,WAAL,CAAiB,OAAI,CAAC7F,QAAtB,EAAgC,IAAhC,EAAsC,KAAtC;AACD;AACF,aAdH;AAgBA,iBAAK8F,WAAL;AACD;AAED;;;;;;sCAGoB9F,Q,EAAgB;AAClCrD,mBAAO,CAACkC,KAAR,CAAc,uDAAuDmB,QAArE;AACA,iBAAKjC,QAAL,CAAcS,cAAd,CAA6B,UAA7B,EAAyCN,KAAzC,GAAiD8B,QAAjD;AACD;AAED;;;;;;yCAGeA,Q,EAAgB;AAE7B,gBAAIA,QAAQ,CAACJ,MAAT,KAAoB,CAAxB,EAA2B;AACzBO,mBAAK,CAAC,mCAAD,CAAL;AACA;AACD,aAL4B,CAO7B;;;AACA,gBAAI,KAAKC,MAAL,IAAe,IAAnB,EAAyB;AACvB,mBAAKA,MAAL,CAAYA,MAAZ,GAAqB,IAArB,CADuB,CACI;AAC5B,aAV4B,CAY7B;;;AACA,gBAAIgB,SAAS,GAAGC,IAAI,CAACC,GAAL,EAAhB;AACA,iBAAKpC,MAAL,CAAY0B,QAAZ,CAAqB,CAAC,MAAD,CAArB,EAA+B;AAACrB,yBAAW,EAAE;AAAC,qBAAKS,QAAN;AAAe,sBAAKoB;AAApB;AAAd,aAA/B;AACD;AAED;;;;;;;;;sCAMYpB,Q,EAAkBgD,K,EAAe+C,a,EAAsB;AAAA;;AAEjE,gBAAI/F,QAAQ,CAACJ,MAAT,KAAoB,CAAxB,EAA2B;AACzBO,mBAAK,CAAC,mCAAD,CAAL;AACA;AACD,aALgE,CAOjE;;;AACA,iBAAKwF,cAAL,GAAsB,KAAtB;AAEA,gBAAI7F,QAAQ,GAAG,IAAf;;AACA,gBAAIkD,KAAK,IAAI,IAAb,EAAmB;AACjBlD,sBAAQ,GAAG,KAAK4F,gBAAL,CAAsBM,WAAjC;AACD;;AAED,iBAAKR,kBAAL,CAAwBK,WAAxB,CAAoC7F,QAApC,EAA8CgD,KAA9C,EAAqD,KAAKhH,QAA1D,EAAoE8D,QAApE,EAA8EtD,IAA9E,CAAmF,UAAAC,QAAQ,EAAI;AAC7F,qBAAI,CAAC2D,MAAL,GAAsB3D,QAAtB;AACA,qBAAI,CAACkJ,cAAL,GAAsB,IAAtB,CAF6F,CAG7F;AAEA;;AACA,kBAAI,OAAI,CAACvF,MAAL,CAAY4C,KAAZ,IAAqB,IAArB,IAA6B+C,aAAjC,EAAgD;AAC9C,uBAAI,CAAChI,QAAL,CAAcS,cAAd,CAA6B,qBAA7B,EAAoDC,SAApD,CAA8DC,MAA9D,CAAqE,cAArE,EAD8C,CAE9C;;AACD;AACF,aAVD;AAWD;AAED;;;;;;;iDAIuBsB,Q,EAAgB;AAAA;;AAErC,gBAAIA,QAAQ,CAACJ,MAAT,KAAoB,CAAxB,EAA2B;AACzBO,mBAAK,CAAC,mCAAD,CAAL;AACA;AACD,aALoC,CAOrC;;;AACA,iBAAKqF,kBAAL,CAAwBS,sBAAxB,CAA+CjG,QAA/C,EAAyD,KAAKhE,QAA9D,EAAwEQ,IAAxE,CAA6E,UAAAC,QAAQ,EAAI;AACvF,qBAAI,CAAC2D,MAAL,GAAsB3D,QAAtB;AACD,aAFD;AAGD;AAED;;;;;;;wCAIckH,Q,EAAgB;AAC5BxD,iBAAK,CAAC,uBAAuB,KAAKsF,wBAAL,CAA8BS,OAA9B,CAAsC,KAAK9F,MAAL,CAAYA,MAAlD,EAA0DuD,QAA1D,CAAxB,CAAL;AACA,iBAAK5F,QAAL,CAAcS,cAAd,CAA6B,WAA7B,EAA0CN,KAA1C,GAAkD,EAAlD;AACA,iBAAKH,QAAL,CAAcS,cAAd,CAA6B,gBAA7B,EAA+CC,SAA/C,CAAyDC,MAAzD,CAAgE,cAAhE;AACD;AAED;;;;;;wCAGW;AAAA;;AACT,iBAAKd,qBAAL,CAA2BkI,WAA3B,GAAyCtJ,IAAzC,CAA8C,UAAAC,QAAQ,EAAI;AACxD,qBAAI,CAACmC,QAAL,GAA0BnC,QAA1B;;AAEA,kBAAI,OAAI,CAACmC,QAAL,IAAkB,IAAtB,EAA4B;AAC1B;AACAjC,uBAAO,CAACC,IAAR,CAAa,eAAe,OAAI,CAACgC,QAAL,CAAcA,QAA1C;AACD,eAHD,MAGO;AACLjC,uBAAO,CAACkC,KAAR,CAAc,yDAAd;AACD;AACF,aATD;AAUD;AAED;;;;;;qCAGW;AACT,gBAAIsH,YAAY,GAAqBpI,QAAQ,CAACS,cAAT,CAAwB,WAAxB,CAArC;AACA,gBAAI4H,CAAC,GAAqBrI,QAAQ,CAACS,cAAT,CAAwB,UAAxB,CAA1B;;AACA,gBAAI2H,YAAY,CAACE,IAAb,KAAsB,UAA1B,EAAsC;AACpCF,0BAAY,CAACE,IAAb,GAAoB,MAApB;AACAD,eAAC,CAACE,GAAF,GAAQ,gCAAR;AACD,aAHD,MAGO;AACLH,0BAAY,CAACE,IAAb,GAAoB,UAApB;AACAD,eAAC,CAACE,GAAF,GAAQ,yBAAR;AACD;AACF;;;;;;;yBA/JUf,oB,EAAoB,kJ,EAAA,gEAUqC,wDAVrC,C,EAU6C,uH,EAAA,+H,EAAA,uJ,EAAA,8J,EAAA,qI;AAAA,O;;;cAVjEA,oB;AAAoB,yC;AAAA,gB;AAAA,e;AAAA,6F;AAAA;AAAA;ACjBjC;;AAEE;;AACE;;AACE;;AACF;;AACF;;AAEF;;;;AAJqB;;AAAA;;;;;;;;;;wEDaRA,oB,EAAoB;gBANhC,uDAMgC;iBANtB;AACTzI,oBAAQ,EAAE,kBADD;AAETC,uBAAW,EAAE,+BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD,CAHF;AAITuJ,yBAAa,EAAE,gEAAkBC;AAJxB,W;AAMsB,U;;;;;;oBAU8B,oD;qBAAO,wD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE3BtE;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACMI;;AACE;;AACE;;;;AACF;;AAEA;;AACE;;AAA6H;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;;AAA7H;;AACF;;AAEA;;AACE;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAiG;;;;AAA8B;;AACzI;;AACF;;;;AAVI;;AAAA;;AAIwE;;AAAA;;AAIiC;;AAAA;;;;;;;;;;AAI7G;;AACE;;AACE;;;;AACF;;AAEA;;AACE;;AAA4E;;;;AAAiC;;AAC/G;;AACF;;;;AANI;;AAAA;;AAIQ;;AAAA;;AAAoE;;AAAA;;;;UDjBvEC,sB;AAKX,wCAAoB5K,KAApB,EAAmD6K,UAAnD,EAA2E;AAAA;;AAAvD,eAAA7K,KAAA,GAAAA,KAAA;AAA+B,eAAA6K,UAAA,GAAAA,UAAA;AAHnD,eAAAC,iBAAA,GAA6B,KAA7B;AACA,eAAAC,KAAA,GAAgB,IAAhB;AAE8E;;;;qCAEtE;AAAA;;AACN,iBAAK/K,KAAL,CACG0D,WADH,CAEGtB,SAFH,CAEa,UAAAuB,MAAM,EAAI;AACnB,qBAAI,CAACoH,KAAL,GAAapH,MAAM,CAAC,OAAD,CAAN,IAAmB,IAAhC;AACD,aAJH;AAKD;AAED;;;;;;;yCAIemE,Q,EAAgB;AAAA;;AAC7BhH,mBAAO,CAACC,IAAR,CAAa,wDAAb;AACA,iBAAK8J,UAAL,CAAgBG,aAAhB,CAA8BlD,QAA9B,EAAwC,KAAKiD,KAA7C,EAAoDpK,IAApD,CAAyD,UAAAC,QAAQ,EAAI;AACnE,qBAAI,CAACkK,iBAAL,GAAyB,IAAzB;AACD,aAFD;AAGD;;;;;;;yBAxBUF,sB,EAAsB,+H,EAAA,iI;AAAA,O;;;cAAtBA,sB;AAAsB,2C;AAAA,gB;AAAA,e;AAAA,sb;AAAA;AAAA;ACTnC;;AACE;;AACE;;AAAY;;AAA2C;;AAEvD;;AAAkB;;;;AAAwC;;AAE1D;;AAcA;;AASF;;AACF;;;;AA1BsB;;AAAA;;AAEb;;AAAA;;AAcA;;AAAA;;;;;;;;;;wEDXIA,sB,EAAsB;gBALlC,uDAKkC;iBALxB;AACT3J,oBAAQ,EAAE,oBADD;AAETC,uBAAW,EAAE,iCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD;AAHF,W;AAKwB,U;;;;;;;;;;;;;;;;;;;;;;;;AETnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACE;;AAA2B;;AAAc;;AAC3C;;;;;;AAec;;AAAsE;;;;AAAqC;;;;AAArC;;AAAA;;;;;;AACtE;;AAAiD;;;;AAAqC;;;;AAArC;;AAAA;;;;;;AAEjD;;AAAsE;;;;AAAqC;;;;AAArC;;AAAA;;;;;;AACtE;;AAAiD;;;;AAAqC;;;;AAArC;;AAAA;;;;;;AAEjD;;AAAsE;;;;AAAqC;;;;AAArC;;AAAA;;;;;;AACtE;;AAAiD;;;;AAAqC;;;;AAArC;;AAAA;;;;;;AAEjD;;AAAsE;;;;AAAqC;;;;AAArC;;AAAA;;;;;;AACtE;;AAAiD;;;;AAAqC;;;;AAArC;;AAAA;;;;;;;;;;;;AApB3D;;AACE;;AACE;;AAAI;;AAAI;;;;AAAuC;;AAAK;;AAAI;;AAAiB;;AAAK;;AAC9E;;AAAI;;AAAI;;;;AAAyC;;AAAK;;AAAI;;AAA8H;;AAAK;;AAC7L;;AAAI;;AAAI;;;;AAAwC;;AAAK;;AAAI;;AAA0H;;AAAK;;AACxL;;AAAI;;AAAI;;AAAO;;AAAK;;AAAI;;AAA8G;;AAAK;;AAC3I;;AACE;;AAAI;;;;AAAmC;;AACvC;;AACE;;AACE;;AACA;;AAEA;;AACA;;AAEA;;AACA;;AAEA;;AACA;;AACF;;AACF;;AACF;;AACF;;AACA;;AACA;;AAAyF;;AAAiB;;AAC1G;;AAAwD;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAwG;;AAAc;;AAChL;;;;;;AA1BY;;AAAA;;AAAgD;;AAAA;;AAChD;;AAAA;;AAAoJ;;AAAA;;AACpJ;;AAAA;;AAAgJ;;AAAA;;AAC1C;;AAAA;;AAExG;;AAAA;;AAGuC;;AAAA;;AACpB;;AAAA;;AAEoB;;AAAA;;AACpB;;AAAA;;AAEoB;;AAAA;;AACpB;;AAAA;;AAEoB;;AAAA;;AACpB;;AAAA;;AAMgC;;AAAA;;;;UDvBpD8J,yB;AAIX,2CAAoBlJ,qBAApB,EAA0E8I,UAA1E,EAAkG;AAAA;;AAA9E,eAAA9I,qBAAA,GAAAA,qBAAA;AAAsD,eAAA8I,UAAA,GAAAA,UAAA;AAA2B;;;;qCAE7F;AACN,iBAAKvI,OAAL;AACD;AAED;;;;;;oCAGO;AAAA;;AACL,iBAAKP,qBAAL,CAA2BO,OAA3B,GAAqC3B,IAArC,CAA0C,UAAAC,QAAQ,EAAI;AACpD,qBAAI,CAACkC,IAAL,GAAkBlC,QAAlB;;AAEA,kBAAI,OAAI,CAACkC,IAAL,IAAc,IAAlB,EAAwB;AACtB;AACAhC,uBAAO,CAACC,IAAR,CAAa,eAAe,OAAI,CAAC+B,IAAL,CAAUC,QAAtC;AACD,eAHD,MAGO;AACLjC,uBAAO,CAACkC,KAAR,CAAc,0DAAd;AACD;AACF,aATD;AAUD;AAED;;;;;;;;;;wCAOckI,S,EAAmBC,Q,EAAkBhE,K,EAAelD,Q,EAAkB;AAClFnD,mBAAO,CAACC,IAAR,CAAa,0BAA0B,KAAK+B,IAAL,CAAU9B,EAApC,GAAyC,OAAtD;AAEA,gBAAIoK,WAAW,GAAS;AAACpK,gBAAE,EAAE,KAAK8B,IAAL,CAAU9B,EAAf;AAAmB+B,sBAAQ,EAAE,IAA7B;AAAmCsI,kBAAI,EAAE,IAAzC;AAA+ClE,mBAAK,EAAEA,KAAtD;AAA6D+D,uBAAS,EAAEA,SAAxE;AAAmFC,sBAAQ,EAAEA,QAA7F;AAAuG5D,sBAAQ,EAAE,IAAjH;AAAuHD,yBAAW,EAAE,IAApI;AAA0IQ,sBAAQ,EAAE,IAApJ;AAA0J7D,sBAAQ,EAAEA,QAApK;AAA8KqH,uBAAS,EAAE;AAAzL,aAAxB;AAEA,iBAAKT,UAAL,CAAgBU,UAAhB,CAA2BH,WAA3B,EAAwCzK,IAAxC,CAA6C,UAAAC,QAAQ,EAAI;AACvD0D,mBAAK,CAAC,2CAAD,CAAL;AACAxD,qBAAO,CAACC,IAAR,CAAa,qCAAb;AACD,aAHD;AAID;;;;;;;yBA1CUkK,yB,EAAyB,uJ,EAAA,iI;AAAA,O;;;cAAzBA,yB;AAAyB,+C;AAAA,gB;AAAA,e;AAAA,k3C;AAAA;AAAA;ACVtC;;AAIA;;AAEE;;AACE;;AA6BF;;AACF;;;;AArCwB;;AAOG;;AAAA;;;;;;;;;;wEDGdA,yB,EAAyB;gBALrC,uDAKqC;iBAL3B;AACThK,oBAAQ,EAAE,wBADD;AAETC,uBAAW,EAAE,qCAFJ;AAGTC,qBAAS,EAAE,CAAC,oCAAD;AAHF,W;AAK2B,U;;;;;;;;;;;;;;;;;;;;;;;;AEVtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCE;;AAAkD;;AAAuB;;AAAS;;AAAK;;AAAE;;AAAiC;;AAAe;;AAAI;;;;;;AAAjD;;AAAA;;AAA8B;;AAAA;;;;;;AAS5H;;AAA2D;;AAAW;;;;;;AAGtE;;AACE;;AAAI;;AAA2C;;;;AAA8C;;AAAI;;AACnG;;;;;;;;AADS;;AAAA;;AAAwC;;AAAA;;;;;;AAcnC;;AAAqE;;;;AAA0C;;;;;;AAA3D;;AAAiB;;AAAA;;;;UDftEqK,kB;AAOX,oCAAoBzL,oBAApB,EAAwEC,KAAxE,EAAuGC,aAAvG,EAA+JiC,QAA/J,EAAyK;AAAA;;AAArJ,eAAAnC,oBAAA,GAAAA,oBAAA;AAAoD,eAAAC,KAAA,GAAAA,KAAA;AAA+B,eAAAC,aAAA,GAAAA,aAAA;AAAwD,eAAAiC,QAAA,GAAAA,QAAA;AAH/J,eAAAqB,YAAA,GAAyB,EAAzB;AACA,eAAAkI,sBAAA,GAAmC,EAAnC;AAE4K;;;;qCAEpK;AACN,iBAAKtL,QAAL,GAAgB,KAAKH,KAAL,CAAWI,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,IAAjC,CAAhB;AAEA,iBAAKC,SAAL;AACA,iBAAKuD,eAAL;AACD;AAED;;;;;;sCAGS;AAAA;;AACP,iBAAK/D,oBAAL,CAA0BW,UAA1B,CAAqC,KAAKP,QAA1C,EAAoDQ,IAApD,CAAyD,UAAAC,QAAQ,EAAI;AACnE,qBAAI,CAACC,MAAL,GAAuBD,QAAvB;AACAE,qBAAO,CAACC,IAAR,CAAa,aAAa,OAAI,CAACF,MAAL,CAAYG,EAAzB,GAA8B,oBAA3C;AACD,aAHD;AAID;AAED;;;;;;4CAGkB;AAAA;;AAChBF,mBAAO,CAACC,IAAR,CAAa,kCAAkC,KAAKZ,QAAvC,GAAkD,OAA/D;AACA,iBAAKF,aAAL,CAAmB6D,eAAnB,CAAmC,KAAK3D,QAAxC,EAAkDQ,IAAlD,CAAuD,UAAAC,QAAQ,EAAI;AACjE,qBAAI,CAAC2C,YAAL,GAA8B3C,QAA9B;AACAE,qBAAO,CAACC,IAAR,CAAa,8BAA8B,OAAI,CAACwC,YAAL,CAAkBQ,MAA7D;;AAEA,qBAAI,CAAC2H,yBAAL;AACD,aALD;AAMD;AAED;;;;;;sDAG4B;AAC1B,gBAAMC,kBAAkB,GAAG,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,EAAgB,IAAhB,EAAqB,IAArB,EAA0B,IAA1B,CAA3B,CAD0B,CACkC;;AAE5D,iBAAKF,sBAAL,CAA4B1H,MAA5B,GAAqC,CAArC;;AACA,mDAAiB4H,kBAAjB,yCAAqC;AAAhC,kBAAIC,IAAI,0BAAR;AACH9K,qBAAO,CAACC,IAAR,CAAa,UAAU6K,IAAV,GAAiB,4BAA9B;;AACA,kBAAI,KAAKC,YAAL,CAAkBD,IAAlB,CAAJ,EAA6B;AAC3B,qBAAKH,sBAAL,CAA4BK,IAA5B,CAAiCF,IAAjC;AACD;AACF;AACF;AAED;;;;;;uCAGa3H,Q,EAAgB;AAAA,uDACV,KAAKV,YADK;AAAA;;AAAA;AAC3B,kEAAoC;AAAA,oBAA3BqI,IAA2B;;AAClC,oBAAI3H,QAAQ,KAAK2H,IAAjB,EAAuB;AACrB,yBAAO,KAAP;AACD;AACF;AAL0B;AAAA;AAAA;AAAA;AAAA;;AAM3B,mBAAO,IAAP;AACD;AAED;;;;;;iCAGO3H,Q,EAAkB8H,W,EAAqBC,W,EAAqBC,W,EAAmB;AAAA;;AACpF;AAEA,gBAAIzI,MAAM,GAAe,EAAzB;;AAEA,gBAAIuI,WAAW,IAAI,IAAf,IAAwBA,WAAW,IAAI,IAAf,IAAuBA,WAAW,CAAChI,MAAZ,IAAsB,CAAzE,EAA6E;AAC3EO,mBAAK,CAAC,iDAAD,CAAL;AACA;AACD;;AAED,gBAAI4H,MAAM,GAAG,IAAI,0DAAJ,EAAb;AACAA,kBAAM,CAACC,KAAP,GAAeJ,WAAf;AACAvI,kBAAM,CAACsI,IAAP,CAAYI,MAAZ;;AAEA,gBAAIF,WAAW,IAAI,IAAf,IAAuBA,WAAW,CAACjI,MAAZ,GAAqB,CAAhD,EAAmD;AACjD,kBAAIqI,MAAM,GAAG,IAAI,0DAAJ,EAAb;AACAA,oBAAM,CAACD,KAAP,GAAeH,WAAf;AACAxI,oBAAM,CAACsI,IAAP,CAAYM,MAAZ;AACD;;AAED,gBAAIH,WAAW,IAAI,IAAf,IAAuBA,WAAW,CAAClI,MAAZ,GAAqB,CAAhD,EAAmD;AACjD,kBAAIsI,MAAM,GAAG,IAAI,0DAAJ,EAAb;AACAA,oBAAM,CAACF,KAAP,GAAeF,WAAf;AACAzI,oBAAM,CAACsI,IAAP,CAAYO,MAAZ;AACD;;AAED,iBAAKpM,aAAL,CAAmBqM,MAAnB,CAA0B,KAAKnM,QAA/B,EAAyC8D,QAAzC,EAAmDT,MAAnD,EAA2D7C,IAA3D,CAAgE,UAAAC,QAAQ,EAAI;AAC1EE,qBAAO,CAACC,IAAR,CAAa,YAAb;;AACA,qBAAI,CAACmB,QAAL,CAAcS,cAAd,CAA6B,eAA7B,EAA8CC,SAA9C,CAAwDC,MAAxD,CAA+D,cAA/D;;AACA,qBAAI,CAACiB,eAAL;AACD,aAJD;AAKD;;;;;;;yBApGU0H,kB,EAAkB,qJ,EAAA,+H,EAAA,uI,EAAA,gEAOgH,wDAPhH,C;AAOwH,O;;;cAP1IA,kB;AAAkB,uC;AAAA,iB;AAAA,gB;AAAA,ynC;AAAA;AAAA;;;ACb/B;;AACE;;AACF;;AAEA;;AACE;;AACA;;AACE;;AAEJ;;AAAI;;AAAG;;AACP;;AAEA;;AACA;;AAGA;;AAEQ;;AACA;;AACE;;AAAQ;AAAA;;AAAA;;AAAA,qBAAS,qBAA+B,cAA/B,CAAT;AAAuD,aAAvD;;AAAmG;;;;AAAiC;;AAC9I;;AAEA;;AACE;;AACE;;AAAI;;;;AAAiC;;AACrC;;AAAiB;;;;AAA6C;;AAC9D;;AACE;;AACF;;AACA;;AACA;;AACA;;AACA;;AACE;;AAAkE;AAAA;;AAAA;;AAAA,qBAAS,qBAA+B,cAA/B,CAAT;AAAuD,aAAvD;;AAAyD;;;;AAAgC;;AAC3J;;AAAkD;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,qBAAS,IAAAe,MAAA,4CAAT;AAAyE,aAAzE;;AAA2E;;;;AAA6B;;AAC5J;;AACF;;AACF;;AAEJ;;AACF;;AACF;;;;AAzC6B;;AAAA;;AAIJ;;AAAA,+FAAqB,QAArB,EAAqB,KAArB;;AAKC;;AAAA;;AAGtB;;AAAA;;AAOiH;;AAAA;;AAKrG;;AAAA;;AACa;;AAAA;;AAEP;;AAAA;;AAMmH;;AAAA;;AACE;;AAAA;;;;;;;;;;wEDtB9Hf,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACTvK,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTC,qBAAS,EAAE,CAAC,4BAAD;AAHF,W;AAKoB,U;;;;;;;;;;oBAOyG,oD;qBAAO,wD;;;;;;;;;;;;;;;;;;;;;AEpB/I;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACKU;;AAAyD;;;;AAAmC;;;;;;AAAjE;;AAA8B;;AAAA;;;;;;AACzD;;AAA+B;;;;AAAmC;;;;AAAnC;;AAAA;;;;;;AAI/B;;AAA6D;;;;AAA+C;;;;;;AAAjF;;AAAkC;;AAAA;;;;;;AAC7D;;AAA+B;;;;AAA+C;;;;AAA/C;;AAAA;;;;;;AAI/B;;AAA6D;;AAAG;;;;;;AAArC;;;;;;AAC3B;;AAA+B;;AAAG;;;;;;AAIlC;;AAAqE;;;;AAAsC;;;;;;AAA5E;;AAAsC;;AAAA;;;;;;AACrE;;AAAmC;;;;AAAsC;;;;AAAtC;;AAAA;;;;;;AAInC;;AAAuE;;;;AAAkC;;;;;;AAAzE;;AAAuC;;AAAA;;;;;;AACvE;;AAAoC;;;;AAAkC;;;;AAAlC;;AAAA;;;;;;AAIpC;;AAAuE;;;;AAAkC;;;;;;AAAzE;;AAAuC;;AAAA;;;;;;AACvE;;AAAoC;;;;AAAkC;;;;AAAlC;;AAAA;;;;UDxBjCqL,yB;AAQX,6CAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBAXUA,yB;AAAyB,O;;;cAAzBA,yB;AAAyB,8C;AAAA;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,gB;AAAA,4pB;AAAA;AAAA;ACPtC;;AACE;;AAEI;;AACE;;AACE;;AACA;;AACF;;AACF;;AACE;;AACE;;AACA;;AACF;;AACF;;AACE;;AACE;;AACA;;AACF;;AACF;;AACE;;AACE;;AACA;;AACF;;AACF;;AACE;;AACE;;AACA;;AACF;;AACF;;AACE;;AACE;;AACA;;AACF;;AACN;;AACF;;;;AA7Ba;;AAAA;;AACG;;AAAA;;AAIH;;AAAA;;AACG;;AAAA;;AAIH;;AAAA;;AACG;;AAAA;;AAIH;;AAAA;;AACG;;AAAA;;AAIH;;AAAA;;AACG;;AAAA;;AAIH;;AAAA;;AACG;;AAAA;;;;;;;;;;wEDxBHA,yB,EAAyB;gBALrC,uDAKqC;iBAL3B;AACTvL,oBAAQ,EAAE,uBADD;AAETC,uBAAW,EAAE,oCAFJ;AAGTC,qBAAS,EAAE,CAAC,mCAAD;AAHF,W;AAK2B,U;;;AAGpChB,kBAAQ,EAAE,CAAF;kBADP;AACO,WAAE,C;AAGVsM,gBAAM,EAAE,CAAF;kBADL;AACK,WAAE;;;;;;;;;;;;;;;;;;;AEbV;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAMaC,W;AAEX;;;AAGA,6BAAoBC,WAApB,EAA8C;AAAA;;AAA1B,eAAAA,WAAA,GAAAA,WAAA;AAA4B;AAEhD;;;;;;;oCAGiBtK,K,EAAiC;AAChD,gBAAIA,KAAK,IAAI,IAAb,EAAmB;AACjBvB,qBAAO,CAACC,IAAR,CAAa,mBAAmBsB,KAAhC;AACAvB,qBAAO,CAACC,IAAR,CAAa,mFAAb;AACA,qBAAO,KAAK4L,WAAL,CAAiBC,OAAjB,CAAyBvK,KAAzB,CAAP;AACD,aAJD,MAIO;AACL;AACA,qBAAO,IAAP;AACD;AACF;;;;;;;yBAnBUqK,W,EAAW,mI;AAAA,O;;;;cAAXA,W;AAAW;;;;;wEAAXA,W,EAAW;gBAHvB,kDAGuB;iBAHlB;AACJjF,gBAAI,EAAE;AADF,W;AAGkB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCSXoF,oB;AAMX,sCAAoB/G,UAApB,EAAoDzC,MAApD,EAA4E6E,SAA5E,EAAyG;AAAA;;AAArF,eAAApC,UAAA,GAAAA,UAAA;AAAgC,eAAAzC,MAAA,GAAAA,MAAA;AAAwB,eAAA6E,SAAA,GAAAA,SAAA;AAJ5E,eAAAnC,OAAA,GAAU,sEAAYH,UAAtB;AAKE9E,iBAAO,CAACC,IAAR,CAAa,yDAAb;AACD;AAED;;;;;;;;;oCAKgB0G,I,EAAcqF,yB,EAAkC;;;;;;;;;AAC9DhM,6BAAO,CAACC,IAAR,CAAa,uEAAuE0G,IAAvE,GAA8E,qCAA9E,GAAsHqF,yBAAtH,GAAkJ,OAA/J;AAEIC,oC,GAAiBtF,I;AAEjBrB,yB,GAAM,KAAKL,OAAL,GAAe,gCAAf,GAAkD0B,IAAlD,GAAyD,6BAAzD,GAAyFqF,yBAAzF,GAAqH,kBAArH,GAA0IC,c;AAEhJ1G,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,+BAAI,CAACV,UAAL,CAAgBW,IAAhB,CAAqBL,GAArB,EAA0B,EAA1B,EAA8B;AAAEM,sCAAY,EAAE;AAAhB,yBAA9B,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,8BAAIT,QAAQ,GAAaS,QAAzB;AACAE,iCAAO,CAACC,IAAR,CAAa,oBAAoBZ,QAAQ,CAAC6M,SAA1C;AACAzG,iCAAO,CAACpG,QAAQ,CAAC6M,SAAV,CAAP;AACC,yBANL,WAOS,UAAApM,QAAQ,EAAI;AACjB0D,+BAAK,CAAC,sBAAsB1D,QAAQ,CAACgG,MAAhC,CAAL;AACA9F,iCAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAHiB,CAGkB;;AACnC/F,iCAAO,CAACC,IAAR,CAAa,uBAAuB8F,KAAK,CAACC,OAA1C;;AACA,8BAAID,KAAK,CAACE,IAAN,KAAe,MAAnB,EAA2B;AACzBzC,iCAAK,CAAC,cAAc,MAAf,CAAL;AACAiC,mCAAO;AACR,2BAHD,MAGO;AACLjC,iCAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,kCAAM,CAACK,KAAK,CAACC,OAAP,CAAN;AACD;AACF,yBAnBH;AAoBD,uBArBa,C,EAsBd;;yDACOT,O;;;;;;;;;AACR;AAED;;;;;;;;qCAKiBrF,E,EAAU;;;;;;;;;AACzBF,6BAAO,CAACC,IAAR,CAAa,uFAAuFC,EAAvF,GAA4F,OAAzG;AAEIoF,yB,GAAM,KAAKL,OAAL,GAAe,4BAAf,GAA8C/E,E;AACpDqF,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,+BAAI,CAACV,UAAL,CAAgBxF,GAAhB,CAAoB8F,GAApB,EAAyB;AAAEM,sCAAY,EAAE;AAAhB,yBAAzB,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,iCAAI,CAACqM,OAAL,GAAwBrM,QAAxB,CADgB,CAEhB;;AACAE,iCAAO,CAACC,IAAR,CAAa,cAAc,OAAI,CAACkM,OAAL,CAAajM,EAAxC;AACAuF,iCAAO,CAAC,OAAI,CAAC0G,OAAN,CAAP;AACC,yBAPL,WAQS,UAAArM,QAAQ,EAAI;AACjBE,iCAAO,CAACkC,KAAR,CAAc,yDAAyDpC,QAAQ,CAACgG,MAAhF;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC,8BAAIjG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3B9F,mCAAO,CAACC,IAAR,CAAa,iEAAb,EAD2B,CAE3B;;AACA,gCAAImM,GAAG,GAAG,OAAI,CAAChF,SAAL,CAAeK,OAAf,CAAuB,wBAAvB,EAAiD;AAAEyE,uCAAS,EAAChM;AAAZ,6BAAjD,CAAV;;AACA,mCAAI,CAACqC,MAAL,CAAY0B,QAAZ,CAAqB,CAAC,QAAD,CAArB,EAAiC;AAACrB,yCAAW,EAAE;AAAC,2CAAWwJ;AAAZ;AAAd,6BAAjC;;AACA3G,mCAAO,CAAC,IAAD,CAAP;AACD,2BAND,MAMO;AACLjC,iCAAK,CAAC,uBAAuBuC,KAAK,CAACE,IAA7B,GAAoC,IAApC,GAA2CF,KAAK,CAACC,OAAlD,CAAL;AACAN,kCAAM;AACP;AACF,yBArBH;AAsBD,uBAvBa,C;yDAwBPH,O;;;;;;;;;AACR;AAED;;;;;;;;sDAKkCrF,E,EAAU;;;;;;;;;AAC1CF,6BAAO,CAACC,IAAR,CAAa,8GAA8GC,EAA9G,GAAmH,OAAhI;AAEIoF,yB,GAAM,KAAKL,OAAL,GAAe,2BAAf,GAA6C/E,EAA7C,GAAkD,sB;AACxDqF,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,+BAAI,CAACV,UAAL,CAAgBxF,GAAhB,CAAoB8F,GAApB,EAAyB;AAAEM,sCAAY,EAAE;AAAhB,yBAAzB,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,8BAAIuM,WAAW,GAA6BvM,QAA5C,CADgB,CAEhB;;AACAE,iCAAO,CAACC,IAAR,CAAa,kBAAkBoM,WAAW,CAAC1F,IAA3C;AACAlB,iCAAO,CAAC4G,WAAD,CAAP;AACC,yBAPL,WAQS,UAAAvM,QAAQ,EAAI;AACjBE,iCAAO,CAACkC,KAAR,CAAc,yDAAyDpC,QAAQ,CAACgG,MAAhF;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnCvC,+BAAK,CAAC,uBAAuBuC,KAAK,CAACE,IAA7B,GAAoC,IAApC,GAA2CF,KAAK,CAACC,OAAlD,CAAL;AACAN,gCAAM;AACP,yBAbH;AAcD,uBAfa,C;yDAgBPH,O;;;;;;;;;AACR;AAED;;;;;;;uCAIgB;;;;;;;;;AACdvF,6BAAO,CAACC,IAAR,CAAa,mEAAb;AAEIqF,yB,GAAM,KAAKL,OAAL,GAAe,2B;AACrBM,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,+BAAI,CAACV,UAAL,CAAgBxF,GAAhB,CAAoB8F,GAApB,EAAyB;AAAEM,sCAAY,EAAE;AAAhB,yBAAzB,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,8BAAIwM,OAAO,GAAcxM,QAAzB;AACAE,iCAAO,CAACC,IAAR,CAAa,8BAA8BqM,OAAO,CAACrJ,MAAnD;AACAwC,iCAAO,CAAC6G,OAAD,CAAP;AACC,yBANL,WAOS,UAAAxM,QAAQ,EAAI;AACjBE,iCAAO,CAACkC,KAAR,CAAc,yDAAyDpC,QAAQ,CAACgG,MAAhF;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC,8BAAIjG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3B9F,mCAAO,CAACC,IAAR,CAAa,wGAAb;AACAwF,mCAAO,CAAC,IAAD,CAAP;AACD,2BAHD,MAGO;AACLjC,iCAAK,CAAC,uBAAuBuC,KAAK,CAACE,IAA7B,GAAoC,IAApC,GAA2CF,KAAK,CAACC,OAAlD,CAAL;AACAN,kCAAM;AACP;AACF,yBAjBH;AAkBD,uBAnBa,C;yDAoBPH,O;;;;;;;;;AACR;AAED;;;;;;;6CAIsB;;;;;;;;;AACpBvF,6BAAO,CAACC,IAAR,CAAa,iEAAb;AAEIqF,yB,GAAM,KAAKL,OAAL,GAAe,mC;AACrBM,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,+BAAI,CAACV,UAAL,CAAgBxF,GAAhB,CAAoB8F,GAApB,EAAyB;AAAEM,sCAAY,EAAE;AAAhB,yBAAzB,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,8BAAIC,MAAM,GAAYD,QAAtB;AACAE,iCAAO,CAACC,IAAR,CAAa,wBAAwBF,MAAM,CAACG,EAA5C;AACAuF,iCAAO,CAAC1F,MAAD,CAAP;AACC,yBANL,WAOS,UAAAD,QAAQ,EAAI;AACjBE,iCAAO,CAACkC,KAAR,CAAc,+DAA+DpC,QAAQ,CAACgG,MAAtF;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC,8BAAIjG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3B9F,mCAAO,CAACC,IAAR,CAAa,kEAAb;AACAwF,mCAAO,CAAC,IAAD,CAAP;AACD,2BAHD,MAGO,IAAI3F,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAClC9F,mCAAO,CAACC,IAAR,CAAa,8FAAb;AACAwF,mCAAO,CAAC,IAAD,CAAP;AACD,2BAHM,MAGA;AACLjC,iCAAK,CAAC,uBAAuBuC,KAAK,CAACE,IAA7B,GAAoC,IAApC,GAA2CF,KAAK,CAACC,OAAlD,CAAL;AACAN,kCAAM;AACP;AACF,yBApBH;AAqBD,uBAtBa,C;yDAuBPH,O;;;;;;;;;AACR;AAED;;;;;;;uCAIgB;;;;;;;;;AACdvF,6BAAO,CAACC,IAAR,CAAa,gFAAb;AAEIqF,yB,GAAM,KAAKL,OAAL,GAAe,2B;AACrBM,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,+BAAI,CAACV,UAAL,CAAgBxF,GAAhB,CAAoB8F,GAApB,EAAyB;AAAEM,sCAAY,EAAE;AAAhB,yBAAzB,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,8BAAI0E,YAAY,GAAiB1E,QAAjC;AACAE,iCAAO,CAACC,IAAR,CAAa,cAAcuE,YAAY,CAAC+H,OAAxC;AACA9G,iCAAO,CAACjB,YAAD,CAAP;AACC,yBANL,WAOS,UAAA1E,QAAQ,EAAI;AACjBE,iCAAO,CAACkC,KAAR,CAAc,yDAAyDpC,QAAQ,CAACgG,MAAhF;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnCvC,+BAAK,CAAC,uBAAuBuC,KAAK,CAACE,IAA7B,GAAoC,IAApC,GAA2CF,KAAK,CAACC,OAAlD,CAAL;AACAN,gCAAM;AACP,yBAZH;AAaD,uBAda,C;yDAePH,O;;;;;;;;;AACR;AAED;;;;;;;mDAI4B;;;;;;;;;AAC1BvF,6BAAO,CAACC,IAAR,CAAa,sFAAb;AAEIqF,yB,GAAM,KAAKL,OAAL,GAAe,mB;AACrBM,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,+BAAI,CAACV,UAAL,CAAgBxF,GAAhB,CAAoB8F,GAApB,EAAyB;AAAEM,sCAAY,EAAE;AAAhB,yBAAzB,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,8BAAI0M,YAAY,GAAwB1M,QAAxC;AACAE,iCAAO,CAACC,IAAR,CAAa,cAAcuM,YAAY,CAACD,OAAxC;AACA9G,iCAAO,CAAC+G,YAAD,CAAP;AACC,yBANL,WAOS,UAAA1M,QAAQ,EAAI;AACjBE,iCAAO,CAACkC,KAAR,CAAc,qEAAqEpC,QAAQ,CAACgG,MAA5F;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnCvC,+BAAK,CAAC,uBAAuBuC,KAAK,CAACE,IAA7B,GAAoC,IAApC,GAA2CF,KAAK,CAACC,OAAlD,CAAL;AACAN,gCAAM;AACP,yBAZH;AAaD,uBAda,C;yDAePH,O;;;;;;;;;AACR;AAED;;;;;;oDAG0BlG,Q,EAAkByH,Q,EAAkB;AAAA;;AAC5D9G,mBAAO,CAACC,IAAR,CAAa,oDAAoDZ,QAApD,GAA+D,KAA/D,GAAuEyH,QAApF;AAEA,gBAAIxB,GAAG,GAAG,KAAKL,OAAL,GAAe,2BAAf,GAA6C5F,QAA7C,GAAwD,wBAAlE;AAEA,gBAAIkG,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,qBAAI,CAACV,UAAL,CAAgBuB,GAAhB,CAAoBjB,GAApB,EAAyB;AAAEwB,wBAAQ,EAARA;AAAF,eAAzB,EAAuC;AAAElB,4BAAY,EAAE;AAAhB,eAAvC,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,oBAAI2M,SAAS,GAAG3M,QAAQ,CAAC,WAAD,CAAxB,CADgB,CAEhB;;AACAE,uBAAO,CAACC,IAAR,CAAa,sCAAsCwM,SAAtC,GAAkD,yBAA/D;AACAhH,uBAAO,GAJS,CAKhB;AACC,eARL,WASS,UAAA3F,QAAQ,EAAI;AACjBE,uBAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,oBAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC/F,uBAAO,CAACC,IAAR,CAAa,sDAAsD8F,KAAK,CAACC,OAA5D,GAAsE,IAAtE,GAA6ED,KAAK,CAACE,IAAhG;;AACA,oBAAInG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BtC,uBAAK,CAAC,8BAAD,CAAL;AACAxD,yBAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,wBAAM;AACP,iBAJD,MAIO;AACLlC,uBAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,wBAAM;AACP;AACF,eArBH;AAsBD,aAvBa,CAAd,CAL4D,CA8B5D;;AACA1F,mBAAO,CAACC,IAAR,CAAa,+BAAb;AACA,mBAAOsF,OAAP;AACD;;;;;;;yBAzQUwG,oB,EAAoB,uH,EAAA,8G,EAAA,4H;AAAA,O;;;eAApBA,oB;AAAoB,iBAApBA,oBAAoB,K;AAAA,oBAFnB;;;;;wEAEDA,oB,EAAoB;gBAHhC,wDAGgC;iBAHrB;AACVhL,sBAAU,EAAE;AADF,W;AAGqB,U;;;;;;;;;;;;;;;;;;;;;;;;;;ACfjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;UAMa2L,wB;AAEX,4CAAc;AAAA;AAAG;AAEjB;;;;;;;;kCAIQC,I,EAAcC,S,EAAiB;AACrC,mBAAO,8CAAaC,OAAb,CAAqBF,IAArB,EAA2BC,SAAS,CAACE,IAAV,EAA3B,EAA6CC,QAA7C,EAAP;AACD;AAED;;;;;;;kCAIQC,a,EAAuBJ,S,EAAiB;AAC9C,mBAAO,8CAAarD,OAAb,CAAqByD,aAArB,EAAoCJ,SAAS,CAACE,IAAV,EAApC,EAAsDC,QAAtD,CAA+D,8CAAaE,IAA5E,CAAP;AACD;;;;;;;yBAlBUP,wB;AAAwB,O;;;eAAxBA,wB;AAAwB,iBAAxBA,wBAAwB,K;AAAA,oBAFvB;;;;;wEAEDA,wB,EAAwB;gBAHpC,wDAGoC;iBAHzB;AACV3L,sBAAU,EAAE;AADF,W;AAGyB,U;;;;;;;;;;;;;;;;;;;;ACNrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCE;;AAAkD;;AAAuB;;AAAS;;AAAK;;AAAE;;AAAiC;;AAAe;;AAAI;;;;;;AAAjD;;AAAA;;AAA8B;;AAAA;;;;;;AA6BxH;;AAA6C;;AAAkC;;;;;;AAAlC;;AAAA;;;;;;AAJjD;;AACE;;AAAG;;AAAc;;AACjB;;AACA;;AACE;;AACF;;AACF;;;;;;AAFQ;;AAAA;;;;UDlBKmM,uB;AASX,yCAAoBjO,oBAApB,EAAwEC,KAAxE,EAAuGC,aAAvG,EAAqI;AAAA;;AAAjH,eAAAF,oBAAA,GAAAA,oBAAA;AAAoD,eAAAC,KAAA,GAAAA,KAAA;AAA+B,eAAAC,aAAA,GAAAA,aAAA;AALvG,eAAA+G,gBAAA,GAA2B,EAA3B;AAGA,eAAAC,QAAA,GAA2B,IAAI,sEAAJ,EAA3B;AAEwI;;;;qCAEhI;AACN,iBAAK9G,QAAL,GAAgB,KAAKH,KAAL,CAAWI,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,IAAjC,CAAhB;AACA,iBAAKC,SAAL;AACA,iBAAK0N,iBAAL;AACD;AAED;;;;;;2CAGiBC,Q,EAAgB;AAC/B,iBAAKlH,gBAAL,GAAwBkH,QAAxB,CAD+B,CAE/B;;AACA,iBAAKD,iBAAL;AACD;AAED;;;;;;8CAGiB;AAAA;;AACf,iBAAKhO,aAAL,CAAmBkO,WAAnB,CAA+B,KAAKhO,QAApC,EAA8C,KAAK6G,gBAAnD,EAAqErG,IAArE,CAA0E,UAAAC,QAAQ,EAAI;AACpF,qBAAI,CAACqG,QAAL,GAAgCrG,QAAhC;AACAE,qBAAO,CAACC,IAAR,CAAa,yBAAyB,OAAI,CAACF,MAAL,CAAYG,EAArC,GAA0C,qBAAvD;AACD,aAHD;AAID;AAED;;;;;;sCAGS;AAAA;;AACP,iBAAKjB,oBAAL,CAA0BW,UAA1B,CAAqC,KAAKP,QAA1C,EAAoDQ,IAApD,CAAyD,UAAAC,QAAQ,EAAI;AACnE,qBAAI,CAACC,MAAL,GAAuBD,QAAvB;AACAE,qBAAO,CAACC,IAAR,CAAa,aAAa,OAAI,CAACF,MAAL,CAAYG,EAAzB,GAA8B,oBAA3C;AACD,aAHD;AAID;;;;;;;yBA5CUgN,uB,EAAuB,qJ,EAAA,+H,EAAA,uI;AAAA,O;;;cAAvBA,uB;AAAuB,4C;AAAA,iB;AAAA,gB;AAAA,wf;AAAA;AAAA;;;ACZpC;;AACE;;AACF;;AAEA;;AACE;;AACA;;AACE;;AAEJ;;AAAI;;;;AAAkC;;AACtC;;AAAiC;AAAA;;AAAA;;AAAA,qBAAU,IAAAI,gBAAA,WAAV;AAA6C,aAA7C;;AAC/B;;AAAmB;;;;AAAsC;;AACzD;;AAAmB;;;;AAAsC;;AACzD;;AAAmB;;;;AAAsC;;AACzD;;AAAmB;;;;AAAkC;;AACvD;;AACA;;AACA;;AACA;;AAAI;;;;AAAiC;;AACrC;;AACA;;AAAG;;AAA8D;;AACjE;;AACA;;AAAG;;AAAoE;;AACvE;;AACA;;AAAG;;AAAkE;;AACrE;;AACA;;AAOA;;AAAK;;AACL;;AAAG;;AAAgC;;AAAiE;;AAAiB;;AAAI;;AAAS;;AAC9H;;AACF;;AACF;;;;AApC6B;;AAAA;;AAIJ;;AAAA,+FAAqB,QAArB,EAAqB,UAArB;;AAIrB;;AAAA;;AAEiB;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAIjB;;AAAA;;AAED;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAEE;;AAAA;;;;;;;;;;wEDdQJ,uB,EAAuB;gBALnC,uDAKmC;iBALzB;AACT/M,oBAAQ,EAAE,qBADD;AAETC,uBAAW,EAAE,kCAFJ;AAGTC,qBAAS,EAAE,CAAC,iCAAD;AAHF,W;AAKyB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEVpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;UAGakN,c;;;;;;;;;;;;;;;;;;;ACLb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACWM;;AAAkC;;AAClC;;AACA;;;;AACA;;;;;;AADqB;;AAAA;;;;;;AAGrB;;AAAkC;;AAAkD;;AAAI;;AAAmC;;AAAK;;;;;;AAAxC;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;UDHjFC,0B;AAUX;;;AAGA,4CAAoBtO,KAApB,EAAmDoD,gBAAnD,EAA+FC,MAA/F,EAA+G;AAAA;;AAA3F,eAAArD,KAAA,GAAAA,KAAA;AAA+B,eAAAoD,gBAAA,GAAAA,gBAAA;AAA4C,eAAAC,MAAA,GAAAA,MAAA;AAL/F,eAAAC,QAAA,GAAmB,IAAnB;AAKkH;AAElH;;;;;;;qCAGQ;AAAA;;AACN;AAEA,iBAAKtD,KAAL,CACG0D,WADH,CAEGtB,SAFH,CAEa,UAAAuB,MAAM,EAAI;AACnB,qBAAI,CAACC,WAAL,GAAmBD,MAAM,CAAC,GAAD,CAAN,IAAe,IAAlC;AACA,qBAAI,CAACL,QAAL,GAAgBK,MAAM,CAAC,OAAD,CAAN,IAAmB,IAAnC;AACD,aALH;AAOA,iBAAKxD,QAAL,GAAgB,KAAKH,KAAL,CAAWI,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,UAAjC,CAAhB;AACA,iBAAKuE,IAAL,GAAY,KAAK7E,KAAL,CAAWI,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,MAAjC,CAAZ;AACA,iBAAKiO,wBAAL,CAA8B,KAAKpO,QAAnC,EAA6C,KAAK0E,IAAlD,EAAwD,KAAKvB,QAA7D;AACD;AAED;;;;;;mDAGyBnD,Q,EAAkB0E,I,EAAcvB,Q,EAAgB;AAAA;;AACvExC,mBAAO,CAACC,IAAR,CAAa,kCAAkCZ,QAAlC,GAA6C,GAA7C,GAAmD0E,IAAnD,GAA0D,OAAvE;AACA,iBAAKzB,gBAAL,CAAsBoL,wBAAtB,CAA+CrO,QAA/C,EAAyD0E,IAAzD,EAA+DvB,QAA/D,EAAyE,IAAzE,EAA+E3C,IAA/E,CAAoF,UAAAC,QAAQ,EAAI;AAC9F,qBAAI,CAAC6N,cAAL,GAAsC7N,QAAtC;AACD,aAFD;AAGD;AAED;;;;;;iCAGOuD,Q,EAAgB;AAAA;;AACrB,gBAAII,MAAM,GAAG,KAAKC,eAAlB,CADqB,CAGrB;;AACA,gBAAI;AACFC,qBAAO,CAACC,MAAR,CAAe,iBAAf;AACD,aAFD,CAEE,OAAMC,CAAN,EAAS;AACTL,mBAAK,CAAC,YAAYK,CAAb,CAAL;AACD;;AAED7D,mBAAO,CAACC,IAAR,CAAa,cAAcoD,QAAd,GAAyB,KAAzB,GAAiCI,MAA9C;AAEA,iBAAKnB,gBAAL,CAAsBwB,MAAtB,CAA6BT,QAA7B,EAAuCI,MAAvC,EAA+C,KAAKpE,QAApD,EAA8D,KAAKmD,QAAnE,EAA6E3C,IAA7E,CAAkF,UAAAC,QAAQ,EAAI;AAC5FE,qBAAO,CAACC,IAAR,CAAa,yBAAb;;AACA,qBAAI,CAACsC,MAAL,CAAY0B,QAAZ,CAAqB,CAAC,gCAAgC,OAAI,CAAC5E,QAAtC,CAArB;AACD,aAHD;AAID;;;;;;;yBA9DUmO,0B,EAA0B,+H,EAAA,6I,EAAA,uH;AAAA,O;;;cAA1BA,0B;AAA0B,gD;AAAA,iB;AAAA,gB;AAAA,qkB;AAAA;AAAA;;;ACbvC;;AACE;;AAA2B;;AAAsB;;AACnD;;AAEA;;AAEE;;AACE;;AACE;;AACA;;AAAG;;AAAoB;;AAAI;;AAAe;;AAAK;;AAC/C;;AACA;;AAIA;;AACA;;AACA;;AACA;;AAAK;;AACL;;AACA;;AAAG;;AAA8E;;AACjF;;AACA;;AAAG;;AAA2M;;AAAkE;;AAAsE;;AAAI;;AAC1V;;AACA;;AAAG;;AAAoK;;AACvK;;AACA;;AAAG;;AAAwH;;AAC3H;;AACN;;AACG;AAAA;AAAA;;AAgBD;;AACI;;AACA;;AAAwD;AAAA;;AAAA;;AAAA,qBAAS,IAAA1J,MAAA,WAAT;AAAgC,aAAhC;;AAAgD;;AAAO;;AAC/G;;AACF;;AACF;;AACF;;;;AA1CiC;;AAAA;;AAExB;;AAAA;;AAKA;;AAAA;;AAM8M;;AAAA;;AAIxI;;AAAA;;AAG5E;;AAAA,qGAA6B,MAA7B,EAA6B,4IAA7B;;;;;;;;;;;wEDhBU0J,0B,EAA0B;gBANtC,uDAMsC;iBAN5B;AACTrN,oBAAQ,EAAE,yBADD;AAETC,uBAAW,EAAE,sCAFJ;AAGTC,qBAAS,EAAE,CAAC,qCAAD,CAHF;AAITuJ,yBAAa,EAAE,gEAAkBC;AAJxB,W;AAM4B,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEbvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;UAGa+D,M;;;;;;;;;;;;;;;;;;;ACHb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACWQ;;AAAiD;;AAAwC;;AAAoH;;AAAgF;;AAAK;;AAAmB;;;;;;AACrT;;AAAmD;;AAAQ;;AAAM;;AAAS;;AAAI;;AAAoC;;AAAoH;;AAAgF;;AAAK;;AAAI;;AAAK;;;;;;;;;;AAKpU;;AAAuD;;AAA8E;;AAA0C;;AAAI;;;;;;AAAtF;;AAAA;;AAAwC;;AAAA;;;;;;;;;;AAGvI;;AACE;;AACA;;AACE;;AAAiF;;;;AAAoC;;AACvH;;AACF;;;;AAFsD;;AAAA;;AAA+B;;AAAA;;;;;;AAsDnF;;AACE;;AAAI;;AAA0B;;AAAmD;;AAAI;;AACrF;;AAAI;;AAA0B;;AAA+C;;AAAI;;AACjF;;AAAI;;AAA0B;;;;AAAiF;;AAAI;;AACnH;;AAAI;;AAA0B;;AAAuD;;AAAI;;AAC3F;;;;;;AAJgC;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;AAQhC;;AACE;;AAAI;;AAA0B;;AAAwD;;AAAI;;AAC5F;;;;;;AADgC;;AAAA;;;;;;;;;;;;;;;;;;;;AA/DlC;;AACE;;AAAK;;AACL;;AAAI;;AAAoC;;AACxC;;AAAgF;;AAAqB;;AACrG;;AAA0E;;AAAe;;AAEzF;;AAAK;;AACL;;AAAI;;;;AAAyC;;AAE7C;;AAA8D;;;;AAAmC;;AACjG;;AACA;;AACE;;AAAQ;AAAA;;AAAA;;AAAA,mBAAS,qBAAgC,cAAhC,CAAT;AAAwD,WAAxD;;AAAoG;;;;AAAkC;;AAChJ;;AAEI;;AACE;;AACE;;AAAI;;;;AAAkC;;AAEtC;;AAEA;;;;AACA;;;;AACA;;;;AACA;;AACE;;AAAqB;;AAAI;;AACzB;;AAAsB;;AAAK;;AAC7B;;AACA;;AACE;;AAAmB;;;;AAAqC;;AACxD;;AAAmB;;;;AAAqC;;AACxD;;AAAmB;;;;AAAqC;;AACxD;;AAAmB;;;;AAAqC;;AAC1D;;AACA;;AACE;;AAA8C;;AAAiG;;AAC/I;;AAA2B;;;;AAAwC;;AACrE;;AACA;;AACE;;AAAkE;AAAA;;AAAA;;AAAA,mBAAS,qBAAgC,cAAhC,CAAT;AAAwD,WAAxD;;AAA0D;;;;AAAgC;;AAC5J;;AAAkD;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,8CAA8B,IAA9B,EAAoC,GAAF,MAAlC,EAAkC,SAAlC,EAAkC,UAAlC,EAAkC,UAAlC,EAAkC,UAAlC,EAAkC,YAAlC;AAAkC,WAAlC;;AAAyI;;;;AAA6B;;AAE1N;;AACF;;AACF;;AAEJ;;AACA;;AAAK;;AACL;;AAAI;;;;AAAqD;;AAEzD;;AAMA;;AAEA;;AACA;;AAAK;;AACL;;AAAI;;;;AAA6B;;AAEjC;;AAGA;;AAEF;;;;;;AAhEwC;;AAAA;;AACA;;AAAA;;AAGlC;;AAAA;;AAEkC;;AAAA;;AAAwB;;AAAA;;AAGgD;;AAAA;;AAKlG;;AAAA;;AAIoE;;AAAA;;AACF;;AAAA;;AACF;;AAAA;;AAM/C;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAIQ;;AAAA;;AAGiG;;AAAA;;AAC+D;;AAAA;;AAQjM;;AAAA;;AAEA;;AAAA;;AAUA;;AAAA;;AAEA;;AAAA;;;;UD1ECC,kB;AAMX;;;AAGA,oCAAoBtL,MAApB,EAA4CrD,KAA5C,EAA2E+B,qBAA3E,EAAiIhC,oBAAjI,EAAqL8K,UAArL,EAAuO3I,QAAvO,EAAiP;AAAA;;AAA7N,eAAAmB,MAAA,GAAAA,MAAA;AAAwB,eAAArD,KAAA,GAAAA,KAAA;AAA+B,eAAA+B,qBAAA,GAAAA,qBAAA;AAAsD,eAAAhC,oBAAA,GAAAA,oBAAA;AAAoD,eAAA8K,UAAA,GAAAA,UAAA;AAAkD,eAAA3I,QAAA,GAAAA,QAAA;AANvO,eAAAkL,OAAA,GAAqB,EAArB;AAMoP;AAEpP;;;;;;;qCAGQ;AACN,iBAAKwB,UAAL;AACA,iBAAKtM,OAAL;AACD;AAED;;;;;;mDAGsB;AAAA;;AACpBxB,mBAAO,CAACC,IAAR,CAAa,8BAAb;AAEA,iBAAKhB,oBAAL,CAA0B8O,sBAA1B,GAAmDlO,IAAnD,CAAwD,UAAAC,QAAQ,EAAI;AAClE,qBAAI,CAAC0M,YAAL,GAAyC1M,QAAzC;AACD,aAFD;AAGD;AAED;;;;;;uCAGU;AAAA;;AACRE,mBAAO,CAACC,IAAR,CAAa,qBAAb;AAEA,iBAAKhB,oBAAL,CAA0B6O,UAA1B,GAAuCjO,IAAvC,CAA4C,UAAAC,QAAQ,EAAI;AACtD,qBAAI,CAACwM,OAAL,GAA0BxM,QAA1B;AACD,aAFD;AAGD;AAED;;;;;;;;kCAKQuG,K,EAAepE,Q,EAAkB+E,Q,EAAkBoD,S,EAAmBC,Q,EAAkBE,I,EAAcpH,Q,EAAkB6K,a,EAAsB;AAAA;;AACpJ;AAEA,gBAAI3H,KAAK,IAAI,IAAT,IAAkBA,KAAK,IAAI,IAAT,IAAiBA,KAAK,CAACpD,MAAN,IAAgB,CAAvD,EAA2D;AACzDO,mBAAK,CAAC,8CAAD,CAAL;AACA;AACD;;AAED,gBAAIwD,QAAQ,IAAI,IAAZ,IAAqBA,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,CAAC/D,MAAT,IAAmB,CAAhE,EAAoE;AAClEO,mBAAK,CAAC,gEAAD,CAAL;AACA;AACD;;AAED,gBAAIvB,QAAQ,IAAI,IAAZ,IAAqBA,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,CAACgB,MAAT,IAAmB,CAAhE,EAAoE;AAClEhB,sBAAQ,GAAGoE,KAAX;AACD,aAfmJ,CAgBpJ;;;AAEA,iBAAK0D,UAAL,CAAgBkE,OAAhB,CAAwB5H,KAAxB,EAA+BpE,QAA/B,EAAyC+E,QAAzC,EAAmDoD,SAAnD,EAA8DC,QAA9D,EAAwEE,IAAxE,EAA8EpH,QAA9E,EAAwF6K,aAAxF,EAAuGnO,IAAvG,CAA4G,UAAAC,QAAQ,EAAI;AACtH0D,mBAAK,CAAC,mCAAD,CAAL;;AACA,qBAAI,CAACpC,QAAL,CAAcS,cAAd,CAA6B,gBAA7B,EAA+CC,SAA/C,CAAyDC,MAAzD,CAAgE,cAAhE;AACD,aAHD;AAID;AAED;;;;;;oCAGO;AAAA;;AACL,iBAAKd,qBAAL,CAA2BO,OAA3B,GAAqC3B,IAArC,CAA0C,UAAAC,QAAQ,EAAI;AACpD,qBAAI,CAACkC,IAAL,GAAkBlC,QAAlB;;AAEA,kBAAI,OAAI,CAACkC,IAAL,IAAc,IAAlB,EAAwB;AACtB;AACAhC,uBAAO,CAACC,IAAR,CAAa,eAAe,OAAI,CAAC+B,IAAL,CAAUC,QAAtC;;AACA,oBAAI,OAAI,CAACD,IAAL,CAAUuI,IAAV,KAAmB,OAAvB,EAAgC;AAC9B,yBAAI,CAACwD,sBAAL;AACD;AACF,eAND,MAMO;AACL/N,uBAAO,CAACkC,KAAR,CAAc,qDAAd;AACD;AACF,aAZD;AAaD;;;;;;;yBAvFU2L,kB,EAAkB,uH,EAAA,+H,EAAA,uJ,EAAA,qJ,EAAA,iI,EAAA,gEASwL,wDATxL,C;AASgM,O;;;cATlNA,kB;AAAkB,sC;AAAA,iB;AAAA,e;AAAA,iyD;AAAA;AAAA;ACf/B;;AACE;;AAA2B;;;;AAAmC;;AAChE;;AAEA;;AAEE;;AACE;;AACE;;AAAI;;AAAO;;AAEX;;AACE;;AACA;;AACF;;AAEA;;AAEE;;AACF;;AAEA;;AAOA;;AAoEF;;AACF;;AACF;;;;AAhG6B;;AAAA;;AAUlB;;AAAA;;AACA;;AAAA;;AAKC;;AAAA;;AAGD;;AAAA;;AAOA;;AAAA;;;;;;;;;;wEDZEA,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACT1N,oBAAQ,EAAE,eADD;AAETC,uBAAW,EAAE,4BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD;AAHF,W;AAKoB,U;;;;;;;;;;;;;;oBASiL,oD;qBAAO,wD;;;;;;;;;;;;;;;;;;;;;AExBvN;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACoBQ;;AACE;;AAAqB;;AAAuC;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,qBAAgC,cAAhC,CAAT;AAAwD,WAAxD;;AAA0D;;AAAkB;;AAC1I;;;;;;AACA;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAKA;;AAA+C;;AAAK;;AAAI;;;;AAAwC;;AAAK;;;;AAA4D;;;;;;AAAzG;;AAAA;;AAA6C;;AAAA;;;;;;AACrG;;AAA6C;;AAAK;;AAAI;;;;AAAwC;;AAAK;;;;AAA0D;;;;;;AAAvG;;AAAA;;AAA6C;;AAAA;;;;;;AAHrG;;AACE;;AAAI;;;;AAA4C;;AAAK;;AAAM;;AAAuE;;AAA+B;;AACjK;;AACA;;AACF;;;;;;AAHM;;AAAA;;AAA0D;;AAAA;;AAAoE;;AAAA;;AAC5H;;AAAA;;AACA;;AAAA;;;;;;AAhBV;;AACE;;;;AAKA;;AAGA;;AAIA;;AAOE;;AAGJ;;;;;;AAtBmB;;AAAA;;AAKd;;AAAA;;AAGA;;AAAA;;AAIA;;AAAA;;;;;;;;AAaoD;;AAAiE;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,qBAAqC,cAArC,CAAT;AAA6D,WAA7D;;AAA+D;;;;AAAwC;;;;AAAxC;;AAAA;;;;;;;;AAAiD;;AAAgE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAiD;;;;AAAwC;;;;AAAxC;;AAAA;;;;;;AAD3V;;AACI;;AAAG;;;;AAA6C;;AAAK;;AAAiL;;AAAkK;;AAC5Y;;;;;;AADO;;AAAA;;AAA0D;;AAAA;;AAAiL;;AAAA;;;;;;;;AAIhP;;AACE;;AAAiC;AAAA;;AAAA;;AAAA;AAAA;;AAA2B;;;;AAA8C;;AAC5G;;;;AAD8D;;AAAA;;;;;;AAUxD;;AAAgD;;AAAK;;AAAI;;;;AAAwC;;AAAK;;;;AAA6D;;;;;;AAA1G;;AAAA;;AAA6C;;AAAA;;;;;;AACtG;;AAA8C;;AAAK;;AAAI;;;;AAAwC;;AAAK;;;;AAA2D;;;;;;AAAxG;;AAAA;;AAA6C;;AAAA;;;;;;AAHtG;;AACE;;AAAI;;;;AAA4C;;AAAK;;AAAM;;AAAwE;;AAAgC;;AACnK;;AACA;;AACF;;;;;;;;AAHM;;AAAA;;AAA0D;;AAAA;;AAAqE;;AAAA;;AAC7H;;AAAA;;AACA;;AAAA;;;;;;AAPV;;AACE;;AACA;;;;AAEA;;AAKF;;;;;;AAPO;;AAAA;;AAEF;;AAAA;;;;;;AALP;;AACE;;AAUF;;;;;;AAVO;;AAAA;;;;;;;;AAcsC;;AAAiE;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,qBAAqC,cAArC,CAAT;AAA6D,WAA7D;;AAA+D;;;;AAAwC;;;;AAAxC;;AAAA;;;;;;;;AAAiD;;AAAgE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAiD;;;;AAAwC;;;;AAAxC;;AAAA;;;;;;AApBjV;;AACE;;AAIA;;AAaA;;AAEA;;;;AAA6C;;AAAiL;;AAChO;;;;;;AApBK;;AAAA;;AAIE;;AAAA;;AAeL;;AAAA;;AAAqD;;AAAA;;AAAiL;;AAAA;;;;;;AAnD5O;;AACE;;AACE;;AAyBA;;AAIA;;AAsBF;;AACF;;;;;;AApDqB;;AAAA;;AAyBG;;AAAA;;AAIf;;AAAA;;;;;;AA2BP;;AAA+C;;;;AAA+C;;AAAwD;;;;AAAwC;;AAAI;;;;;;AAAnJ;;AAAA;;AAAkD;;AAAA;;AAAqD;;AAAA;;;;;;AACtJ;;AAA+C;;AAA+B;;;;;;AAA/B;;AAAA;;;;;;AAHjD;;AACE;;AACA;;AACA;;AACA;;AACF;;;;;;AAHK;;AAAA;;AACA;;AAAA;;;;;;AAIL;;AACE;;AACE;;AAAI;;;;AAA0D;;AAC9D;;AAAiB;;;;AAA2D;;AAAQ;;AAAgC;;AAAU;;;;AAAyE;;AAAQ;;AAAoB;;AAAS;;AAAC;;AAC/O;;AACF;;;;;;AAHQ;;AAAA;;AACa;;AAAA;;AAAmE;;AAAA;;AAA0C;;AAAA;;AAAiF;;AAAA;;;;UD9DxM6N,iB;AAcX,mCAAoBrF,kBAApB,EAAoEE,gBAApE,EAAkI3H,QAAlI,EAAoJH,qBAApJ,EAA0M/B,KAA1M,EAAyO4J,wBAAzO,EAA6R;AAAA;;AAAzQ,eAAAD,kBAAA,GAAAA,kBAAA;AAAgD,eAAAE,gBAAA,GAAAA,gBAAA;AAA8D,eAAA3H,QAAA,GAAAA,QAAA;AAAkB,eAAAH,qBAAA,GAAAA,qBAAA;AAAsD,eAAA/B,KAAA,GAAAA,KAAA;AAA+B,eAAA4J,wBAAA,GAAAA,wBAAA;AAPzO,eAAAzB,OAAA,GAAoB,EAApB;AACA,eAAA8G,qBAAA,GAAiC,KAAjC;AAIA,eAAAC,SAAA,GAAoB,IAApB;AAEgS;;;;qCAExR;AAAA;;AACN;AACA,iBAAK3K,MAAL,GAAc,IAAd,CAFM,CAEc;;AACpB,iBAAKuF,cAAL,GAAsB,KAAtB;AAEA,iBAAKG,WAAL;AAEA,iBAAKjK,KAAL,CACG0D,WADH,CAEGtB,SAFH,CAEa,UAAAuB,MAAM,EAAI;AACnB,kBAAIQ,QAAQ,GAAGR,MAAM,CAAC,GAAD,CAAN,IAAe,IAA9B,CADmB,CAEnB;;AAEA,kBAAIQ,QAAQ,IAAI,IAAhB,EAAsB;AACpBrD,uBAAO,CAACC,IAAR,CAAa,gEAAgEoD,QAA7E,EADoB,CAEpB;;AAEA,uBAAI,CAAC4F,WAAL,CAAiB5F,QAAjB;;AAEA,uBAAI,CAAC6F,WAAL,CAAiB7F,QAAjB,EAA2B,IAA3B,EAAiC,KAAjC;AACD;AACF,aAdH;AAeD;AAED;;;;;;sCAGoBA,Q,EAAgB;AAClCrD,mBAAO,CAACkC,KAAR,CAAc,oDAAoDmB,QAAlE;AACA,iBAAKjC,QAAL,CAAcS,cAAd,CAA6B,UAA7B,EAAyCN,KAAzC,GAAiD8B,QAAjD;AACD;AAED;;;;;;;;;sCAMYA,Q,EAAkBgD,K,EAAe+C,a,EAAsB;AAAA;;AACjE,iBAAK+E,qBAAL,GAA6B,KAA7B;;AAEA,gBAAI9K,QAAQ,CAACJ,MAAT,KAAoB,CAAxB,EAA2B;AACzBO,mBAAK,CAAC,mCAAD,CAAL;AACA;AACD,aANgE,CAQjE;;;AACA,iBAAKwF,cAAL,GAAsB,KAAtB;AAEA,gBAAI7F,QAAQ,GAAG,IAAf;;AACA,gBAAIkD,KAAK,IAAI,IAAb,EAAmB;AACjBlD,sBAAQ,GAAG,KAAK4F,gBAAL,CAAsBM,WAAjC;AACD;;AAED,iBAAKR,kBAAL,CAAwBwF,aAAxB,CAAsChL,QAAtC,EAAgDgD,KAAhD,EAAuD,KAAKhH,QAA5D,EAAsE8D,QAAtE,EAAgF,CAAhF,EAAmF,CAAnF,EAAsFtD,IAAtF,CAA2F,UAAAC,QAAQ,EAAI;AACrG,qBAAI,CAACuH,OAAL,GAAyBvH,QAAzB,CADqG,CAErG;;AACA,qBAAI,CAACkJ,cAAL,GAAsB,IAAtB;;AAEA,kBAAI,OAAI,CAAC3B,OAAL,CAAapE,MAAb,IAAuB,CAA3B,EAA8B;AAC5B,uBAAI,CAACQ,MAAL,GAAc,IAAI,qDAAJ,EAAd;AACD,eAFD,MAEO;AACL,uBAAI,CAACA,MAAL,GAAc,OAAI,CAAC4D,OAAL,CAAa,CAAb,CAAd;AACD,eAToG,CAWrG;;;AACA,kBAAIhB,KAAK,IAAI,IAAT,IAAiB+C,aAArB,EAAoC;AAClC,uBAAI,CAAC3F,MAAL,CAAY,OAAZ,IAAuB4C,KAAvB;AACA,uBAAI,CAAC5C,MAAL,CAAY,mBAAZ,IAAmCJ,QAAnC;;AACA,uBAAI,CAACjC,QAAL,CAAcS,cAAd,CAA6B,qBAA7B,EAAoDC,SAApD,CAA8DC,MAA9D,CAAqE,cAArE,EAHkC,CAIlC;;AACD;AAEF,aAnBD,WAoBO,UAAAjC,QAAQ,EAAI;AACjB,qBAAI,CAACsO,SAAL,GAAyBtO,QAAzB;;AACA,kBAAI,OAAI,CAACsO,SAAL,KAAmB,sBAAvB,EAA+C,CAC7C;AACD,eAFD,MAEO;AACL5K,qBAAK,CAAC,YAAY,OAAI,CAAC4K,SAAlB,CAAL;AACD;;AAED,qBAAI,CAACpF,cAAL,GAAsB,IAAtB;AACA,qBAAI,CAACvF,MAAL,GAAc,IAAd,CATiB,CAUjB;AACD,aA/BD;AAiCJ;;;;;;;;;;;;;;AAcG;AAED;;;;;;2CAGc;AAAA;;AACZ,gBAAIJ,QAAQ,GAAG,KAAKjC,QAAL,CAAcS,cAAd,CAA6B,UAA7B,EAAyCN,KAAxD,CADY,CAEZ;;AAEA,iBAAKsH,kBAAL,CAAwBwF,aAAxB,CAAsChL,QAAtC,EAAgD,IAAhD,EAAsD,KAAKhE,QAA3D,EAAqE,IAArE,EAA2E,CAA3E,EAA8E,CAA9E,EAAiFQ,IAAjF,CAAsF,UAAAC,QAAQ,EAAI;AAChG,qBAAI,CAACuH,OAAL,GAAyBvH,QAAzB,CADgG,CAEhG;;AACA,qBAAI,CAACqO,qBAAL,GAA6B,IAA7B;AACD,aAJD,WAKO,UAAArO,QAAQ,EAAI;AACjB,qBAAI,CAACsO,SAAL,GAAyBtO,QAAzB;;AACA,kBAAI,OAAI,CAACsO,SAAL,KAAmB,sBAAvB,EAA+C,CAC7C;AACD,eAFD,MAEO;AACL5K,qBAAK,CAAC,YAAY,OAAI,CAAC4K,SAAlB,CAAL;AACD,eANgB,CAQjB;;AACD,aAdD;AAeD;AAED;;;;;;;iDAIuB/K,Q,EAAgB;AAAA;;AAErC,gBAAIA,QAAQ,CAACJ,MAAT,KAAoB,CAAxB,EAA2B;AACzBO,mBAAK,CAAC,mCAAD,CAAL;AACA;AACD,aALoC,CAOrC;;;AACA,iBAAKqF,kBAAL,CAAwBS,sBAAxB,CAA+CjG,QAA/C,EAAyD,KAAKhE,QAA9D,EAAwEQ,IAAxE,CAA6E,UAAAC,QAAQ,EAAI;AACvF,qBAAI,CAAC2D,MAAL,GAAsB3D,QAAtB;AACD,aAFD;AAGD;AAED;;;;;;wCAGW;AAAA;;AACT,iBAAKmB,qBAAL,CAA2BkI,WAA3B,GAAyCtJ,IAAzC,CAA8C,UAAAC,QAAQ,EAAI;AACxD,qBAAI,CAACmC,QAAL,GAA0BnC,QAA1B;;AAEA,kBAAI,OAAI,CAACmC,QAAL,IAAkB,IAAtB,EAA4B;AAC1B;AACAjC,uBAAO,CAACC,IAAR,CAAa,eAAe,OAAI,CAACgC,QAAL,CAAcA,QAA1C;AACD,eAHD,MAGO;AACLjC,uBAAO,CAACkC,KAAR,CAAc,sDAAd;AACD;AACF,aATD;AAUD;AAED;;;;;;;wCAIc8E,Q,EAAgB;AAC5BxD,iBAAK,CAAC,uBAAuB,KAAKsF,wBAAL,CAA8BS,OAA9B,CAAsC,KAAK9F,MAAL,CAAYA,MAAlD,EAA0DuD,QAA1D,CAAxB,CAAL;AACA,iBAAK5F,QAAL,CAAcS,cAAd,CAA6B,WAA7B,EAA0CN,KAA1C,GAAkD,EAAlD;AACA,iBAAKH,QAAL,CAAcS,cAAd,CAA6B,gBAA7B,EAA+CC,SAA/C,CAAyDC,MAAzD,CAAgE,cAAhE;AACD;AAED;;;;;;qCAGW;AACT,gBAAIyH,YAAY,GAAqBpI,QAAQ,CAACS,cAAT,CAAwB,WAAxB,CAArC;AACA,gBAAI4H,CAAC,GAAqBrI,QAAQ,CAACS,cAAT,CAAwB,UAAxB,CAA1B;;AACA,gBAAI2H,YAAY,CAACE,IAAb,KAAsB,UAA1B,EAAsC;AACpCF,0BAAY,CAACE,IAAb,GAAoB,MAApB;AACAD,eAAC,CAACE,GAAF,GAAQ,gCAAR;AACD,aAHD,MAGO;AACLH,0BAAY,CAACE,IAAb,GAAoB,UAApB;AACAD,eAAC,CAACE,GAAF,GAAQ,yBAAR;AACD;AACF;;;;;;;yBAvMUuE,iB,EAAiB,kJ,EAAA,qI,EAAA,gEAcoF,wDAdpF,C,EAc4F,uJ,EAAA,+H,EAAA,8J;AAAA,O;;;cAd7GA,iB;AAAiB,sC;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,gB;AAAA,08D;AAAA;AAAA;;;AChB9B;;AACE;;AACE;;AACE;;AACE;;AAAqD;AAAA;;AAAA;;AAAA,qBAAiB,IAAAhF,WAAA,YAA4B,IAA5B,EAAkC,KAAlC,CAAjB;AAAyD,aAAzD;;;;AAArD;;AACA;;AAA0B;AAAA;;AAAA;;AAAA,qBAAS,IAAAA,WAAA,YAA4B,IAA5B,EAAkC,KAAlC,CAAT;AAAiD,aAAjD;;AACxB;;AACF;;AACF;;AACF;;AACF;;AAEA;;AAwDA;;AAOA;;AAOA;;AACE;;AACE;;AAAI;;;;AAA4C;;AAChD;;AAAiB;;;;AAA4C;;AAC7D;;AAAkF;AAAA;;AAAA;;AAAA;;AAAA,qBAAiB,IAAAA,WAAA,uBAAyC,IAAzC,CAAjB;AAA+D,aAA/D;;AAAlF;;AACA;;AACE;;AACA;;AAAkB;;;;AAAoD;;AACxE;;AACA;;AACE;;AAAkE;AAAA;;AAAA;;AAAA,qBAAS,qBAAqC,cAArC,CAAT;AAA6D,aAA7D;;AAA+D;;;;AAAgC;;AACjK;;AAAkD;AAAA;;AAAA;;AAAA;;AAAA,qBAAS,IAAAA,WAAA,uBAAyC,IAAzC,CAAT;AAAuD,aAAvD;;AAAyD;;AAAM;;AACnH;;AACA;;AACJ;;AAEA;;AACI;;AACE;;AAAI;;AAAc;;AAClB;;AAAiB;;AAAiD;;AAClE;;AACE;;AAAkG;AAAA;;AAAA;;AAAA,qBAAiB,IAAAoF,aAAA,WAAjB;AAA+C,aAA/C;;;;AAAlG;;AACA;;AAAmB;AAAA,qBAAQ,IAAAC,QAAA,EAAR;AAAkB,aAAlB;;AACjB;;AACF;;AACF;;AACA;;AACE;;AAAkE;AAAA;;AAAA;;AAAA,qBAAS,qBAAgC,cAAhC,CAAT;AAAwD,aAAxD;;AAA0D;;;;AAAgC;;AAC5J;;AAAkD;AAAA;;AAAA;;AAAA,qBAAS,IAAAD,aAAA,WAAT;AAAuC,aAAvC;;AAAyC;;AAAO;;AACpG;;AACF;;AACJ;;AAEF;;;;AA/GwH;;AAAA;;AAQ9E;;AAAA;;AAwDnC;;AAAA;;AAOmC;;AAAA;;AAShC;;AAAA;;AACa;;AAAA;;AAIG;;AAAA;;AAG+G;;AAAA;;AAW9E;;AAAA;;AAM2E;;AAAA;;;;;;;;;;;wED7FzHJ,iB,EAAiB;gBAN7B,uDAM6B;iBANnB;AACT/N,oBAAQ,EAAE,eADD;AAETC,uBAAW,EAAE,4BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD,CAHF;AAITuJ,yBAAa,EAAE,gEAAkBC;AAJxB,W;AAMmB,U;;;;;;;;oBAc6E,oD;qBAAO,wD;;;;;;;;;;AAXhHxK,kBAAQ,EAAE,CAAF;kBADP;AACO,WAAE;;;;;;;;;;;;;;;;;;;AEnBZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCE;;AAAkD;;AAAuB;;AAAS;;AAAK;;AAAE;;AAAiC;;AAAe;;AAAI;;;;;;AAAjD;;AAAA;;AAA8B;;AAAA;;;;UDS/GmP,kB;AAKX,oCAAoBvP,oBAApB,EAAwEC,KAAxE,EAA+F;AAAA;;AAA3E,eAAAD,oBAAA,GAAAA,oBAAA;AAAoD,eAAAC,KAAA,GAAAA,KAAA;AAA0B;;;;qCAE1F;AACN,iBAAKG,QAAL,GAAgB,KAAKH,KAAL,CAAWI,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,IAAjC,CAAhB;AACA,iBAAKC,SAAL;AACD;AAED;;;;;;sCAGS;AAAA;;AACP,iBAAKR,oBAAL,CAA0BW,UAA1B,CAAqC,KAAKP,QAA1C,EAAoDQ,IAApD,CAAyD,UAAAC,QAAQ,EAAI;AACnE,qBAAI,CAACC,MAAL,GAAuBD,QAAvB;AACAE,qBAAO,CAACC,IAAR,CAAa,aAAa,OAAI,CAACF,MAAL,CAAYG,EAAzB,GAA8B,oBAA3C;AACD,aAHD;AAID;;;;;;;yBApBUsO,kB,EAAkB,qJ,EAAA,+H;AAAA,O;;;cAAlBA,kB;AAAkB,uC;AAAA,iB;AAAA,e;AAAA,wQ;AAAA;AAAA;ACV/B;;AACE;;AACF;;AAEA;;AACE;;AAEA;;AACE;;AACE;;AAAI;;;;AAAmC;;AACvC;;AACF;;AACF;;AACF;;;;AAZ6B;;AAAA;;AAIJ;;AAAA,+FAAqB,QAArB,EAAqB,KAArB;;AAIf;;AAAA;;AACW;;AAAA;;;;;;;;;;wEDARA,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACTrO,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTC,qBAAS,EAAE,CAAC,4BAAD;AAHF,W;AAKoB,U;;;;;;;;;;;;;;;;;;;;;;;;AEV/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCE;;AAAkD;;;;AAAiD;;AAAqC;;AAAiB;;AAAI;;AAAC;;;;;;AAA5G;;AAAA;;AAAoD;;AAAA;;AAAkC;;AAAA;;;;;;AAkCpI;;AACE;;AAAyC;;AAAI;;AAAc;;AAAK;;AAClE;;;;;;AAD+C;;AAAA;;;;;;AAE/C;;AACE;;AACF;;;;;;;;AAGE;;AACE;;AACE;;AACE;;AAAiB;;AAAQ;;AAAE;;AAAS;;AACpC;;AAAI;;AAAM;;AAA+B;;AAAO;;AAClD;;AACA;;AACE;;AAAiB;;AAAqB;;AAAG;;AAAQ;;AAAE;;AAAS;;AAAI;;AAAO;;AACvE;;AAAiB;;;;AAAoE;;AACvF;;AACF;;AACA;;AAAoB;;;;AAAoE;;AAA+E;;AAAsE;;AAAI;;AAAoC;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAmC;;AAA+E;;AAAI;;AAE9Y;;AAAK;;AAAM;;AACb;;;;;;;;AAVgB;;AAAA;;AAI4B;;AAAA;;AAGtB;;AAAA;;AAAuE;;AAAA;;;;UDzCxFoO,gC;AAOX;;;AAGA,kDAAoBvP,KAApB,EAAmDoD,gBAAnD,EAA+FrD,oBAA/F,EAA2I;AAAA;;AAAvH,eAAAC,KAAA,GAAAA,KAAA;AAA+B,eAAAoD,gBAAA,GAAAA,gBAAA;AAA4C,eAAArD,oBAAA,GAAAA,oBAAA;AAL/F,eAAAyP,QAAA,GAA6B,EAA7B;AAK8I;AAE9I;;;;;;;qCAGQ;AACN,iBAAKrP,QAAL,GAAgB,KAAKH,KAAL,CAAWI,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,UAAjC,CAAhB;AACAQ,mBAAO,CAACC,IAAR,CAAa,gBAAgB,KAAKZ,QAAlC;AACA,iBAAKI,SAAL;AAEA,iBAAKkP,0BAAL;AACD;AAED;;;;;;sCAGS;AAAA;;AACP,iBAAK1P,oBAAL,CAA0BW,UAA1B,CAAqC,KAAKP,QAA1C,EAAoDQ,IAApD,CAAyD,UAAAC,QAAQ,EAAI;AACnE,qBAAI,CAACC,MAAL,GAAuBD,QAAvB;AACAE,qBAAO,CAACC,IAAR,CAAa,aAAa,OAAI,CAACF,MAAL,CAAYG,EAAzB,GAA8B,oBAA3C;AACD,aAHD;AAID;AAED;;;;;;oCAGU6D,I,EAAY;AAAA;;AACpB;AACA,iBAAKzB,gBAAL,CAAsBsM,gBAAtB,CAAuC,KAAKvP,QAA5C,EAAsD0E,IAAtD,EAA4DlE,IAA5D,CAAiE,UAAAC,QAAQ,EAAI;AAC3E;AACAE,qBAAO,CAACC,IAAR,CAAa,kBAAkB8D,IAAlB,GAAyB,qBAAtC,EAF2E,CAI3E;;AACA,qBAAI,CAAC4K,0BAAL;AACD,aAND;AAOD;AAED;;;;;;uDAG0B;AAAA;;AACxB3O,mBAAO,CAACC,IAAR,CAAa,gBAAgB,KAAKZ,QAAlC;AACA,iBAAKiD,gBAAL,CAAsBqM,0BAAtB,CAAiD,KAAKtP,QAAtD,EAAgE,IAAhE,EAAsE,IAAtE,EAA4EQ,IAA5E,CAAiF,UAAAC,QAAQ,EAAI;AAC3F,qBAAI,CAAC4O,QAAL,GAAkC5O,QAAlC,CAD2F,CAE3F;;AACA,kBAAI,OAAI,CAAC4O,QAAL,IAAkB,IAAtB,EAA4B;AAC1B1O,uBAAO,CAACC,IAAR,CAAa,0CAA0C,OAAI,CAACyO,QAAL,CAAczL,MAArE;AACD,eAFD,MAEO;AACLjD,uBAAO,CAACC,IAAR,CAAa,yCAAb;AACD;AACF,aARD;AASD;;;;;;;yBA7DUwO,gC,EAAgC,+H,EAAA,6I,EAAA,qJ;AAAA,O;;;cAAhCA,gC;AAAgC,sD;AAAA,iB;AAAA,e;AAAA,gjB;AAAA;AAAA;ACb7C;;AACE;;AACF;;AAEA;;AACE;;AAiBE;;AAWE;;AAAI;;AAA6B;;AACjC;;AAAK;;AAAM;;AACX;;AAGA;;AAGA;;AAEE;;AAeF;;AACF;;AACF;;AACF;;;;AA5DK;;AAAA;;AAkCwB;;AAAA;;AAGA;;AAAA;;AAKjB;;AAAA;;;;;;;;;;;wED9BCA,gC,EAAgC;gBAN5C,uDAM4C;iBANlC;AACTtO,oBAAQ,EAAE,+BADD;AAETC,uBAAW,EAAE,4CAFJ;AAGTC,qBAAS,EAAE,CAAC,2CAAD,CAHF;AAITuJ,yBAAa,EAAE,gEAAkBC;AAJxB,W;AAMkC,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEX7C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;UAGagF,Q;;;;;;;;;;;;;;;;;;;ACLb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACKA;;;ADMA;;;;;UAGaC,Y;AAGX;;;AAGA,8BAA2BC,YAA3B,EAAwD3H,SAAxD,EAA6F4H,SAA7F,EAA0H;AAAA;;AAA/F,eAAAD,YAAA,GAAAA,YAAA;AAA6B,eAAA3H,SAAA,GAAAA,SAAA;AAAqC,eAAA4H,SAAA,GAAAA,SAAA;AAL7F,eAAA3D,KAAA,GAAQ,eAAR;AAME,cAAI4D,eAAe,GAAGC,SAAS,CAAC/L,QAAhC,CADwH,CAExH;AACA;;AACA,cAAI8L,eAAe,CAACE,OAAhB,CAAwB,IAAxB,MAAkC,CAAtC,EAAyC;AACvC/H,qBAAS,CAACgI,cAAV,CAAyB,IAAzB;AACD,WAFD,MAEO,IAAIH,eAAe,CAACE,OAAhB,CAAwB,IAAxB,MAAkC,CAAtC,EAAyC;AAC9C/H,qBAAS,CAACgI,cAAV,CAAyB,IAAzB;AACD,WAFM,MAEA,IAAIH,eAAe,CAACE,OAAhB,CAAwB,IAAxB,MAAkC,CAAtC,EAAyC;AAC9C/H,qBAAS,CAACgI,cAAV,CAAyB,IAAzB;AACD,WAFM,MAEA;AACLhI,qBAAS,CAACgI,cAAV,CAAyB,IAAzB;AACD;AACF;AAED;;;;;;;qCAGQ;AACN,iBAAKC,QAAL,CAAc,OAAd;AACD;AAED;;;;;;uCAGU;AACR,gBAAIC,YAAY,GAAG,KAAKN,SAAL,CAAeO,IAAlC,CADQ,CAER;;AACA,gBAAID,YAAY,CAACH,OAAb,CAAqB,OAArB,MAAkC,CAAlC,IAAuCG,YAAY,CAACH,OAAb,CAAqB,iBAArB,MAA4C,CAAnF,IAAwFG,YAAY,CAACH,OAAb,CAAqB,gBAArB,MAA2C,CAAnI,IAAwIG,YAAY,CAACH,OAAb,CAAqB,YAArB,MAAuC,CAAnL,EAAsL;AAAE;AACtL,qBAAO,KAAP;AACD;;AACD,mBAAO,IAAP;AACD;AAED;;;;;;mCAGgBK,Q,EAAkB;AAChC,iBAAKT,YAAL,CAAkBM,QAAlB,CAA2BG,QAA3B;AACD;AAED;;;;;;sCAGYrM,Q,EAAkB;AAC5B,iBAAKiE,SAAL,CAAeqI,GAAf,CAAmBtM,QAAnB;AACD;;;;;;;yBApDU2L,Y,EAAY,gI,EAAA,qI,EAAA,iI;AAAA,O;;;cAAZA,Y;AAAY,iC;AAAA,gB;AAAA,e;AAAA,oD;AAAA;AAAA;ACdzB;;AAKA;;AAGA;;AACE;;AACF;;AAEA;;AAEA;;;;AATY;;AAAA;;;;;;;;;wEDSCA,Y,EAAY;gBATxB,uDASwB;iBATd;AACT3O,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,sBAFJ;AAGTC,qBAAS,EAAE,CAAC,qBAAD;AAHF,W;AASc,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEdzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACE;;AAA2B;;AAAW;;AACxC;;;;;;AAec;;AAAsE;;;;AAAqC;;;;AAArC;;AAAA;;;;;;AACtE;;AAAiD;;;;AAAqC;;;;AAArC;;AAAA;;;;;;AAEjD;;AAAsE;;;;AAAqC;;;;AAArC;;AAAA;;;;;;AACtE;;AAAiD;;;;AAAqC;;;;AAArC;;AAAA;;;;;;AAEjD;;AAAsE;;;;AAAqC;;;;AAArC;;AAAA;;;;;;AACtE;;AAAiD;;;;AAAqC;;;;AAArC;;AAAA;;;;;;;;AAjB3D;;AACE;;AACE;;AAAI;;AAAI;;;;AAAuC;;AAAK;;AAAI;;AAAiB;;AAAK;;AAC9E;;AAAI;;AAAI;;;;AAAyC;;AAAK;;AAAI;;AAA8H;;AAAK;;AAC7L;;AAAI;;AAAI;;;;AAAwC;;AAAK;;AAAI;;AAA0H;;AAAK;;AACxL;;AAAI;;AAAI;;AAAO;;AAAK;;AAAI;;AAA8G;;AAAK;;AAC3I;;AACE;;AAAI;;;;AAAmC;;AACvC;;AACE;;AACE;;AACA;;AAEA;;AACA;;AAEA;;AACA;;AACF;;AACF;;AACF;;AACA;;AAAI;;AAAI;;;;AAAmC;;AAAK;;AAAI;;AAA6G;;AAAK;;AACtK;;AAAI;;AAAI;;AAAmB;;AAAK;;AAAI;;AAAwI;;AAAK;;AACnL;;AACA;;AACA;;AAAwD;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAgJ;;AAAW;;AACrN;;;;;;AAxBY;;AAAA;;AAAgD;;AAAA;;AAChD;;AAAA;;AAAoJ;;AAAA;;AACpJ;;AAAA;;AAAgJ;;AAAA;;AAC1C;;AAAA;;AAExG;;AAAA;;AAGuC;;AAAA;;AACpB;;AAAA;;AAEoB;;AAAA;;AACpB;;AAAA;;AAEoB;;AAAA;;AACpB;;AAAA;;AAIjB;;AAAA;;;;UDlBHqP,sB;AAKX;;;AAGA,wCAAoBxQ,KAApB,EAAmDqD,MAAnD,EAA2EwH,UAA3E,EAAmG;AAAA;;AAA/E,eAAA7K,KAAA,GAAAA,KAAA;AAA+B,eAAAqD,MAAA,GAAAA,MAAA;AAAwB,eAAAwH,UAAA,GAAAA,UAAA;AAA2B;AAEtG;;;;;;;qCAGQ;AACN,iBAAK4F,MAAL,GAAc,KAAKzQ,KAAL,CAAWI,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,QAAjC,CAAd;AACA,iBAAKgC,OAAL;AACD;AAED;;;;;;oCAGU;AAAA;;AACR,iBAAKuI,UAAL,CAAgBvI,OAAhB,CAAwB,KAAKmO,MAA7B,EAAqC9P,IAArC,CAA0C,UAAAC,QAAQ,EAAI;AACpD,qBAAI,CAACkC,IAAL,GAAkBlC,QAAlB;AACD,aAFD;AAGD;AAED;;;;;;;;;;;qCAQWsK,S,EAAmBC,Q,EAAkBhE,K,EAAeW,Q,EAAkB4I,iB,EAA2BzM,Q,EAAkB;AAC5HnD,mBAAO,CAACC,IAAR,CAAa,0BAA0B,KAAK0P,MAA/B,GAAwC,OAArD;;AACA,gBAAI3I,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,CAAC/D,MAAT,GAAkB,CAAtC,IAA2C+D,QAAQ,IAAI4I,iBAA3D,EAA8E;AAC5EpM,mBAAK,CAAC,qDAAD,CAAL;AACA;AACD;;AAED,gBAAI8G,WAAW,GAAS;AAACpK,gBAAE,EAAE,KAAKyP,MAAV;AAAkB1N,sBAAQ,EAAE,IAA5B;AAAkCsI,kBAAI,EAAE,IAAxC;AAA8ClE,mBAAK,EAAEA,KAArD;AAA4D+D,uBAAS,EAAEA,SAAvE;AAAkFC,sBAAQ,EAAEA,QAA5F;AAAsG5D,sBAAQ,EAAE,IAAhH;AAAsHD,yBAAW,EAAE,IAAnI;AAAyIQ,sBAAQ,EAAEA,QAAnJ;AAA6J7D,sBAAQ,EAAEA,QAAvK;AAAiLqH,uBAAS,EAAE;AAA5L,aAAxB;AACA,iBAAKT,UAAL,CAAgBU,UAAhB,CAA2BH,WAA3B,EAAwCzK,IAAxC,CAA6C,UAAAC,QAAQ,EAAI;AACvD0D,mBAAK,CAAC,2CAAD,CAAL;AACAxD,qBAAO,CAACC,IAAR,CAAa,qCAAb;AACD,aAHD;AAID;;;;;;;yBA/CUyP,sB,EAAsB,+H,EAAA,uH,EAAA,iI;AAAA,O;;;cAAtBA,sB;AAAsB,4C;AAAA,gB;AAAA,e;AAAA,07C;AAAA;AAAA;ACVnC;;AAIA;;AAEE;;AACE;;AA2BF;;AACF;;;;AAnCwB;;AAOG;;AAAA;;;;;;;;;;wEDGdA,sB,EAAsB;gBALlC,uDAKkC;iBALxB;AACTvP,oBAAQ,EAAE,qBADD;AAETC,uBAAW,EAAE,kCAFJ;AAGTC,qBAAS,EAAE,CAAC,iCAAD;AAHF,W;AAKwB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEVnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAUawP,qB;AAMX,uCAAoBtN,MAApB,EAA4CrD,KAA5C,EAA2EoD,gBAA3E,EAA+G;AAAA;;AAA3F,eAAAC,MAAA,GAAAA,MAAA;AAAwB,eAAArD,KAAA,GAAAA,KAAA;AAA+B,eAAAoD,gBAAA,GAAAA,gBAAA;AAAuC;;;;qCAE1G;AAAA;;AACN,iBAAKpD,KAAL,CACG0D,WADH,CAEGtB,SAFH,CAEa,UAAAuB,MAAM,EAAI;AACnB,qBAAI,CAACxD,QAAL,GAAgBwD,MAAM,CAAC,WAAD,CAAN,IAAuB,8BAAvC;AACA,qBAAI,CAACkB,IAAL,GAAYlB,MAAM,CAAC,MAAD,CAAN,IAAkB,yBAA9B,CAFmB,CAGnB;;AACA7C,qBAAO,CAACC,IAAR,CAAa,sBAAsB,OAAI,CAAC8D,IAAxC;AACA,qBAAI,CAAC+L,MAAL,GAAcjN,MAAM,CAAC,QAAD,CAAN,IAAoB,2BAAlC;AACD,aARH;AASA,iBAAKkN,UAAL,CAAgB,KAAK1Q,QAArB,EAA+B,KAAK0E,IAApC,EAA0C,KAAK+L,MAA/C;AACD;AAED;;;;;;qCAGWzQ,Q,EAAkB0E,I,EAAc+L,M,EAAc;AACvD;AAEA,iBAAKxN,gBAAL,CAAsByN,UAAtB,CAAiC1Q,QAAjC,EAA2C0E,IAA3C,EAAiD+L,MAAjD,EAAyDjQ,IAAzD,CAA8D,UAAAC,QAAQ,EAAI;AACxE,kBAAIkQ,GAAG,GAAmBlQ,QAA1B;;AACA,kBAAIkQ,GAAG,IAAK,IAAZ,EAAkB;AAChBxM,qBAAK,CAAC,sCAAsCwM,GAAG,CAACvM,MAA1C,GAAmD,sBAAnD,GAA4EuM,GAAG,CAACC,gBAAhF,GAAmG,IAApG,CAAL;AACD,eAFD,MAEO;AACLjQ,uBAAO,CAACC,IAAR,CAAa,qCAAqC8D,IAArC,GAA4C,IAAzD;AACD;AACF,aAPD;AAQD;;;;;;;yBAnCU8L,qB,EAAqB,uH,EAAA,+H,EAAA,6I;AAAA,O;;;cAArBA,qB;AAAqB,wC;AAAA,gB;AAAA,e;AAAA,8B;AAAA;AAAA;ACVlC;;AACA;;AAAI;;AAAW;;AAEf;;AAAG;;AAAgB;;AACnB;;AAAG;;AAAoB;;AAEvB;;AAAW;;AAAwB;;AACnC;;;;AAJG;;AAAA;;AACA;;AAAA;;;;;;;;wEDMUA,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACT1P,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,6BAAD;AAHF,W;AAKuB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEVlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACMI;;AACE;;AACE;;;;AACF;;AAEA;;AACE;;AAAsH;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;;AAAtH;;AACF;;AAEA;;AACE;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAiG;;;;AAA8B;;AACzI;;AACF;;;;AAVI;;AAAA;;AAIqE;;AAAA;;AAIoC;;AAAA;;;;;;;;AAI7G;;AACE;;AACE;;;;AACF;;AAEA;;AACE;;AAA+C;AAAA;;AAAA;;AAAA;AAAA;;AAAqB;;;;AAAyC;;AAC/G;;AACF;;;;AANI;;AAAA;;AAIoE;;AAAA;;;;UDlB/D6P,uB;AAIX,yCAAoBnG,UAApB,EAA4C;AAAA;;AAAxB,eAAAA,UAAA,GAAAA,UAAA;AAFpB,eAAAoG,iBAAA,GAA6B,KAA7B;AAE+C;;;;qCAEvC,CACP;AAED;;;;;;;yCAIelO,Q,EAAgB;AAAA;;AAC7BjC,mBAAO,CAACC,IAAR,CAAa,WAAWgC,QAAX,GAAsB,4CAAnC;AACA,iBAAK8H,UAAL,CAAgBqG,cAAhB,CAA+BnO,QAA/B,EAAyCpC,IAAzC,CAA8C,UAAAC,QAAQ,EAAI;AACxD,qBAAI,CAACqQ,iBAAL,GAAyB,IAAzB;AACD,aAFD;AAGD;AAED;;;;;qCAEQ;AACN,iBAAKA,iBAAL,GAAyB,KAAzB;AACD;;;;;;;yBAxBUD,uB,EAAuB,iI;AAAA,O;;;cAAvBA,uB;AAAuB,4C;AAAA,gB;AAAA,e;AAAA,ya;AAAA;AAAA;ACRpC;;AACE;;AACE;;AAAY;;AAA2C;;AAEvD;;AAAkB;;;;AAAyC;;AAE3D;;AAcA;;AASF;;AACF;;;;AA1BsB;;AAAA;;AAEb;;AAAA;;AAcA;;AAAA;;;;;;;;;;wEDZIA,uB,EAAuB;gBALnC,uDAKmC;iBALzB;AACT/P,oBAAQ,EAAE,qBADD;AAETC,uBAAW,EAAE,kCAFJ;AAGTC,qBAAS,EAAE,CAAC,iCAAD;AAHF,W;AAKyB,U;;;;;;;;;;;;;;;;;;;;;;AERpagQ,S;;;;;cAAAA,S;AAAS,oBAFR,2DAEQ;;;;2BAATA,S;AAAS,S;AAAA,mBAHT,CAAC,kFAAD,EAAqB;AAAEC,iBAAO,EAAE,4EAAX;AAA+BC,kBAAQ,EAAE;AAAzC,SAArB,C;AAAyF,kBAd3F,CACP,uEADO,EAEP,sEAFO,EAGP,0DAHO,EAIP,oEAJO,EAKP,sEALO,EAMP,oEAAgBC,OAAhB,CAAwB;AAChBC,gBAAM,EAAE;AACJH,mBAAO,EAAE,mEADL;AAEJI,sBAAU,EAAEC,iBAFR;AAGJC,gBAAI,EAAE,CAAC,gEAAD;AAHF;AADQ,SAAxB,CANO,CAc2F;;;;4HAGzFP,S,EAAS;AAAA,yBA1DlB,2DA0DkB,EAzDlB,qIAyDkB,EAxDlB,oHAwDkB,EAvDlB,qEAuDkB,EAtDlB,0FAsDkB,EArDlB,yFAqDkB,EApDlB,yEAoDkB,EAnDlB,qKAmDkB,EAlDlB,mEAkDkB,EAjDlB,kFAiDkB,EAhDlB,yEAgDkB,EA/ClB,mGA+CkB,EA9ClB,gIA8CkB,EA7ClB,0HA6CkB,EA5ClB,gGA4CkB,EA3ClB,gEA2CkB,EA1ClB,gFA0CkB,EAzClB,wEAyCkB,EAxClB,8GAwCkB,EAvClB,2EAuCkB,EAtClB,gEAsCkB,EArClB,gFAqCkB,EApClB,kGAoCkB,EAnClB,gEAmCkB,EAlClB,wFAkCkB,EAjClB,mGAiCkB,EAhClB,oFAgCkB,EA/BlB,2GA+BkB,EA9BlB,gGA8BkB,EA7BlB,8EA6BkB,EA5BlB,oFA4BkB,EA3BlB,gGA2BkB,EA1BlB,mGA0BkB,EAzBlB,gHAyBkB,EAxBlB,mGAwBkB,EAvBlB,mGAuBkB,EAtBlB,gIAsBkB,EArBlB,8EAqBkB,EApBlB,oFAoBkB,EAnBlB,wFAmBkB;AAnBD,oBAGjB,uEAHiB,EAIjB,sEAJiB,EAKjB,0DALiB,EAMjB,oEANiB,EAOjB,sEAPiB,EAOD,mEAPC;AAmBC,S;AAZF,O;;;;;wEAYPA,S,EAAS;gBA5DrB,sDA4DqB;iBA5DZ;AACRQ,wBAAY,EAAE,CACZ,2DADY,EAEZ,qIAFY,EAGZ,oHAHY,EAIZ,qEAJY,EAKZ,0FALY,EAMZ,yFANY,EAOZ,yEAPY,EAQZ,qKARY,EASZ,mEATY,EAUZ,kFAVY,EAWZ,yEAXY,EAYZ,mGAZY,EAaZ,gIAbY,EAcZ,0HAdY,EAeZ,gGAfY,EAgBZ,gEAhBY,EAiBZ,gFAjBY,EAkBZ,wEAlBY,EAmBZ,8GAnBY,EAoBZ,2EApBY,EAqBZ,gEArBY,EAsBZ,gFAtBY,EAuBZ,kGAvBY,EAwBZ,gEAxBY,EAyBZ,wFAzBY,EA0BZ,mGA1BY,EA2BZ,oFA3BY,EA4BZ,2GA5BY,EA6BZ,gGA7BY,EA8BZ,8EA9BY,EA+BZ,oFA/BY,EAgCZ,gGAhCY,EAiCZ,mGAjCY,EAkCZ,gHAlCY,EAmCZ,mGAnCY,EAoCZ,mGApCY,EAqCZ,gIArCY,EAsCZ,8EAtCY,EAuCZ,oFAvCY,EAwCZ,wFAxCY,CADN;AA2CRC,mBAAO,EAAE,CACP,uEADO,EAEP,sEAFO,EAGP,0DAHO,EAIP,oEAJO,EAKP,sEALO,EAMP,oEAAgBN,OAAhB,CAAwB;AAChBC,oBAAM,EAAE;AACJH,uBAAO,EAAE,mEADL;AAEJI,0BAAU,EAAEC,iBAFR;AAGJC,oBAAI,EAAE,CAAC,gEAAD;AAHF;AADQ,aAAxB,CANO,CA3CD;AAyDRG,qBAAS,EAAE,CAAC,kFAAD,EAAqB;AAAET,qBAAO,EAAE,4EAAX;AAA+BC,sBAAQ,EAAE;AAAzC,aAArB,CAzDH;AA0DRS,qBAAS,EAAE,CAAC,2DAAD;AA1DH,W;AA4DY,U;YAEtB;;;AACO,eAASL,iBAAT,CAA2BM,IAA3B,EAA6C;AAChD,eAAO,IAAI,8EAAJ,CAAwBA,IAAxB,CAAP;AACH;;;;;;;;;;;;;;;;;ACpHD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACsBU;;AAA4C;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,qBAAiC,WAAjC,CAAT;AAAsD,WAAtD;;AAC1C;;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCE;;AAEE;;AACd;;AACG;AAAA;;AAAA;;AAAA;AAAA;;AAgBD;;AACc;;AACA;;AAAwD;AAAA;;AAAA;;AAAA;AAAA;;AAA+C;;;;AAAuC;;AAEhJ;;AACF;;;;;;AArBT;;AAAA,sGAA6B,MAA7B,EAA6B,4IAA7B;;AAkBoH;;AAAA;;;;;;;;AAK3G;;AAA2D;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,qBAAsC,cAAtC,CAAT;AAA8D,WAA9D;;AAAgE;;AAAkB;;;;;;AA0B3I;;AAA4C;;AAAe;;;;;;AAAf;;AAAA;;;;;;AAC5C;;AAA6C;;AAAwB;;;;;;AAHvE;;AACE;;AAAqB;;AAAS;;AAC9B;;AACA;;AACF;;;;;;AAFkB;;AAAA;;AACA;;AAAA;;;;;;;;AAElB;;AACE;;AAAwD;AAAA;;AAAA;;AAAA;AAAA;;AAAoC;;AAAuB;;AACrH;;;;;;AACA;;AACE;;AAAqB;;AAAU;;AAC/B;;AAAgB;;AAAa;;AAC/B;;;;;;AADkB;;AAAA;;;;;;AAElB;;AACE;;AAAqB;;AAAwB;;AAC7C;;AAAgB;;AAAiD;;AACnE;;;;;;AADkB;;AAAA;;;;;;AAElB;;AACE;;AAAqB;;AAAU;;AAC/B;;AAAG;;AAAoB;;AACzB;;;;;;AADK;;AAAA;;;;;;AAEL;;AACE;;AAAqB;;AAAS;;AAC9B;;AAAG;;AAAoD;;AACzD;;;;;;AADK;;AAAA;;;;;;AAEL;;AACE;;AAAqB;;AAAgB;;AACrC;;AAAG;;AAAoB;;AACzB;;;;;;AADK;;AAAA;;;;;;AAEL;;AACE;;AAAqB;;AAAmB;;AACxC;;AAAG;;AAAe;;AACpB;;;;;;AADK;;AAAA;;;;;;AAEL;;AACE;;AAA2B;;AAAM;;AACjC;;AAAgB;;AAAY;;AAC9B;;;;;;AADkB;;AAAA;;;;;;AAElB;;AACE;;AAA2B;;AAAQ;;AACnC;;AAAgB;;AAAc;;AAChC;;;;;;AADkB;;AAAA;;;;;;;;UDjIjBC,8B;AA+BX;;;AAGA,gDAAoB3O,MAApB,EAA4CrD,KAA5C,EAA2EoD,gBAA3E,EAAuHrB,qBAAvH,EAA6KhC,oBAA7K,EAAiO6J,wBAAjO,EAA+S1H,QAA/S,EAAyT;AAAA;;AAArS,eAAAmB,MAAA,GAAAA,MAAA;AAAwB,eAAArD,KAAA,GAAAA,KAAA;AAA+B,eAAAoD,gBAAA,GAAAA,gBAAA;AAA4C,eAAArB,qBAAA,GAAAA,qBAAA;AAAsD,eAAAhC,oBAAA,GAAAA,oBAAA;AAAoD,eAAA6J,wBAAA,GAAAA,wBAAA;AAA8E,eAAA1H,QAAA,GAAAA,QAAA;AAAa;AAE5T;;;;;;;qCAGQ;AACN;AAEA,iBAAK+P,cAAL,GAAsB,YAAtB,CAHM,CAG8B;;AAEpC,iBAAK9R,QAAL,GAAgB,KAAKH,KAAL,CAAWI,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,UAAjC,CAAhB,CALM,CAMN;;AACA,iBAAKuE,IAAL,GAAY,KAAK7E,KAAL,CAAWI,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,MAAjC,CAAZ;AAEA,iBAAKiO,wBAAL,CAA8B,KAAKpO,QAAnC,EAA6C,KAAK0E,IAAlD;AACD;AAED;;;;;;+CAGqB;AAAA;;AACnB;AACA,gBAAI,CAAC,KAAK3C,QAAL,CAAcS,cAAd,CAA6B,UAA7B,EAAyCgG,iBAA9C,EAAiE;AAC/D;AACA,mBAAKzG,QAAL,CAAcS,cAAd,CAA6B,SAA7B,EAAwCiG,SAAxC,GAAoD,kGAApD;AAEA,mBAAK1G,QAAL,CAAcS,cAAd,CAA6B,UAA7B,EAAyCkG,eAAzC,GAA2D,MAA3D;AACD,aALD,MAKO;AACL,kBAAIqJ,eAAe,GAAG,KAAKhQ,QAAL,CAAcS,cAAd,CAA6B,UAA7B,EAAyCiG,SAA/D,CADK,CAEL;;AACA,mBAAKxF,gBAAL,CAAsB+O,0BAAtB,CAAiD,KAAKhS,QAAtD,EAAgE,KAAK0E,IAArE,EAA2EqN,eAA3E,EAA4FvR,IAA5F,CAAiG,UAAAC,QAAQ,EAAI;AAC3G;AACAE,uBAAO,CAACC,IAAR,CAAa,yBAAyB,OAAI,CAAC8D,IAA9B,GAAqC,kCAAlD;AACD,eAHD;AAKA,mBAAK3C,QAAL,CAAcS,cAAd,CAA6B,SAA7B,EAAwCiG,SAAxC,GAAoD,kGAApD;AAEA,mBAAK1G,QAAL,CAAcS,cAAd,CAA6B,UAA7B,EAAyCkG,eAAzC,GAA2D,OAA3D;AACD;AACF;AAED;;;;;;;wCAIcf,Q,EAAgB;AAC1B,gBAAIsK,iBAAiB,GAAG,KAAKlQ,QAAL,CAAcS,cAAd,CAA6B,QAA7B,EAAuCN,KAA/D;;AACA,gBAAI+P,iBAAiB,IAAI,IAArB,IAA6BA,iBAAiB,CAACrO,MAAlB,GAA2B,CAAxD,IAA6D+D,QAAQ,IAAI,IAAzE,IAAiFA,QAAQ,CAAC/D,MAAT,GAAkB,CAAvG,EAA0G;AACxGO,mBAAK,CAAC,4BAA4B8N,iBAA5B,GAAgD,OAAjD,CAAL;AACA,mBAAK7N,MAAL,GAAc,KAAKqF,wBAAL,CAA8B+D,OAA9B,CAAsCyE,iBAAtC,EAAyDtK,QAAzD,CAAd;AACA,mBAAKuK,yBAAL,GAAiC,IAAjC;AACA/N,mBAAK,CAAC,8BAA8B,KAAKC,MAApC,CAAL;AACA,mBAAKrC,QAAL,CAAcS,cAAd,CAA6B,QAA7B,EAAuCN,KAAvC,GAA+C,KAAKkC,MAApD,CALwG,CAMxG;;AACA,mBAAKrC,QAAL,CAAcS,cAAd,CAA6B,gBAA7B,EAA+CC,SAA/C,CAAyDC,MAAzD,CAAgE,cAAhE;AACD,aARD,MAQO;AACLyB,mBAAK,CAAC,+EAAD,CAAL;AACA,mBAAKC,MAAL,GAAc,IAAd;AACD;AACJ;AAED;;;;;;;wCAIcuD,Q,EAAgB;AAC1B,gBAAIwK,eAAe,GAAG,KAAKpQ,QAAL,CAAcS,cAAd,CAA6B,QAA7B,EAAuCN,KAA7D;AACAiC,iBAAK,CAAC,4BAA4BgO,eAA7B,CAAL;;AACA,gBAAIA,eAAe,IAAI,IAAnB,IAA2BA,eAAe,CAACvO,MAAhB,GAAyB,CAApD,IAAyD+D,QAAQ,IAAI,IAArE,IAA6EA,QAAQ,CAAC/D,MAAT,GAAkB,CAAnG,EAAsG;AACpGO,mBAAK,CAAC,4BAA4BgO,eAA5B,GAA8C,OAA/C,CAAL;AACA,mBAAK/N,MAAL,GAAc,KAAKqF,wBAAL,CAA8BS,OAA9B,CAAsCiI,eAAtC,EAAuDxK,QAAvD,CAAd;AACA,mBAAKuK,yBAAL,GAAiC,KAAjC;AACA/N,mBAAK,CAAC,8BAA8B,KAAKC,MAApC,CAAL;AACA,mBAAKrC,QAAL,CAAcS,cAAd,CAA6B,QAA7B,EAAuCN,KAAvC,GAA+C,KAAKkC,MAApD;AACA,mBAAKrC,QAAL,CAAcS,cAAd,CAA6B,gBAA7B,EAA+CC,SAA/C,CAAyDC,MAAzD,CAAgE,cAAhE;AACD,aAPD,MAOO;AACLyB,mBAAK,CAAC,yFAAD,CAAL;AACA,mBAAKC,MAAL,GAAc,IAAd;AACD;AACJ;AAED;;;;;;;6CAImBuD,Q,EAAgB;AAC/B,gBAAIwK,eAAe,GAAG,KAAK/N,MAA3B;AACAD,iBAAK,CAAC,mCAAmCgO,eAApC,CAAL;;AACA,gBAAIA,eAAe,IAAI,IAAnB,IAA2BA,eAAe,CAACvO,MAAhB,GAAyB,CAApD,IAAyD+D,QAAQ,IAAI,IAArE,IAA6EA,QAAQ,CAAC/D,MAAT,GAAkB,CAAnG,EAAsG;AACpGO,mBAAK,CAAC,4BAA4BgO,eAA5B,GAA8C,OAA/C,CAAL;AACA,kBAAIC,eAAe,GAAG,KAAK3I,wBAAL,CAA8BS,OAA9B,CAAsCiI,eAAtC,EAAuDxK,QAAvD,CAAtB;AACAxD,mBAAK,CAAC,8BAA8BiO,eAA/B,CAAL;AACA,mBAAKrQ,QAAL,CAAcS,cAAd,CAA6B,sBAA7B,EAAqDC,SAArD,CAA+DC,MAA/D,CAAsE,cAAtE;AACR;;;;;;AAMO,aAXD,MAWO;AACLyB,mBAAK,CAAC,yFAAD,CAAL;AACD;AACJ;AAED;;;;;;mDAGyBnE,Q,EAAkB0E,I,EAAY;AAAA;;AACrD/D,mBAAO,CAACC,IAAR,CAAa,kCAAkCZ,QAAlC,GAA6C,GAA7C,GAAmD0E,IAAnD,GAA0D,OAAvE;AACA,iBAAKzB,gBAAL,CAAsBoL,wBAAtB,CAA+CrO,QAA/C,EAAyD0E,IAAzD,EAA+D,IAA/D,EAAqE,IAArE,EAA2ElE,IAA3E,CAAgF,UAAAC,QAAQ,EAAI;AAC1F,qBAAI,CAAC6N,cAAL,GAAsC7N,QAAtC;AAEA,qBAAI,CAACuD,QAAL,GAAgB,OAAI,CAACsK,cAAL,CAAoBsC,gBAApC;AACA,qBAAI,CAACxM,MAAL,GAAc,OAAI,CAACkK,cAAL,CAAoBlK,MAAlC;AACA,qBAAI,CAACC,eAAL,GAAuB,OAAI,CAACiK,cAAL,CAAoBlK,MAA3C,CAL0F,CAM1F;AACA;;AAEA,qBAAI,CAACiO,WAAL,GAAmB,OAAI,CAAC/D,cAAL,CAAoBgE,SAAvC;AAEN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BK,aAxCD;AAyCD;AAED;;;;;;gCAGM5N,I,EAAY;AAChBP,iBAAK,CAAC,mEAAmEO,IAApE,CAAL;AACA/D,mBAAO,CAACC,IAAR,CAAa,mEAAmE8D,IAAhF;AAEA,iBAAKzB,gBAAL,CAAsBsP,KAAtB,CAA4B7N,IAA5B,EAAkClE,IAAlC,CAAuC,UAAAC,QAAQ,EAAI;AACjD;AACAE,qBAAO,CAACC,IAAR,CAAa,mBAAb,EAFiD,CAGjD;AACD,aAJD;AAKD;AAED;;;;;;;oDAI0B8D,I,EAAY;AAAA;;AACpC;AACA/D,mBAAO,CAACC,IAAR,CAAa,kCAAkC8D,IAAlC,GAAyC,GAAtD;AAEA,iBAAKzB,gBAAL,CAAsBuP,yBAAtB,CAAgD9N,IAAhD,EAAsDlE,IAAtD,CAA2D,UAAAC,QAAQ,EAAI;AACrE;AACAE,qBAAO,CAACC,IAAR,CAAa,2BAA2B8D,IAA3B,GAAkC,qBAA/C;;AACA,qBAAI,CAACxB,MAAL,CAAY0B,QAAZ,CAAqB,CAAC,4BAA4B,OAAI,CAAC5E,QAAlC,CAArB;AACD,aAJD;AAKD;AAED;;;;;;;iDAIoB;AAAA;;AACpB;AACE;AACAW,mBAAO,CAACC,IAAR,CAAa,yBAAyB,KAAKkR,cAA3C;AAEA,gBAAI1N,MAAM,GAAG,KAAKC,eAAlB,CALkB,CAOlB;;AACA,gBAAI;AACFC,qBAAO,CAACC,MAAR,CAAe,iBAAf;AACD,aAFD,CAEE,OAAMC,CAAN,EAAS;AACTL,mBAAK,CAAC,YAAYK,CAAb,CAAL;AACD;;AAGD,gBAAIJ,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACR,MAAP,KAAkB,CAAzC,EAA4C;AAC1CO,mBAAK,CAAC,kFAAD,CAAL;AACA;AACD,aAlBiB,CAoBlB;;;AACAxD,mBAAO,CAACC,IAAR,CAAa,qCAAqC,KAAK8D,IAA1C,GAAiD,KAAjD,GAAyDN,MAAtE;AAEA,iBAAKnB,gBAAL,CAAsBwP,2BAAtB,CAAkD,KAAKzS,QAAvD,EAAiE,KAAK0E,IAAtE,EAA4EN,MAA5E,EAAoF,KAAK0N,cAAzF,EAAyGtR,IAAzG,CAA8G,UAAAC,QAAQ,EAAI;AACxH;AACAE,qBAAO,CAACC,IAAR,CAAa,uBAAuB,OAAI,CAAC8D,IAA5B,GAAmC,mBAAhD,EAFwH,CAIxH;;AACA/D,qBAAO,CAACC,IAAR,CAAa,cAAb,EALwH,CAMxH;AACA;;AACA,qBAAI,CAACsC,MAAL,CAAY0B,QAAZ,CAAqB,CAAC,gCAAgC,OAAI,CAAC5E,QAAtC,CAArB;AACD,aATD;AAUD;AAED;;;;;;mEAGyCA,Q,EAAgB;AAAA;;AACvDW,mBAAO,CAACC,IAAR,CAAa,iBAAiBZ,QAAjB,GAA4B,OAAzC;AAGA,iBAAKJ,oBAAL,CAA0BW,UAA1B,CAAqCP,QAArC,EAA+CQ,IAA/C,CAAoD,UAAAC,QAAQ,EAAI;AAChE,qBAAI,CAACqM,OAAL,GAAwBrM,QAAxB;;AAEE,kBAAI,OAAI,CAACqM,OAAL,IAAiB,IAArB,EAA2B;AACzBnM,uBAAO,CAACC,IAAR,CAAa,yBAAyB,OAAI,CAACkM,OAAL,CAAajM,EAAtC,GAA2C,yBAA3C,GAAuE,OAAI,CAACiM,OAAL,CAAaH,yBAAjG;;AACA,oBAAI,OAAI,CAACG,OAAL,CAAaH,yBAAb,KAA2C,IAA/C,EAAqD;AACnD,yBAAI,CAACmF,cAAL,GAAsB,aAAtB;AACD,iBAFD,MAEO;AACL,yBAAI,CAACA,cAAL,GAAsB,YAAtB;AACD;AACF,eAPD,MAOO;AACLnR,uBAAO,CAACC,IAAR,CAAa,uBAAb;AACD;AACF,aAbD;AAcD;;;;;;;yBAnRUiR,8B,EAA8B,uH,EAAA,+H,EAAA,6I,EAAA,uJ,EAAA,qJ,EAAA,8J,EAAA,gEAkCoP,wDAlCpP,C;AAkC4P,O;;;cAlC1RA,8B;AAA8B,oD;AAAA,iB;AAAA,gB;AAAA,m4E;AAAA;AAAA;;;ACpB3C;;AACE;;AAA2B;;AAAqB;;AAClD;;AAEA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AAWE;;AAGA;;AACE;;AACE;;AAAqC;AAAA;AAAA;;AAArC;;AACA;;AACA;;AACA;;AACE;;AAAG;;AAAO;;AACV;;AAAkB;;AAAmC;;AACvD;;AACF;;AACA;;AACE;;AAAqC;AAAA;AAAA;;AAArC;;AACA;;AACA;;AACA;;AACE;;AAAG;;AAAiC;;AACpC;;AAAkB;;AAA2C;;AAC/D;;AACF;;AACA;;AACE;;AAAqC;AAAA;AAAA;;AAArC;;AACA;;AACA;;AACA;;AACE;;AAAG;;AAAM;;AACT;;AAAkB;;AAAmB;;AACvC;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAiB;;AAA4C;;AAAc;;AAAO;;AAAY;;AAAqB;AAAA,qBAAS,IAAAa,kBAAA,EAAT;AAA6B,aAA7B;;AAA+B;;AAAgG;;AAAS;;AAC3P;;AA0BA;;AACA;;AAEA;;AACE;;AACE;;AAAI;;AAAwB;;AAC5B;;AAAiB;;AAAgF;;AAAkF;;AAAM;;AAAI;;AAC7L;;AAAyH;AAAA;;AAAA;;AAAA,qBAAiB,IAAAC,kBAAA,WAAjB;AAAgE,aAAhE;;AAAzH;;AACA;;AACE;;AAAkE;AAAA;;AAAA;;AAAA,qBAAS,qBAAsC,cAAtC,CAAT;AAA8D,aAA9D;;AAAgE;;AAAM;;AACxI;;AAAkD;AAAA;;AAAA;;AAAA,qBAAS,IAAAA,kBAAA,WAAT;AAAwD,aAAxD;;AAA0D;;AAAO;;AACrH;;AACF;;AACF;;AAEA;;AAAM;;AAGN;;AAAQ;AAAA;;AAAA;;AAAA,qBAAS,qBAA2B,WAA3B,CAAT;AAAgD,aAAhD;;AAAuH;;AAAgB;;AACjJ;;AACA;;AACE;;AACE;;AAAqB;;AAAS;;AAC9B;;AAAgB;;AAAc;;AAChC;;AACA;;AAKA;;AAGA;;AAIA;;AAIA;;AAIA;;AAIA;;AAIA;;AAIA;;AAIA;;AAIA;;AACE;;AAAqB;;AAAI;;AACzB;;AAAgB;;AAAU;;AAC5B;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;AAvJ2E;;AAAA;;AAazD;;AAAA;;AAKiC;;AAAA,oGAA4B,OAA5B,EAA4B,YAA5B;;AASA;;AAAA,oGAA4B,OAA5B,EAA4B,aAA5B;;AASA;;AAAA,oGAA4B,OAA5B,EAA4B,YAA5B;;AAcsB;;AAAA;;AAC1C;;AAAA;;AA2BX;;AAAA;;AAsBU;;AAAA;;AAEC;;AAAA;;AAKA;;AAAA;;AAGA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAId;;AAAA;;AAIA;;AAAA;;AAMa;;AAAA;;;;;;;;;;wEDrIjBd,8B,EAA8B;gBAL1C,uDAK0C;iBALhC;AACT/Q,oBAAQ,EAAE,6BADD;AAETC,uBAAW,EAAE,0CAFJ;AAGTC,qBAAS,EAAE,CAAC,yCAAD;AAHF,W;AAKgC,U;;;;;;;;;;;;;;;;oBAkC6O,oD;qBAAO,wD;;;;;;;;;;;;;;;;;;;;;AEtD/R;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACE;;AAA2B;;;;AAAiD;;AAAqC;;AAAiB;;AAAI;;AAAC;;AACzI;;;;;;AAD6B;;AAAA;;AAAoD;;AAAA;;AAAkC;;AAAA;;;;;;AAEnH;;AACE;;AAA2B;;;;AAA+C;;AAC5E;;;;AAD6B;;AAAA;;;;;;AAkCvB;;AACE;;AAAiC;;AAAI;;AAAiB;;AAAK;;AAC7D;;;;;;AADuC;;AAAA;;;;;;AAEvC;;AACE;;AACF;;;;;;;;;;;;;;;;AAEE;;AACE;;AACE;;AACA;;AAA6B;;AAAuB;;AACtD;;AACA;;AAAoB;;;;AAAwD;;AAC9E;;;;;;AANI,wJAAmC,aAAnC,EAAmC,uFAAnC;;AAG6B;;AAAA;;AAEX;;AAAA;;;;;;AAMtB;;AACE;;AACE;;AACA;;AAAiB;;AAAuB;;AAC1C;;AACA;;AAAoB;;;;;;;;AAA+J;;AACrL;;;;;;AANI,yJAAmC,aAAnC,EAAmC,wFAAnC;;AAGiB;;AAAA;;AAEC;;AAAA;;;;UDhDjB4R,6B;AAQX,+CAAoB3P,gBAApB,EAAgErB,qBAAhE,EAAsH/B,KAAtH,EAAqJqD,MAArJ,EAA6KtD,oBAA7K,EAAyN;AAAA;;AAArM,eAAAqD,gBAAA,GAAAA,gBAAA;AAA4C,eAAArB,qBAAA,GAAAA,qBAAA;AAAsD,eAAA/B,KAAA,GAAAA,KAAA;AAA+B,eAAAqD,MAAA,GAAAA,MAAA;AAAwB,eAAAtD,oBAAA,GAAAA,oBAAA;AAH7K,eAAAiT,SAAA,GAAmC,EAAnC;AACA,eAAAC,gBAAA,GAA0C,EAA1C;AAE4N;AAE5N;;;;;;;qCAGQ;AACN,iBAAK9S,QAAL,GAAgB,KAAKH,KAAL,CAAWI,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,UAAjC,KAAgD,IAAhE;;AACA,gBAAI,KAAKH,QAAL,IAAiB,IAArB,EAA2B;AACzB,mBAAKI,SAAL;AACD;;AAED,iBAAK2S,8BAAL;AAEA,iBAAKC,0BAAL,CAAgC,EAAhC,EAAoC,CAApC;AACD;AAED;;;;;;sCAGS;AAAA;;AACP,iBAAKpT,oBAAL,CAA0BW,UAA1B,CAAqC,KAAKP,QAA1C,EAAoDQ,IAApD,CAAyD,UAAAC,QAAQ,EAAI;AACnE,qBAAI,CAACC,MAAL,GAAuBD,QAAvB;AACAE,qBAAO,CAACC,IAAR,CAAa,aAAa,OAAI,CAACF,MAAL,CAAYG,EAAzB,GAA8B,oBAA3C;AACD,aAHD;AAID;AAED;;;;;;qDAG2BqH,K,EAAeC,M,EAAc;AAAA;;AACtD,gBAAI1B,MAAM,GAAG,IAAb,CADsD,CACnC;;AACnB9F,mBAAO,CAACC,IAAR,CAAa,gBAAgB,KAAKZ,QAAlC;AACA,iBAAKiD,gBAAL,CAAsBgQ,uBAAtB,CAA8CxM,MAA9C,EAAsD,KAAKzG,QAA3D,EAAqEkI,KAArE,EAA4EC,MAA5E,EAAoF3H,IAApF,CAAyF,UAAAC,QAAQ,EAAI;AACnG,qBAAI,CAACoS,SAAL,GAAwCpS,QAAxC,CADmG,CAEnG;;AACA,kBAAI,OAAI,CAACoS,SAAL,IAAmB,IAAvB,EAA6B;AAC3BlS,uBAAO,CAACC,IAAR,CAAa,0BAA0B,OAAI,CAACiS,SAAL,CAAejP,MAAtD;AACD,eAFD,MAEO;AACLjD,uBAAO,CAACC,IAAR,CAAa,yBAAb;AACD;AACF,aARD;AAUJ;;;;;;AAMG;AAED;;;;;;2DAG8B;AAAA;;AAC5B;AACA,gBAAI6F,MAAM,GAAG,gBAAb;;AACA,gBAAI,KAAKzG,QAAL,IAAiB,IAArB,EAA2B;AACzBW,qBAAO,CAACC,IAAR,CAAa,6CAA6C,KAAKZ,QAAlD,GAA6D,iBAA7D,GAAiFyG,MAAjF,GAA0F,OAAvG;AACD,aAFD,MAEO;AACL9F,qBAAO,CAACC,IAAR,CAAa,2DAA2D6F,MAA3D,GAAoE,OAAjF;AACD;;AACD,iBAAKxD,gBAAL,CAAsBgQ,uBAAtB,CAA8CxM,MAA9C,EAAsD,KAAKzG,QAA3D,EAAqE,EAArE,EAAyE,CAAzE,EAA4EQ,IAA5E,CAAiF,UAAAC,QAAQ,EAAI;AAC3F,qBAAI,CAACqS,gBAAL,GAA+CrS,QAA/C,CAD2F,CAE3F;;AACA,kBAAI,OAAI,CAACqS,gBAAL,IAA0B,IAA9B,EAAoC;AAClCnS,uBAAO,CAACC,IAAR,CAAa,kCAAkC,OAAI,CAACkS,gBAAL,CAAsBlP,MAArE;AACD,eAFD,MAEO;AACLjD,uBAAO,CAACC,IAAR,CAAa,iCAAb;AACD;AACF,aARD;AASD;;;;;;;yBA9EUgS,6B,EAA6B,6I,EAAA,uJ,EAAA,+H,EAAA,uH,EAAA,qJ;AAAA,O;;;cAA7BA,6B;AAA6B,kD;AAAA,iB;AAAA,e;AAAA,ovB;AAAA;AAAA;ACb1C;;AAGA;;AAIA;;AAEE;;AAiBE;;AAWE;;AAAiC;;AAAiB;;AAClD;;AAGA;;AAGA;;AACE;;AAOF;;AAEA;;AAA6B;;AAAa;;AAC1C;;AACE;;AAOF;;AACF;;AACF;;AACF;;;;AAlEK;;AAGA;;AAAA;;AAmCwB;;AAAA;;AAGA;;AAAA;;AAIwF;;AAAA;;AAWd;;AAAA;;;;;;;;;;wED3C1FA,6B,EAA6B;gBALzC,uDAKyC;iBAL/B;AACT9R,oBAAQ,EAAE,2BADD;AAETC,uBAAW,EAAE,wCAFJ;AAGTC,qBAAS,EAAE,CAAC,uCAAD;AAHF,W;AAK+B,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEb1C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;ACMI;;AACE;;AACE;;AACE;;;;AACF;;AACA;;;;AAEA;;AACA;;AACA;;AAEA;;AACE;;;;AACF;;AACA;;AACE;;AAAsB;;;;AAAgC;;AACtD;;AAAqB;;;;AAAiC;;AACxD;;AACF;;AAEA;;AACE;;AAAgG;;;;AAAgC;;AAChI;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAmI;;;;AAA6B;;AAC1K;;AACF;;;;AArBM;;AAAA;;AAEwE;;AAAA;;AAOxE;;AAAA;;AAGsB;;AAAA;;AACD;;AAAA;;AAK2C;;AAAA;;AAA8B;;AAAA;;AAC2C;;AAAA;;;;;;;;;;AAI/I;;AACE;;AACE;;;;AACF;;AAEA;;AACE;;AAAyF;;;;AAA0C;;AACrI;;AACA;;AACE;;AAA6E;;;;AAA2C;;AAC1H;;AACF;;;;;;AATI;;AAAA;;AAI+C;;AAAA;;AAA0C;;AAAA;;AAG1C;;AAAA;;AAA8B;;AAAA;;;;UDjCxEkS,kB;AAKX,oCAAoBtT,oBAApB,EAAgE;AAAA;;AAA5C,eAAAA,oBAAA,GAAAA,oBAAA;AAHpB,eAAAuT,aAAA,GAAyB,KAAzB;AAGmE;;;;qCAE3D,CACP;AAED;;;;;;oCAGU7L,I,EAAc8L,yB,EAAkC;AAAA;;AACxDzS,mBAAO,CAACC,IAAR,CAAa,iBAAiB0G,IAAjB,GAAwB,kCAAxB,GAA6D8L,yBAA7D,GAAyF,GAAtG;AACA,iBAAKxT,oBAAL,CAA0ByT,SAA1B,CAAoC/L,IAApC,EAA0C8L,yBAA1C,EAAqE5S,IAArE,CAA0E,UAAAC,QAAQ,EAAI;AACpF,qBAAI,CAAC0S,aAAL,GAAqB,IAArB;AACA,qBAAI,CAACG,WAAL,GAAmB7S,QAAnB;AACAE,qBAAO,CAACC,IAAR,CAAa,yBAAyB,OAAI,CAAC0S,WAA3C;AACD,aAJD;AAKD;;;;;;;yBApBUJ,kB,EAAkB,qJ;AAAA,O;;;cAAlBA,kB;AAAkB,uC;AAAA,gB;AAAA,e;AAAA,gpB;AAAA;AAAA;ACR/B;;AACE;;AACE;;AAAuB;;AAA2C;;AAElE;;AAAkB;;;;AAAoC;;AAEtD;;AA0BA;;AAYF;;AACF;;;;AAzCsB;;AAAA;;AAEb;;AAAA;;AA0BA;;AAAA;;;;;;;;;;wEDxBIA,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACTpS,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTC,qBAAS,EAAE,CAAC,4BAAD;AAHF,W;AAKoB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UEOlBuS,qB;AASX;;;AAGA,uCAAoB5N,UAApB,EAA4C;AAAA;;AAAxB,eAAAA,UAAA,GAAAA,UAAA;AAVpB,eAAAC,OAAA,GAAU,sEAAYH,UAAtB;AAWE9E,iBAAO,CAACC,IAAR,CAAa,2DAAb;AACAD,iBAAO,CAACC,IAAR,CAAa,mBAAmB,KAAKgF,OAArC;AACD;AAED;;;;;;;0CAGgBgF,K,EAAa;AAAA;;AAC3B;AACAjK,mBAAO,CAACC,IAAR,CAAa,qBAAb;AAEA,gBAAM4S,WAAW,GAAG;AAClBC,qBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,gCAAiB,kBADM;AAEvB,iCAAkB,YAAY7I;AAFP,eAAhB;AADS,aAApB;AAOA,gBAAI8I,IAAI,GAAG,EAAX;AAEA,gBAAIzN,GAAG,GAAG,KAAKL,OAAL,GAAe,gBAAzB;AACAjF,mBAAO,CAACC,IAAR,CAAa,UAAUqF,GAAvB;AAEA,gBAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C;AACA,qBAAI,CAACV,UAAL,CAAgBW,IAAhB,CAAqBL,GAArB,EAA0ByN,IAA1B,EAAgCF,WAAhC,EACGhN,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,uBAAI,CAACkT,WAAL,GAAgClT,QAAhC,CADgB,CAEhB;;AACAE,uBAAO,CAACC,IAAR,CAAa,sBAAsB,OAAI,CAAC+S,WAAL,CAAiB/Q,QAApD;AACAwD,uBAAO,CAAC,OAAI,CAACuN,WAAN,CAAP;AACC,eAPL,WAQS,UAAAlT,QAAQ,EAAI;AACjB0D,qBAAK,CAAC,4EAA4E1D,QAAQ,CAACgG,MAAtF,CAAL;AACA9F,uBAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,oBAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAHiB,CAGkB;;AACnC/F,uBAAO,CAACC,IAAR,CAAa,uBAAuB8F,KAAK,CAACC,OAA1C;;AACA,oBAAID,KAAK,CAACE,IAAN,KAAe,MAAnB,EAA2B;AACzBzC,uBAAK,CAAC,cAAc,MAAf,CAAL;AACAiC,yBAAO;AACR,iBAHD,MAGO;AACLjC,uBAAK,CAAC,gEAAgEuC,KAAK,CAACC,OAAvE,CAAL;AACAN,wBAAM,CAACK,KAAK,CAACC,OAAP,CAAN;AACD;AACF,eApBH;AAqBD,aAvBa,CAAd,CAhB2B,CAwC3B;;AACA,mBAAOT,OAAP;AACD;AAED;;;;;;kCAGQc,K,EAAeW,Q,EAAgB;AAAA;;AACrC;AACAhH,mBAAO,CAACC,IAAR,CAAa,WAAb;AAEA,gBAAM4S,WAAW,GAAG;AAClBC,qBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,gCAAiB;AADM,eAAhB;AADS,aAApB;AAMA,gBAAIxN,GAAG,GAAG,KAAKL,OAAL,GAAe,gCAAzB;AACAjF,mBAAO,CAACC,IAAR,CAAa,UAAUqF,GAAvB;AAEJ;;;;;;;;;AASI,gBAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C;AACA;AACA,qBAAI,CAACV,UAAL,CAAgBW,IAAhB,CAAqBL,GAArB,EAA0B;AAAEe,qBAAK,EAALA,KAAF;AAASW,wBAAQ,EAARA;AAAT,eAA1B,EAA+C6L,WAA/C,EACGhN,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,uBAAI,CAACkT,WAAL,GAAgClT,QAAhC,CADgB,CAEhB;;AACAE,uBAAO,CAACC,IAAR,CAAa,eAAe,OAAI,CAAC+S,WAAL,CAAiB/Q,QAA7C;AACAwD,uBAAO,CAAC,OAAI,CAACuN,WAAN,CAAP;AACC,eAPL,WAQS,UAAAlT,QAAQ,EAAI;AACjB0D,qBAAK,CAAC,mBAAmB1D,QAAQ,CAACgG,MAA7B,CAAL;AACA9F,uBAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,oBAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAHiB,CAGkB;;AACnC/F,uBAAO,CAACC,IAAR,CAAa,uBAAuB8F,KAAK,CAACC,OAA1C;;AACA,oBAAID,KAAK,CAACE,IAAN,KAAe,MAAnB,EAA2B;AACzBzC,uBAAK,CAAC,cAAc,MAAf,CAAL;AACAiC,yBAAO;AACR,iBAHD,MAGO;AACLjC,uBAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,wBAAM,CAACK,KAAK,CAACC,OAAP,CAAN;AACD;AACF,eApBH;AAqBD,aAxBa,CAAd,CAtBqC,CA+CrC;;AACA,mBAAOT,OAAP;AACD;AAED;;;;;;qCAGQ;AAAA;;AACN;AACAvF,mBAAO,CAACC,IAAR,CAAa,YAAb;AAEA,gBAAM4S,WAAW,GAAG;AAClBC,qBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,gCAAiB;AADM,eAAhB;AADS,aAApB;AAMA,gBAAIxN,GAAG,GAAG,KAAKL,OAAL,GAAe,iBAAzB;AACAjF,mBAAO,CAACC,IAAR,CAAa,SAASqF,GAAtB;AAEA,gBAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C;AACA,qBAAI,CAACV,UAAL,CAAgBxF,GAAhB,CAAoB8F,GAApB,EAAyBuN,WAAzB,EACGhN,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,uBAAI,CAACkG,OAAL,GAAwBlG,QAAxB,CADgB,CAEhB;;AACAE,uBAAO,CAACC,IAAR,CAAa,cAAc,OAAI,CAAC+F,OAAL,CAAaA,OAAxC;AACAP,uBAAO,CAAC,OAAI,CAACO,OAAN,CAAP;AACC,eAPL,WAQS,UAAAlG,QAAQ,EAAI;AACjB0D,qBAAK,CAAC,oBAAoB1D,QAAQ,CAACgG,MAA9B,CAAL;AACA9F,uBAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,oBAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAHiB,CAGkB;;AACnC/F,uBAAO,CAACC,IAAR,CAAa,uBAAuB8F,KAAK,CAACC,OAA1C;;AACA,oBAAID,KAAK,CAACE,IAAN,KAAe,MAAnB,EAA2B;AACzBzC,uBAAK,CAAC,cAAc,MAAf,CAAL;AACAiC,yBAAO;AACR,iBAHD,MAGO;AACLjC,uBAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,wBAAM,CAACK,KAAK,CAACC,OAAP,CAAN;AACD;AACF,eApBH;AAqBD,aAvBa,CAAd,CAbM,CAqCN;;AACAhG,mBAAO,CAACC,IAAR,CAAa,qBAAb;AACA,mBAAOsF,OAAP;AACD;AAED;;;;;;wCAGiB;;;;;;;;;AACfvF,6BAAO,CAACC,IAAR,CAAa,8DAAb;AAEIqF,yB,GAAM,KAAKL,OAAL,GAAe,mB;AACrBM,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,+BAAI,CAACV,UAAL,CAAgBxF,GAAhB,CAAoB8F,GAApB,EAAyB;AAAEM,sCAAY,EAAE;AAAhB,yBAAzB,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,iCAAI,CAACmC,QAAL,GAA0BnC,QAA1B,CADgB,CAEhB;;AACAE,iCAAO,CAACC,IAAR,CAAa,eAAe,OAAI,CAACgC,QAAL,CAAcA,QAA1C;AACAwD,iCAAO,CAAC,OAAI,CAACxD,QAAN,CAAP;AACC,yBAPL,WAQS,UAAAnC,QAAQ,EAAI;AACjBE,iCAAO,CAACkC,KAAR,CAAc,2DAA2DpC,QAAQ,CAACgG,MAAlF;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC,8BAAIjG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3B9F,mCAAO,CAACC,IAAR,CAAa,oGAAb;AACAwF,mCAAO,CAAC,IAAD,CAAP;AACD,2BAHD,MAGO;AACLjC,iCAAK,CAAC,uBAAuBuC,KAAK,CAACE,IAA7B,GAAoC,IAApC,GAA2CF,KAAK,CAACC,OAAlD,CAAL;AACAN,kCAAM;AACP;AACF,yBAlBH;AAmBD,uBApBa,C;yDAqBPH,O;;;;;;;;;AACR;AAED;;;;;;oCAGa;;;;;;;;;AACXvF,6BAAO,CAACC,IAAR,CAAa,6DAAb;AAEIqF,yB,GAAM,KAAKL,OAAL,GAAe,e;AACrBM,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,+BAAI,CAACV,UAAL,CAAgBxF,GAAhB,CAAoB8F,GAApB,EAAyB;AAAEM,sCAAY,EAAE;AAAhB,yBAAzB,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,iCAAI,CAACkC,IAAL,GAAkBlC,QAAlB,CADgB,CAEhB;;AACAE,iCAAO,CAACC,IAAR,CAAa,eAAe,OAAI,CAAC+B,IAAL,CAAUC,QAAzB,GAAoC,YAApC,GAAmD,OAAI,CAACD,IAAL,CAAUqE,KAA1E;AACAZ,iCAAO,CAAC,OAAI,CAACzD,IAAN,CAAP;AACC,yBAPL,WAQS,UAAAlC,QAAQ,EAAI;AACjBE,iCAAO,CAACkC,KAAR,CAAc,uDAAuDpC,QAAQ,CAACgG,MAA9E;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC,8BAAIjG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3B9F,mCAAO,CAACC,IAAR,CAAa,mGAAb;AACAwF,mCAAO,CAAC,IAAD,CAAP;AACD,2BAHD,MAGO;AACLjC,iCAAK,CAAC,uBAAuBuC,KAAK,CAACE,IAA7B,GAAoC,IAApC,GAA2CF,KAAK,CAACC,OAAlD,CAAL;AACAN,kCAAM;AACP;AACF,yBAlBH;AAmBD,uBApBa,C;yDAqBPH,O;;;;;;;;;AACR;;;;;;;yBA/NUqN,qB,EAAqB,uH;AAAA,O;;;eAArBA,qB;AAAqB,iBAArBA,qBAAqB,K;AAAA,oBAFpB;;;;;wEAEDA,qB,EAAqB;gBAHjC,wDAGiC;iBAHtB;AACV7R,sBAAU,EAAE;AADF,W;AAGsB,U;;;;;;;;;;;;;;;;;;;;;;ACflC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAaakS,gB;AAOX,kCAAoB/T,KAApB,EAAmDoD,gBAAnD,EAA+FrD,oBAA/F,EAA2I;AAAA;;AAAvH,eAAAC,KAAA,GAAAA,KAAA;AAA+B,eAAAoD,gBAAA,GAAAA,gBAAA;AAA4C,eAAArD,oBAAA,GAAAA,oBAAA;AAA+C;AAE9I;;;;;;;qCAGQ;AACN,iBAAKI,QAAL,GAAgB,KAAKH,KAAL,CAAWI,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,IAAjC,CAAhB;AACA,iBAAKC,SAAL;AACA,iBAAKyT,OAAL,GAAe,KAAKhU,KAAL,CAAWI,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,MAAjC,CAAf;AAEA,iBAAK2T,MAAL;AACD;AAED;;;;;;sCAGS;AAAA;;AACP,iBAAKlU,oBAAL,CAA0BW,UAA1B,CAAqC,KAAKP,QAA1C,EAAoDQ,IAApD,CAAyD,UAAAC,QAAQ,EAAI;AACnE,qBAAI,CAACC,MAAL,GAAuBD,QAAvB;AACAE,qBAAO,CAACC,IAAR,CAAa,aAAa,OAAI,CAACF,MAAL,CAAYG,EAAzB,GAA8B,oBAA3C;AACD,aAHD;AAID;AAED;;;;;;mCAGM;AAAA;;AACJ,iBAAKoC,gBAAL,CAAsBoL,wBAAtB,CAA+C,KAAKrO,QAApD,EAA8D,KAAK6T,OAAnE,EAA4E,IAA5E,EAAkF,IAAlF,EAAwFrT,IAAxF,CAA6F,UAAAC,QAAQ,EAAI;AACvG,qBAAI,CAACkQ,GAAL,GAA2BlQ,QAA3B;AACD,aAFD;AAGD;;;;;;;yBArCUmT,gB,EAAgB,+H,EAAA,6I,EAAA,qJ;AAAA,O;;;cAAhBA,gB;AAAgB,qC;AAAA,iB;AAAA,gB;AAAA,iT;AAAA;AAAA;ACb7B;;AACE;;AAA2B;;;;AAAiD;;AAAqC;;AAAiB;;AAAI;;AAAC;;AACzI;;AAEA;;AACE;;AACE;;AAEA;;AAAI;;;;AAAkC;;AACtC;;AACA;;AACA;;AAEA;;AAAI;;;;AAAgC;;AACpC;;AACE;;;;AACF;;AAEA;;AAAI;;AAAO;;AACX;;AACA;;AACA;;AAEA;;AAAI;;AAAQ;;AACZ;;AACA;;;;AACA;;AAEA;;AAAG;;AAAyE;;AAAsE;;AAAI;;AAEtJ;;AACF;;AACF;;;;AA/B6B;;AAAA;;AAAoD;;AAAA;;AAAkC;;AAAA;;AAO3G;;AAAA;;AAEJ;;AAAA;;AAGI;;AAAA;;AAEmB;;AAAA;;AAKvB;;AAAA;;AAKA;;AAAA;;AAGM;;AAAA;;;;;;;;;;wEDfGA,gB,EAAgB;gBAN5B,uDAM4B;iBANlB;AACT9S,oBAAQ,EAAE,cADD;AAETC,uBAAW,EAAE,2BAFJ;AAGTC,qBAAS,EAAE,CAAC,0BAAD,CAHF;AAITuJ,yBAAa,EAAE,gEAAkBC;AAJxB,W;AAMkB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEb7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACC6B;;AAA4D;;AAAmB;;;;;;AAAjD;;AAA8B;;AAAA;;;;;;;;AAqB3E;;AACE;;AAAK;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACH;;AAAM;;AAAuB;;AAAO;;AACpC;;AAA+C;;AAAoC;;AACrF;;AACA;;AAA4D;;;;AAAoE;;AAElI;;;;;;AALU;;AAAA;;AACa;;AAAA;;AAEhB;;AAAA;;AAA4E;;AAAA;;;;;;AAInF;;AAAyC;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAX3C;;AAEE;;AASA;;AACA;;AACF;;;;;;AAXO;;AAAA;;AASC;;AAAA;;;;;;AAGR;;AAAgC;;AAA2C;;;;;;AAA3C;;AAAA;;;;;;AApBpC;;AACE;;AACE;;AAAoB;;AAAiB;;AACvC;;AACA;;AACA;;AACE;;AAcA;;AACF;;AACA;;AAAK;;AAAM;;AACb;;;;;;AArBwB;;AAAA;;AAIhB;;AAAA;;AAcC;;AAAA;;;;;;AAMX;;AAA4B;;AAAoC;;;;;;AAApC;;AAAA;;;;UDjBrBuJ,Y;AAmBX;;;AAGA,8BAAoBjU,aAApB,EAA0DD,KAA1D,EAAyF2J,kBAAzF,EAAyIE,gBAAzI,EAAuM3H,QAAvM,EAAyNkB,gBAAzN,EAAqQrB,qBAArQ,EAA2T4K,WAA3T,EAA6V5M,oBAA7V,EAAyY;AAAA;;AAArX,eAAAE,aAAA,GAAAA,aAAA;AAAsC,eAAAD,KAAA,GAAAA,KAAA;AAA+B,eAAA2J,kBAAA,GAAAA,kBAAA;AAAgD,eAAAE,gBAAA,GAAAA,gBAAA;AAA8D,eAAA3H,QAAA,GAAAA,QAAA;AAAkB,eAAAkB,gBAAA,GAAAA,gBAAA;AAA4C,eAAArB,qBAAA,GAAAA,qBAAA;AAAsD,eAAA4K,WAAA,GAAAA,WAAA;AAAkC,eAAA5M,oBAAA,GAAAA,oBAAA;AApB7V,eAAAoU,WAAA,GAAsB,EAAtB,CAoByY,CAnBzY;;AACA,eAAAC,UAAA,GAAqB,CAArB;AAEA,eAAAC,SAAA,GAAoB,EAApB;AAIA,eAAA7Q,MAAA,GAAqB,EAArB;AACA,eAAA8Q,YAAA,GAA2B,EAA3B;AAMA,eAAAC,UAAA,GAAuC,IAAvC;AAK4Y;AAE5Y;;;;;;;qCAGQ;AAAA;;AACN,iBAAKpU,QAAL,GAAgB,KAAKH,KAAL,CAAWI,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,UAAjC,CAAhB;AACA,iBAAK2D,QAAL,GAAgB,KAAKjE,KAAL,CAAWI,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,UAAjC,CAAhB;;AACA,gBAAI,KAAK2D,QAAL,IAAiB,IAArB,EAA2B;AACzB,mBAAKA,QAAL,GAAgB,IAAhB;AACD,aALK,CAON;AACA;;;AAEA,iBAAKC,MAAL,GAVM,CAYN;;AACA,iBAAKK,MAAL,GAAc,IAAI,qDAAJ,EAAd;AACA,iBAAKuF,cAAL,GAAsB,KAAtB;AAEA,iBAAKG,WAAL;AAEA,iBAAKlK,oBAAL,CAA0ByU,2BAA1B,CAAsD,KAAKrU,QAA3D,EAAqEQ,IAArE,CAA0E,UAAAC,QAAQ,EAAI;AACpF,qBAAI,CAAC2T,UAAL,GAA4C3T,QAA5C;AACD,aAFD;AAGD;AAED;;;;;;mCAGS;AAAA;;AACP;AACA,gBAAM6T,YAAY,GAAY,IAA9B;AAEA,iBAAKxU,aAAL,CAAmBiE,MAAnB,CAA0B,KAAK/D,QAA/B,EAAyC,KAAK8D,QAA9C,EAAwDwQ,YAAxD,EAAsE9T,IAAtE,CAA2E,UAAAC,QAAQ,EAAI;AACrF,qBAAI,CAAC4C,MAAL,GAA0B5C,QAA1B;;AACA,kBAAI,OAAI,CAACT,QAAL,IAAiB,IAArB,EAA2B;AACzBW,uBAAO,CAACC,IAAR,CAAa,SAAS,OAAI,CAACyC,MAAL,CAAYO,MAArB,GAA8B,yBAA9B,GAA0D,OAAI,CAAC5D,QAA/D,GAA0E,qBAAvF;AACD,eAFD,MAEO;AACLW,uBAAO,CAACC,IAAR,CAAa,SAAS,OAAI,CAACyC,MAAL,CAAYO,MAArB,GAA8B,gDAA3C;AACD;;AAED,kBAAI0Q,YAAJ,EAAkB;AAAE;AAClB;AAEA,oBAAIC,aAAa,GAAW,CAA5B;;AAHgB,4DAIE,OAAI,CAAClR,MAJP;AAAA;;AAAA;AAIhB,yEAA+B;AAAA,wBAAtBmR,KAAsB;AAC7BD,iCAAa;;AACb,wBAAIA,aAAa,IAAI,OAAI,CAACP,WAA1B,EAAuC;AACrCrT,6BAAO,CAACC,IAAR,CAAa,4BAA4B4T,KAAK,CAACxI,KAA/C;;AACA,6BAAI,CAACyI,WAAL,CAAiBD,KAAjB;AACD;AACF;AAVe;AAAA;AAAA;AAAA;AAAA;;AAYhB,uBAAI,CAACP,UAAL,GAAkBM,aAAa,GAAG,OAAI,CAACP,WAAvC;AACArT,uBAAO,CAACC,IAAR,CAAa,mDAAmD,OAAI,CAACqT,UAArE;AACD,eAdD,MAcO;AAAE;AACP,uBAAI,CAACE,YAAL,GAAoB,OAAI,CAAC9Q,MAAzB;AACD;AAEF,aA1BD;AA2BD;AAED;;;;;;sCAGYmR,K,EAAe;AACzB;AAEA,gBAAIE,SAAS,GAAG,IAAI,0DAAJ,EAAhB;AACAA,qBAAS,CAAC,OAAD,CAAT,GAAqBF,KAAK,CAACxI,KAA3B;AACA0I,qBAAS,CAAC,WAAD,CAAT,GAAyB,IAAIC,KAAJ,EAAzB;AAEA,gBAAIC,WAAW,GAAW,CAA1B;;AAPyB,wDAQTJ,KAAK,CAAC3B,SARG;AAAA;;AAAA;AAQzB,qEAAiC;AAAA,oBAAxBlC,GAAwB;AAC/BiE,2BAAW;;AACX,oBAAIA,WAAW,IAAI,KAAKV,SAAxB,EAAmC;AACjC,sBAAIvD,GAAG,CAACjM,IAAJ,IAAY,IAAZ,IAAoBiM,GAAG,CAACjM,IAAJ,CAASd,MAAT,GAAkB,CAA1C,EAA6C;AAC3CjD,2BAAO,CAACC,IAAR,CAAa,eAAe+P,GAAG,CAACjM,IAAhC;AACA,yBAAKzB,gBAAL,CAAsBoL,wBAAtB,CAA+C,KAAKrO,QAApD,EAA8D2Q,GAAG,CAACjM,IAAlE,EAAwE,IAAxE,EAA8E,KAA9E,EAAqFlE,IAArF,CAA0F,UAAAC,QAAQ,EAAI;AACpG,0BAAIoU,OAAO,GAAG,IAAI,gEAAJ,EAAd;AACA,0BAAIvG,cAAc,GAAmB7N,QAArC;AACAoU,6BAAO,CAAC,MAAD,CAAP,GAAkBvG,cAAc,CAAC5J,IAAjC;AACAmQ,6BAAO,CAAC,UAAD,CAAP,GAAsBvG,cAAc,CAACsC,gBAArC;AACAiE,6BAAO,CAAC,QAAD,CAAP,GAAoBvG,cAAc,CAAClK,MAAnC;AAEAzD,6BAAO,CAACC,IAAR,CAAa,uBAAuBiU,OAAO,CAACnQ,IAA/B,GAAsC,IAAtC,GAA6CmQ,OAAO,CAAC7Q,QAArD,GAAgE,cAAhE,GAAiF0Q,SAAS,CAAC1I,KAA3F,GAAmG,OAAhH;AACA0I,+BAAS,CAAC7B,SAAV,CAAoBlH,IAApB,CAAyBkJ,OAAzB;AACD,qBATD;AAUD,mBAZD,MAYO;AACLlU,2BAAO,CAACc,IAAR,CAAa,wBAAb;AACAiT,6BAAS,CAAC7B,SAAV,CAAoBlH,IAApB,CAAyBgF,GAAzB;AACD;AACF;AACF;AA5BwB;AAAA;AAAA;AAAA;AAAA;;AA6BzB+D,qBAAS,CAAC,UAAD,CAAT,GAAwBE,WAAW,GAAG,KAAKV,SAA3C;AAEA,iBAAKC,YAAL,CAAkBxI,IAAlB,CAAuB+I,SAAvB;AACD;AAED;;;;;;;;;sCAMY1Q,Q,EAAkBgD,K,EAAe+C,a,EAAsB;AAAA;;AAEjE,gBAAI/F,QAAQ,CAACJ,MAAT,KAAoB,CAAxB,EAA2B;AACzBO,mBAAK,CAAC,mCAAD,CAAL;AACA;AACD,aALgE,CAOjE;;;AACA,iBAAKwF,cAAL,GAAsB,KAAtB;AAEA,gBAAI7F,QAAQ,GAAG,IAAf;;AACA,gBAAIkD,KAAK,IAAI,IAAb,EAAmB;AACjBlD,sBAAQ,GAAG,KAAK4F,gBAAL,CAAsBM,WAAjC;AACD;;AAED,iBAAKR,kBAAL,CAAwBK,WAAxB,CAAoC7F,QAApC,EAA8CgD,KAA9C,EAAqD,KAAKhH,QAA1D,EAAoE8D,QAApE,EAA8EtD,IAA9E,CAAmF,UAAAC,QAAQ,EAAI;AAC7F,qBAAI,CAAC2D,MAAL,GAAsB3D,QAAtB;AACA,qBAAI,CAACkJ,cAAL,GAAsB,IAAtB,CAF6F,CAG7F;AAEA;;AACA,kBAAI,OAAI,CAACvF,MAAL,CAAY4C,KAAZ,IAAqB,IAArB,IAA6B+C,aAAjC,EAAgD;AAC9C,uBAAI,CAAChI,QAAL,CAAcS,cAAd,CAA6B,qBAA7B,EAAoDC,SAApD,CAA8DC,MAA9D,CAAqE,cAArE,EAD8C,CAE9C;;AACD;AACF,aAVD;AAWD;AAED;;;;;;;iDAIuBsB,Q,EAAgB;AAAA;;AAErC,gBAAIA,QAAQ,CAACJ,MAAT,KAAoB,CAAxB,EAA2B;AACzBO,mBAAK,CAAC,mCAAD,CAAL;AACA;AACD,aALoC,CAOrC;;;AACA,iBAAKqF,kBAAL,CAAwBS,sBAAxB,CAA+CjG,QAA/C,EAAyD,KAAKhE,QAA9D,EAAwEQ,IAAxE,CAA6E,UAAAC,QAAQ,EAAI;AACvF,qBAAI,CAAC2D,MAAL,GAAsB3D,QAAtB;AACD,aAFD;AAGD;AAED;;;;;;uCAGaiE,I,EAAY;AACvB;AAEA,gBAAI,KAAK3C,QAAL,CAAcS,cAAd,CAA6B,YAAYkC,IAAzC,EAA+CjC,SAA/C,CAAyDH,QAAzD,CAAkE,kBAAlE,CAAJ,EAA2F;AACzF,mBAAKP,QAAL,CAAcS,cAAd,CAA6B,UAAUkC,IAAvC,EAA6CjC,SAA7C,CAAuD8B,MAAvD,CAA8D,MAA9D;AACA,mBAAKxC,QAAL,CAAcS,cAAd,CAA6B,UAAUkC,IAAvC,EAA6CjC,SAA7C,CAAuDqS,GAAvD,CAA2D,IAA3D,EAFyF,CAIzF;;AACA,mBAAKC,SAAL,CAAerQ,IAAf;AAEA,mBAAK3C,QAAL,CAAcS,cAAd,CAA6B,YAAYkC,IAAzC,EAA+CjC,SAA/C,CAAyD8B,MAAzD,CAAgE,kBAAhE;AACA,mBAAKxC,QAAL,CAAcS,cAAd,CAA6B,YAAYkC,IAAzC,EAA+CjC,SAA/C,CAAyDqS,GAAzD,CAA6D,iBAA7D;AACD,aATD,MASO;AACL,mBAAK/S,QAAL,CAAcS,cAAd,CAA6B,UAAUkC,IAAvC,EAA6CjC,SAA7C,CAAuD8B,MAAvD,CAA8D,IAA9D;AACA,mBAAKxC,QAAL,CAAcS,cAAd,CAA6B,UAAUkC,IAAvC,EAA6CjC,SAA7C,CAAuDqS,GAAvD,CAA2D,MAA3D;AAEA,mBAAK/S,QAAL,CAAcS,cAAd,CAA6B,YAAYkC,IAAzC,EAA+CjC,SAA/C,CAAyD8B,MAAzD,CAAgE,iBAAhE;AACA,mBAAKxC,QAAL,CAAcS,cAAd,CAA6B,YAAYkC,IAAzC,EAA+CjC,SAA/C,CAAyDqS,GAAzD,CAA6D,kBAA7D;AACD;AACF;AAED;;;;;;;oCAIUpQ,I,EAAc;AAAA;;AACtB;AACA,iBAAKzB,gBAAL,CAAsBoL,wBAAtB,CAA+C,KAAKrO,QAApD,EAA8D0E,IAA9D,EAAoE,IAApE,EAA0E,IAA1E,EAAgFlE,IAAhF,CAAqF,UAAAC,QAAQ,EAAI;AAC/F,kBAAI6N,cAAc,GAAmB7N,QAArC;AACA,qBAAI,CAACsB,QAAL,CAAcS,cAAd,CAA6B,YAAYkC,IAAzC,EAA+C+D,SAA/C,GAA2D,OAAI,CAAC+D,WAAL,CAAiBC,OAAjB,CAAyB6B,cAAc,CAAClK,MAAxC,CAA3D;AACD,aAHD;AAID;AAED;;;;;;wCAGW;AAAA;;AACT,iBAAKxC,qBAAL,CAA2BkI,WAA3B,GAAyCtJ,IAAzC,CAA8C,UAAAC,QAAQ,EAAI;AACxD,qBAAI,CAACmC,QAAL,GAA0BnC,QAA1B;;AAEA,kBAAI,OAAI,CAACmC,QAAL,IAAkB,IAAtB,EAA4B;AAC1B;AACAjC,uBAAO,CAACC,IAAR,CAAa,eAAe,OAAI,CAACgC,QAAL,CAAcA,QAA1C;AACD,eAHD,MAGO;AACLjC,uBAAO,CAACkC,KAAR,CAAc,yDAAd;AACD;AACF,aATD;AAUD;;;;;;;yBAhOUkR,Y,EAAY,uI,EAAA,+H,EAAA,kJ,EAAA,qI,EAAA,gEAsB8J,wDAtB9J,C,EAsBsK,6I,EAAA,wJ,EAAA,oI,EAAA,sJ;AAAA,O;;;cAtBlLA,Y;AAAY,gC;AAAA,iB;AAAA,e;AAAA,iW;AAAA;AAAA;ACvBzB;;AACE;;AAA2B;;AAAoF;;;;AAA+B;;AAChJ;;AAEA;;AAEE;;AACE;;AACF;;AAEA;;AAEI;;AAAK;;AAAM;;AACX;;AACE;;AAwBF;;AAEA;;AACJ;;AACF;;;;AAzCgC;;AAAA;;AAAiF;;AAAA;;AAM9F;;AAAA;;AAOP;;AAAA;;AA0BD;;AAAA;;;;;;;;;;;wEDjBEA,Y,EAAY;gBANxB,uDAMwB;iBANd;AACTjT,oBAAQ,EAAE,SADD;AAETC,uBAAW,EAAE,sBAFJ;AAGTC,qBAAS,EAAE,CAAC,qBAAD,CAHF;AAITuJ,yBAAa,EAAE,gEAAkBC;AAJxB,W;AAMc,U;;;;;;;;;;;;oBAsBuJ,oD;qBAAO,wD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE7CvL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACE;;AAA2B;;;;AAAiD;;AAAqC;;AAAgB;;AAAI;;AAAC;;AACxI;;;;;;AAD6B;;AAAA;;AAAoD;;AAAA;;AAAkC;;AAAA;;;;;;AAEnH;;AACE;;AAA2B;;;;AAA+C;;AAC5E;;;;AAD6B;;AAAA;;;;;;AAkCvB;;AACE;;AAA+B;;AAAI;;AAAc;;AAAK;;AACxD;;;;;;AADqC;;AAAA;;;;;;AAErC;;AACE;;AACF;;;;;;AASI;;AAAwD;;AAAwB;;AAA0F;;AAAwB;;AAAI;;;;;;AAAnH;;AAAA;;;;;;AACnF;;AAAwD;;AAAiC;;;;;;AAEzF;;AAAsD;;AAAyD;;;;;;AAAzD;;AAAA;;;;;;AACtD;;AAAwD;;AAAmE;;;;;;AAAnE;;AAAA;;;;;;AACxD;;AAA4D;;AAAuE;;;;;;AAAvE;;AAAA;;;;;;AAC5D;;AAAuD;;AAAmE;;;;;;AAAnE;;AAAA;;;;;;AAC2E;;AAA6D;;AAAoD;;;;;;AAAqE;;AAAI;;;;;;AAA1H;;AAAA;;AAAiD;;AAAA;;;;;;AAAnP;;AAA8D;;AAAoE;;AAAiM;;;;;;AAArQ;;AAAA;;AAA0E;;AAAA;;;;;;AAb1I;;AACE;;AACE;;AAAiB;;AAAuB;;AAC1C;;AACA;;AAAoB;;;;AAAqE;;AAEzF;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACF;;;;;;AAbqB;;AAAA;;AAEC;;AAAA;;AAEjB;;AAAA;;AACA;;AAAA;;AAEiB;;AAAA;;AACjB;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACiB;;AAAA;;;;UD/CjBwK,uB;AAOX;;;AAGA,yCAAoBnV,KAApB,EAAmDoD,gBAAnD,EAA+FrD,oBAA/F,EAA2I;AAAA;;AAAvH,eAAAC,KAAA,GAAAA,KAAA;AAA+B,eAAAoD,gBAAA,GAAAA,gBAAA;AAA4C,eAAArD,oBAAA,GAAAA,oBAAA;AAL/F,eAAAiT,SAAA,GAAwB,EAAxB;AAK8I;AAE9I;;;;;;;qCAGQ;AACN,iBAAK7S,QAAL,GAAgB,KAAKH,KAAL,CAAWI,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,UAAjC,KAAgD,IAAhE;;AACA,gBAAI,KAAKH,QAAL,IAAiB,IAArB,EAA2B;AACzBW,qBAAO,CAACC,IAAR,CAAa,gBAAgB,KAAKZ,QAAlC;AACA,mBAAKI,SAAL;AACD;;AAED,iBAAK6U,oBAAL;AACD;AAED;;;;;;iDAGoB;AAAA;;AAClB,gBAAI,KAAKjV,QAAL,IAAiB,IAArB,EAA2B;AACzBW,qBAAO,CAACC,IAAR,CAAa,qCAAqC,KAAKZ,QAAvD;AACD,aAFD,MAEO;AACLW,qBAAO,CAACC,IAAR,CAAa,sCAAb;AACD;;AAED,iBAAKqC,gBAAL,CAAsBgS,oBAAtB,CAA2C,KAAKjV,QAAhD,EAA0DQ,IAA1D,CAA+D,UAAAC,QAAQ,EAAI;AACzE,qBAAI,CAACoS,SAAL,GAA6BpS,QAA7B,CADyE,CAEzE;;AACA,kBAAI,OAAI,CAACoS,SAAL,IAAmB,IAAvB,EAA6B;AAC3BlS,uBAAO,CAACC,IAAR,CAAa,0BAA0B,OAAI,CAACiS,SAAL,CAAejP,MAAtD;AACD,eAFD,MAEO;AACLjD,uBAAO,CAACC,IAAR,CAAa,yBAAb;AACD;AACF,aARD;AASD;AAED;;;;;;sCAGS;AAAA;;AACP,iBAAKhB,oBAAL,CAA0BW,UAA1B,CAAqC,KAAKP,QAA1C,EAAoDQ,IAApD,CAAyD,UAAAC,QAAQ,EAAI;AACnE,sBAAI,CAACC,MAAL,GAAuBD,QAAvB;AACAE,qBAAO,CAACC,IAAR,CAAa,aAAa,QAAI,CAACF,MAAL,CAAYG,EAAzB,GAA8B,oBAA3C;AACD,aAHD;AAID;;;;;;;yBAtDUmU,uB,EAAuB,+H,EAAA,6I,EAAA,qJ;AAAA,O;;;cAAvBA,uB;AAAuB,4C;AAAA,iB;AAAA,e;AAAA,id;AAAA;AAAA;ACZpC;;AAGA;;AAIA;;AACE;;AAiBE;;AAYE;;AAA6B;;AAAmB;;AAChD;;AAGA;;AAGA;;AAEE;;AAgBF;;AACF;;AACF;;AACF;;;;AAjEK;;AAGA;;AAAA;;AAmCwB;;AAAA;;AAGA;;AAAA;;AAKjB;;AAAA;;;;;;;;;;wEDlCCA,uB,EAAuB;gBALnC,uDAKmC;iBALzB;AACTlU,oBAAQ,EAAE,qBADD;AAETC,uBAAW,EAAE,kCAFJ;AAGTC,qBAAS,EAAE,CAAC,iCAAD;AAHF,W;AAKyB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEZpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCE;;AAAkD;;AAAuB;;AAAS;;AAAK;;AAAE;;AAAiC;;AAAe;;AAAI;;;;;;AAAjD;;AAAA;;AAA8B;;AAAA;;;;;;AAStH;;AACE;;AACF;;;;;;;;AAyByD;;AAAsF;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAtF;;;;;;;;AAAqI;;AAAwF;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAxF;;;;;;;;AAGhF;;AAAyF;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAzF;;;;;;;;AAA2I;;AAA2F;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA3F;;;;;;AAhBvP;;AACE;;AACA;;AACE;;AAAiB;;AAA4C;;AAC/D;;AACA;;AACA;;AACA;;AAAoB;;AAAqB;;AACzC;;AACA;;AACA;;AAAoB;;AAAkB;;AACtC;;AACA;;AACA;;AAAoB;;AAAiC;;AAAqI;;AAAuI;;AACjU;;AACA;;AACA;;AAAoB;;AAA2C;;AAAwB;;AAAO;;AAAY;;AAA2I;;AAA6I;;AAClY;;AACF;;;;;;AAfqB;;AAAA;;AAIC;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAAsC;;AAAA;;AAAqI;;AAAA;;AAGrK;;AAAA;;AAAqC;;AAAA;;AAAgD;;AAAA;;AAA2I;;AAAA;;;;;;AA1B9P;;AACE;;AACF;;AACE;;AACE;;AAAI;;;;AAA6C;;AACjD;;AAAI;;;;AAAsC;;AAC1C;;AAAI;;AAAM;;AACV;;AAAkB;;AAAO;;AAAoH;;AAAgF;;AAAI;;AACjO;;AAAkB;;AAAU;;AAAoH;;AAAgF;;AAAI;;AACtO;;AACA;;AAmBF;;AACA;;;;;;AA1BQ;;AAAA;;AACA;;AAAA;;AAKF;;AAAA;;;;UDXCkU,sB;AAMX,wCAAoBtV,oBAApB,EAAwEC,KAAxE,EAAuGC,aAAvG,EAA+JiC,QAA/J,EAAyK;AAAA;;AAArJ,eAAAnC,oBAAA,GAAAA,oBAAA;AAAoD,eAAAC,KAAA,GAAAA,KAAA;AAA+B,eAAAC,aAAA,GAAAA,aAAA;AAAwD,eAAAiC,QAAA,GAAAA,QAAA;AAF/J,eAAAgE,OAAA,GAAkB,EAAlB;AAE4K;;;;qCAEpK;AACN,iBAAK/F,QAAL,GAAgB,KAAKH,KAAL,CAAWI,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,IAAjC,CAAhB;AAEA,iBAAKC,SAAL;AACA,iBAAK+U,UAAL;AACD;AAED;;;;;;sCAGS;AAAA;;AACP,iBAAKvV,oBAAL,CAA0BW,UAA1B,CAAqC,KAAKP,QAA1C,EAAoDQ,IAApD,CAAyD,UAAAC,QAAQ,EAAI;AACnE,sBAAI,CAACC,MAAL,GAAuBD,QAAvB;AACAE,qBAAO,CAACC,IAAR,CAAa,aAAa,QAAI,CAACF,MAAL,CAAYG,EAAzB,GAA8B,oBAA3C;AACD,aAHD;AAID;AAED;;;;;;uCAGU;AAAA;;AACR,iBAAKf,aAAL,CAAmBsV,aAAnB,CAAiC,KAAKpV,QAAtC,EAAgDQ,IAAhD,CAAqD,UAAAC,QAAQ,EAAI;AAC/D,sBAAI,CAACsF,OAAL,GAAuBtF,QAAvB;AACAE,qBAAO,CAACC,IAAR,CAAa,4BAA4B,QAAI,CAACZ,QAAjC,GAA4C,qBAAzD;AACD,aAHD;AAID;AAED;;;;;;uCAGagH,K,EAAa;AAAA;;AACxB;AACArG,mBAAO,CAACC,IAAR,CAAa,+BAA+BoG,KAA/B,GAAuC,OAApD;;AACA,gBAAIA,KAAK,IAAI,IAAT,IAAiBA,KAAK,CAACpD,MAAN,GAAe,CAApC,EAAuC;AACrC,mBAAK7B,QAAL,CAAcS,cAAd,CAA6B,qBAA7B,EAAoDC,SAApD,CAA8DC,MAA9D,CAAqE,cAArE;AAEA,mBAAK5C,aAAL,CAAmBuV,YAAnB,CAAgC,KAAKrV,QAArC,EAA+CgH,KAA/C,EAAsDxG,IAAtD,CAA2D,UAAAC,QAAQ,EAAI;AACrEE,uBAAO,CAACC,IAAR,CAAa,qBAAb;;AACA,wBAAI,CAACuU,UAAL;AACD,eAHD;AAID,aAPD,MAOO;AACLhR,mBAAK,CAAC,4DAAD,CAAL;AACD;AACF;AAED;;;;;;gDAGsBvB,Q,EAAkB;AAAA;;AACpC;AACA,iBAAK9C,aAAL,CAAmBwV,qBAAnB,CAAyC,KAAKtV,QAA9C,EAAwD4C,QAAxD,EAAkEpC,IAAlE,CAAuE,UAAAC,QAAQ,EAAI;AACjF,kBAAI0G,WAAW,GAAG1G,QAAlB;AACAE,qBAAO,CAACC,IAAR,CAAa,6BAA6BuG,WAA1C,EAFiF,CAIjF;;AACA,sBAAI,CAACgO,UAAL,GALiF,CAMjF;;AACD,aAPD;AAQH;AAED;;;;;;6CAGmBvS,Q,EAAkB;AAAA;;AACjC;AACA,iBAAK9C,aAAL,CAAmByV,kBAAnB,CAAsC,KAAKvV,QAA3C,EAAqD4C,QAArD,EAA+DpC,IAA/D,CAAoE,UAAAC,QAAQ,EAAI;AAC9E,kBAAI2G,QAAQ,GAAG3G,QAAf;AACAE,qBAAO,CAACC,IAAR,CAAa,0BAA0BwG,QAAvC,EAF8E,CAI9E;;AACA,sBAAI,CAAC+N,UAAL;AACD,aAND;AAOH;;;;;;;yBAhFUD,sB,EAAsB,qJ,EAAA,+H,EAAA,uI,EAAA,gEAM4G,wDAN5G,C;AAMoH,O;;;cAN1IA,sB;AAAsB,2C;AAAA,iB;AAAA,gB;AAAA,8lD;AAAA;AAAA;;;ACbnC;;AACE;;AACF;;AAEA;;AACE;;AACA;;AACE;;AACJ;;AAAI;;;;AAAsC;;AAEpC;;AAIA;;AAgCE;;AACA;;AACE;;AAAQ;AAAA;;AAAA;;AAAA,qBAAS,qBAAqC,cAArC,CAAT;AAA6D,aAA7D;;AAAyG;;;;AAAoC;;AACvJ;;AAEA;;AACE;;AACE;;AAAI;;;;AAAoC;;AACxC;;AAAiB;;;;AAAgD;;AACjE;;AAAoF;AAAA;;AAAA;;AAAA,qBAAiB,IAAAG,YAAA,WAAjB;AAA0C,aAA1C;;AAApF;;AACA;;AACE;;AAAkE;AAAA;;AAAA;;AAAA,qBAAS,qBAAqC,cAArC,CAAT;AAA6D,aAA7D;;AAA+D;;;;AAAgC;;AACjK;;AAAkD;AAAA;;AAAA;;AAAA,qBAAS,IAAAA,YAAA,WAAT;AAAkC,aAAlC;;AAAoC;;;;AAA6B;;AACrH;;AACF;;AACF;;AAEJ;;AACF;;AACF;;;;AAhE6B;;AAAA;;AAIJ;;AAAA,+FAAqB,QAArB,EAAqB,SAArB;;AAGrB;;AAAA;;AAEyB;;AAAA;;AAIlB;;AAAA;;AAkCgH;;AAAA;;AAK3G;;AAAA;;AACa;;AAAA;;AAGkH;;AAAA;;AAC3C;;AAAA;;;;;;;;;;wED7CvFH,sB,EAAsB;gBALlC,uDAKkC;iBALxB;AACTpU,oBAAQ,EAAE,oBADD;AAETC,uBAAW,EAAE,iCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD;AAHF,W;AAKwB,U;;;;;;;;;;oBAMqG,oD;qBAAO,wD;;;;;;;;;;;;;;;;;;;;;AEnB/I;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACeM;;AACE;;AACA;;AAAG;;AAAiB;;AACpB;;;;AACA;;AACA;;AAAG;;AAA2C;;AAChD;;;;;;AAHmB;;AAAA;;AAEd;;AAAA;;;;;;;;AAIL;;AAAiD;;AAAmB;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,qBAAqC,cAArC,CAAT;AAA6D,WAA7D;;AAA8F;;AAAkC;;AAAS;;;;;;AAGrN;;AAAiD;;AAAqC;;;;;;;;AApBxF;;AACE;;AAAG;;AAAoC;;AAIvC;;AACA;;AAAG;;AAAoC;;AAEvC;;AAQA;;AACA;;AAGA;;AAEA;;AAAwD;AAAA;;AAAA;;AAAA;AAAA;;AAAwC;;;;AAAiC;;AACjI;;AACA;;AAAwD;AAAA;;AAAA;;AAAA;AAAA;;AAAwC;;;;AAAiC;;AACnI;;;;;;AAnBK;;AAAA;;AAEE;;AAAA;;AASF;;AAAA;;AAGA;;AAAA;;AAE6F;;AAAA;;AAEA;;AAAA;;;;;;AAGlG;;AACE;;AAAG;;AAA4C;;AAAI;;AAAmC;;AAAM;;AAAY;;AAAI;;AAAkC;;AAAK;;AACrJ;;;;;;AADqD;;AAAA;;AAAyD;;AAAA;;;;;;AAG9G;;AACE;;AAAG;;AAAoB;;AAAI;;AAAoC;;AAAK;;AAAkB;;AAAI;;AAAkC;;AAAK;;AAAyB;;AAC5J;;;;;;AAD6B;;AAAA;;AAA+D;;AAAA;;;;;;AAG5F;;AACE;;AACA;;AAAG;;AAAmB;;AAAQ;;AAA4B;;AAAU;;AAAkF;;AAIxJ;;;;;;AAJgC;;AAAA;;;;;;AAMhC;;AACE;;AACA;;AAAG;;AAAmB;;AAAQ;;AAA4B;;AAAU;;AAAmF;;AAIzJ;;;;;;AAJgC;;AAAA;;;;UDxCvBwU,sB;AASX;;;AAGA,wCAAoB3V,KAApB,EAAmDoD,gBAAnD,EAAuF;AAAA;;AAAnE,eAAApD,KAAA,GAAAA,KAAA;AAA+B,eAAAoD,gBAAA,GAAAA,gBAAA;AAAuC;AAE1F;;;;;;;qCAGQ;AAAA;;AACN,iBAAKpD,KAAL,CACG0D,WADH,CAEGtB,SAFH,CAEa,UAAAuB,MAAM,EAAI;AACnB,sBAAI,CAACiS,GAAL,GAAWjS,MAAM,CAAC,KAAD,CAAN,IAAiB,wBAA5B,CADmB,CAEnB;;AACA7C,qBAAO,CAACC,IAAR,CAAa,+BAA+B,QAAI,CAAC6U,GAAjD;AACD,aANH;AAOA,iBAAKC,gBAAL;AACD;AAED;;;;;;6CAGgB;AAAA;;AACd;AAEA,iBAAKzS,gBAAL,CAAsByS,gBAAtB,CAAuC,KAAKD,GAA5C,EAAiDjV,IAAjD,CAAsD,UAAAC,QAAQ,EAAI;AAChE,sBAAI,CAACkV,aAAL,GAA+BlV,QAA/B;;AAEA,sBAAI,CAACsU,SAAL,CAAe,QAAI,CAACY,aAAL,CAAmB3V,QAAlC,EAA4C,QAAI,CAAC2V,aAAL,CAAmBC,UAA/D;;AAEA,kBAAI,QAAI,CAACD,aAAL,CAAmBE,WAAnB,KAAmC,OAAvC,EAAgD;AAC9C,wBAAI,CAACC,0BAAL;AACD;AACF,aARD;AASD;AAED;;;;;;oCAGU9V,Q,EAAkB0E,I,EAAY;AAAA;;AACtC,iBAAKzB,gBAAL,CAAsBoL,wBAAtB,CAA+CrO,QAA/C,EAAyD0E,IAAzD,EAA+D,IAA/D,EAAqE,IAArE,EAA2ElE,IAA3E,CAAgF,UAAAC,QAAQ,EAAI;AAC1F,sBAAI,CAACkQ,GAAL,GAA2BlQ,QAA3B;AACD,aAFD;AAGD;AAED;;;;;;uDAG0B;AAAA;;AACxB,iBAAKwC,gBAAL,CAAsB6S,0BAAtB,CAAiD,KAAKL,GAAtD,EAA2DjV,IAA3D,CAAgE,UAAAC,QAAQ,EAAI;AAC1E,sBAAI,CAACuG,KAAL,GAAqBvG,QAArB;AACD,aAFD;AAGD;AAED;;;;;;0CAGa;AAAA;;AACX;AAEA,iBAAKwC,gBAAL,CAAsB8S,aAAtB,CAAoC,KAAKN,GAAzC,EAA8CjV,IAA9C,CAAmD,UAAAC,QAAQ,EAAI;AAC7D,sBAAI,CAACuV,iBAAL,GAAmCvV,QAAnC;AACD,aAFD;AAGD;AAED;;;;;;0CAGa;AAAA;;AACX;AAEA,iBAAKwC,gBAAL,CAAsBgT,aAAtB,CAAoC,KAAKR,GAAzC,EAA8CjV,IAA9C,CAAmD,UAAAC,QAAQ,EAAI;AAC7D,sBAAI,CAACyV,gBAAL,GAAkCzV,QAAlC;;AACA,kBAAI,QAAI,CAACyV,gBAAL,IAAyB,IAA7B,EAAmC;AACjC;AACAvV,uBAAO,CAACC,IAAR,CAAa,qCAAqC,QAAI,CAAC6U,GAA1C,GAAgD,mBAA7D;AACD,eAHD,MAGO;AACL9U,uBAAO,CAACC,IAAR,CAAa,qCAAqC,QAAI,CAAC6U,GAA1C,GAAgD,WAA7D;AACD;AACF,aARD;AASD;;;;;;;yBAzFUD,sB,EAAsB,+H,EAAA,6I;AAAA,O;;;cAAtBA,sB;AAAsB,2C;AAAA,iB;AAAA,e;AAAA,yd;AAAA;AAAA;;;ACZnC;;AACE;;AAA2B;;AAAc;;AAC3C;;AAEA;;AACE;;AACE;;AACA;;AA2BA;;AAIA;;AAIA;;AAQA;;AAOA;;AACF;;AAEA;;AACE;;AACE;;AAAI;;AAAgB;;AACpB;;AACA;;AAAG;;AAAU;;AAAS;;AAAW;;AACjC;;AAAwD;AAAA;;AAAA;;AAAA,qBAAS,qBAAqC,cAArC,CAAT;AAA6D,aAA7D;;AAA6E;;AAAK;;AAC5I;;AACF;;AACF;;;;AA7DS;;AAAA;;AA2BA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAQA;;AAAA;;AAcU;;AAAA;;;;;;;;;;;wEDpDNA,sB,EAAsB;gBANlC,uDAMkC;iBANxB;AACT1U,oBAAQ,EAAE,oBADD;AAETC,uBAAW,EAAE,iCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD,CAHF;AAITuJ,yBAAa,EAAE,gEAAkBC;AAJxB,W;AAMwB,U;;;;;;;;;;;;;;;;;;;;;;;;AEZnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACuBU;;AAA4C;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,qBAAiC,WAAjC,CAAT;AAAsD,WAAtD;;AAC1C;;AACF;;;;;;AAgDE;;AACE;;AAAqB;;AAAS;;AAC9B;;AAAgB;;AAAiB;;AACnC;;;;;;AADkB;;AAAA;;;;;;AAElB;;AACE;;AAAqB;;AAAU;;AAC/B;;AAAgB;;AAAa;;AAC/B;;;;;;AADkB;;AAAA;;;;;;AAMlB;;AACE;;AAAqB;;AAAwB;;AAC7C;;AAAgB;;AAAiD;;AACnE;;;;;;AADkB;;AAAA;;;;;;AAElB;;AACE;;AAAqB;;AAAU;;AAC/B;;AAAG;;AAAoB;;AACzB;;;;;;AADK;;AAAA;;;;;;AAEL;;AACE;;AAAqB;;AAAS;;AAC9B;;AAAG;;AAAoD;;AACzD;;;;;;AADK;;AAAA;;;;;;AAEL;;AACE;;AAAqB;;AAAgB;;AACrC;;AAAG;;AAAoB;;AACzB;;;;;;AADK;;AAAA;;;;;;AAEL;;AACE;;AAA2B;;AAAM;;AACjC;;AAAgB;;AAAY;;AAC9B;;;;;;AADkB;;AAAA;;;;;;AAElB;;AACE;;AAA2B;;AAAQ;;AACnC;;AAAgB;;AAAc;;AAChC;;;;;;AADkB;;AAAA;;;;;;;;AAgB4E;;AAAyD;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAAgG;;;;;;AAKhQ;;AAAyD;;AAAU;;;;;;AAAc;;AAAmC;;AAAG;;AAAkC;;AAAoD;;AAAI;;;;;;AAAvF;;AAAA;;AAA+B;;AAAA;;;;;;AAH/K;;AACE;;;;AACA;;AACA;;AAAoB;;AAA0E;;AAAO;;AAAuI;;AAC9O;;;;;;AAHmB;;AAAA;;AAES;;AAAA;;AAAiF;;AAAA;;;;;;;;AAG7G;;AACE;;AACA;;AACE;;AACA;;AAA4F;;AAAK;;AAClG;;AACD;;AAAwD;AAAA;;AAAA;;AAAA;AAAA;;AAAgC;;AAAuB;;AACjH;;;;;;;;AAIA;;AACE;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,sBAAsC,cAAtC,CAAT;AAA8D,WAA9D;;AAA+F;;;;AAA4C;;AACrJ;;;;AADyG;;AAAA;;;;;;;;AAyC3G;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,sBAAgC,cAAhC,CAAT;AAAwD,WAAxD;;AAA4H;;;;AAA4C;;;;AAA5C;;AAAA;;;;;;;;AACpI;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,sBAAgC,cAAhC,CAAT;AAAwD,WAAxD;;AAA2H;;;;AAA4C;;;;AAA5C;;AAAA;;;;;;AAiC/H;;AAAmE;;AAAY;;;;;;AAAjC;;AAAqB;;AAAA;;;;;;AAMnE;;AAA0D;;AAAe;;;;;;AAApC;;AAAqB;;AAAA;;;;;;;;AAK9D;;AAA2G;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,qDAAmC,IAAnC,EAAyC,KAAzC,EAAgD,IAAF,MAA9C,EAA8C,UAA9C;AAA8C,WAA9C;;AAAoG;;AAAyB;;;;;;;;AACxO;;AAAgF;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,qDAAmC,IAAnC,EAAyC,KAAzC,EAAgD,IAAF,MAA9C,EAA8C,UAA9C;AAA8C,WAA9C;;AAAoG;;AAAuB;;;;;;;;AAC3M;;AAA6E;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,qDAAmC,IAAnC,EAAyC,KAAzC,EAAgD,IAAF,MAA9C,EAA8C,UAA9C;AAA8C,WAA9C;;AAAoG;;AAA4B;;;;;;;;AAC7M;;AAAmE;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,qDAAmC,IAAnC,EAAyC,KAAzC,EAAgD,IAAF,MAA9C,EAA8C,UAA9C;AAA8C,WAA9C;;AAAoG;;AAAU;;;;;;;;AACjL;;AAAiF;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,qDAAmC,IAAnC,EAAyC,KAAzC,EAAgD,IAAF,MAA9C,EAA8C,UAA9C;AAA8C,WAA9C;;AAAoG;;AAAwE;;;;;;;;AAE7P;;AAAsH;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,qDAAmC,IAAnC,EAAyC,IAAzC,EAA+C,IAAF,MAA7C,EAA6C,UAA7C;AAA6C,WAA7C;;AAAmG;;AAAuC;;;;;;;;AAChQ;;AAA2F;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,qDAAmC,IAAnC,EAAyC,IAAzC,EAA+C,IAAF,MAA7C,EAA6C,UAA7C;AAA6C,WAA7C;;AAAmG;;AAAqC;;;;;;;;AACnO;;AAAwF;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,qDAAmC,IAAnC,EAAyC,IAAzC,EAA+C,IAAF,MAA7C,EAA6C,UAA7C;AAA6C,WAA7C;;AAAmG;;AAA0C;;;;;;;;AACrO;;AAA8E;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,qDAAmC,IAAnC,EAAyC,IAAzC,EAA+C,IAAF,MAA7C,EAA6C,UAA7C;AAA6C,WAA7C;;AAAmG;;AAAwB;;;;;;;;AACzM;;AAAiF;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,qDAAmC,IAAnC,EAAyC,IAAzC,EAA+C,IAAF,MAA7C,EAA6C,UAA7C;AAA6C,WAA7C;;AAAmG;;AAAuF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA9E7Q;;AACR;;AACG;AAAA;;AAAA;;AAAA;AAAA;;AAgBD;;AAGQ;;AAAM;;AAEN;;AACA;;AAEA;;AACE;;AACE;;AAAI;;;;AAAwC;;AAC5C;;AAAiB;;AAAgF;;AAAkF;;AAAM;;AAAI;;AAC7L;;AAAiB;;AAA2G;;AAC5H;;AAA6G;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA7G;;AACA;;AACE;;AAAkE;AAAA;;AAAA;;AAAA,mBAAS,sBAAgC,cAAhC,CAAT;AAAwD,WAAxD;;AAA0D;;;;AAAgC;;AAC5J;;AAAkD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+C;;AAAO;;AAC1G;;AACF;;AACF;;AAEA;;AACE;;AACE;;AAAI;;;;AAAwC;;AAC5C;;AAAiB;;AAAgF;;AAAkF;;AAAM;;AAAI;;AAC7L;;AAA6G;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA7G;;AACA;;AACE;;AAAkE;AAAA;;AAAA;;AAAA,mBAAS,sBAAgC,cAAhC,CAAT;AAAwD,WAAxD;;AAA0D;;;;AAAgC;;AAC5J;;AAAkD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+C;;AAAO;;AAC1G;;AACF;;AACF;;AAEA;;AACE;;AAAK;;AAEL;;;;AAEA;;AAAqF;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACnF;;AACF;;AACA;;AAEA;;AACE;;AAA4D;;AAAgB;;AAC5E;;AACF;;AACF;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACF;;;;;;AA7EL;;AAAA,uGAA6B,MAA7B,EAA6B,8IAA7B;;AAqByE;;AAAA;;AACA;;AAAA;;AAI1D;;AAAA;;AAK0H;;AAAA;;AAQ1H;;AAAA;;AAI0H;;AAAA;;AAMzG;;AAAA;;AAGvB;;AAAA;;AAGU;;AAAA;;AAKgB;;AAAA;;AAChB;;AAAA;;AAKiC;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACW;;AAAA;;AAEA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;UDvNrD2L,kC;AAyCX;;;AAGA,oDAAoBjT,MAApB,EAA4CrD,KAA5C,EAA2EoD,gBAA3E,EAAuHrB,qBAAvH,EAA6KhC,oBAA7K,EAAiOE,aAAjO,EAAuQ2J,wBAAvQ,EAAqV1H,QAArV,EAA+V;AAAA;;AAA3U,eAAAmB,MAAA,GAAAA,MAAA;AAAwB,eAAArD,KAAA,GAAAA,KAAA;AAA+B,eAAAoD,gBAAA,GAAAA,gBAAA;AAA4C,eAAArB,qBAAA,GAAAA,qBAAA;AAAsD,eAAAhC,oBAAA,GAAAA,oBAAA;AAAoD,eAAAE,aAAA,GAAAA,aAAA;AAAsC,eAAA2J,wBAAA,GAAAA,wBAAA;AAA8E,eAAA1H,QAAA,GAAAA,QAAA;AAPrV,eAAAqB,YAAA,GAAyB,EAAzB;AACA,eAAAC,MAAA,GAAqB,EAArB;AACA,eAAAC,uBAAA,GAAkC,yBAAlC;AAKkW;AAElW;;;;;;;qCAGQ;AAAA;;AACN;AAEA,iBAAKwO,cAAL,GAAsB,YAAtB,CAHM,CAG8B;;AAEpC,iBAAKjS,KAAL,CACG0D,WADH,CAEGtB,SAFH,CAEa,UAAAuB,MAAM,EAAI;AACnB,sBAAI,CAACkB,IAAL,GAAYlB,MAAM,CAAC,MAAD,CAAN,IAAkB,yBAA9B,CADmB,CAEnB;;AACA7C,qBAAO,CAACC,IAAR,CAAa,sBAAsB,QAAI,CAAC8D,IAAxC;AACD,aANH;AAOA,iBAAK0R,sBAAL,CAA4B,KAAK1R,IAAjC;AACD;AAED;;;;;;+CAGqB;AAAA;;AACnB;AACA,gBAAI,CAAC,KAAK3C,QAAL,CAAcS,cAAd,CAA6B,UAA7B,EAAyCgG,iBAA9C,EAAiE;AAC/D;AACA,mBAAKzG,QAAL,CAAcS,cAAd,CAA6B,SAA7B,EAAwCiG,SAAxC,GAAoD,kGAApD;AAEA,mBAAK1G,QAAL,CAAcS,cAAd,CAA6B,UAA7B,EAAyCkG,eAAzC,GAA2D,MAA3D;AACD,aALD,MAKO;AACL,kBAAIqJ,eAAe,GAAG,KAAKhQ,QAAL,CAAcS,cAAd,CAA6B,UAA7B,EAAyCiG,SAA/D,CADK,CAEL;;AACA,mBAAKxF,gBAAL,CAAsBoT,mCAAtB,CAA0D,KAAK3R,IAA/D,EAAqEqN,eAArE,EAAsFvR,IAAtF,CAA2F,UAAAC,QAAQ,EAAI;AACrG;AACAE,uBAAO,CAACC,IAAR,CAAa,yBAAyB,QAAI,CAAC8D,IAA9B,GAAqC,kCAAlD;AACD,eAHD;AAKA,mBAAK3C,QAAL,CAAcS,cAAd,CAA6B,SAA7B,EAAwCiG,SAAxC,GAAoD,kGAApD;AAEA,mBAAK1G,QAAL,CAAcS,cAAd,CAA6B,UAA7B,EAAyCkG,eAAzC,GAA2D,OAA3D;AACD;AACF;AAED;;;;;;qDAG2B;AAAA;;AACzB/H,mBAAO,CAACC,IAAR,CAAa,6CAA6C,KAAK0V,SAAlD,GAA8D,OAA3E;AACA,iBAAKxW,aAAL,CAAmB6D,eAAnB,CAAmC,KAAK2S,SAAxC,EAAmD9V,IAAnD,CAAwD,UAAAC,QAAQ,EAAI;AAClE,sBAAI,CAAC2C,YAAL,GAA8B3C,QAA9B;AACAE,qBAAO,CAACC,IAAR,CAAa,8BAA8B,QAAI,CAACwC,YAAL,CAAkBQ,MAA7D;;AAEA,kBAAI,QAAI,CAACR,YAAL,CAAkBQ,MAAlB,GAA2B,CAA/B,EAAkC;AAChC,wBAAI,CAACC,YAAL,CAAkB,QAAI,CAACyS,SAAvB,EAAkC,QAAI,CAAClT,YAAL,CAAkB,CAAlB,CAAlC;AACD;AACF,aAPD;AAQD;AAED;;;;;;0CAGgBU,Q,EAAkB;AAChC;AACAnD,mBAAO,CAACC,IAAR,CAAa,4CAA4CkD,QAA5C,GAAuD,OAApE;AACA,iBAAKD,YAAL,CAAkB,KAAKyS,SAAvB,EAAkCxS,QAAlC;AACD;AAED;;;;;;uCAGa9D,Q,EAAkB8D,Q,EAAkB;AAAA;;AAC/C,iBAAKhE,aAAL,CAAmBiE,MAAnB,CAA0B/D,QAA1B,EAAoC8D,QAApC,EAA8C,IAA9C,EAAoDtD,IAApD,CAAyD,UAAAC,QAAQ,EAAI;AACnE,sBAAI,CAAC4C,MAAL,GAA0B5C,QAA1B;AACAE,qBAAO,CAACC,IAAR,CAAa,SAAS,QAAI,CAACyC,MAAL,CAAYO,MAArB,GAA8B,yBAA9B,GAA0D5D,QAA1D,GAAqE,qBAAlF;AACD,aAHD;AAID;AAED;;;;;;;wCAIc2H,Q,EAAgB;AAC1B,gBAAIsK,iBAAiB,GAAG,KAAK5N,eAA7B;;AACA,gBAAI4N,iBAAiB,IAAI,IAArB,IAA6BA,iBAAiB,CAACrO,MAAlB,GAA2B,CAAxD,IAA6D+D,QAAQ,IAAI,IAAzE,IAAiFA,QAAQ,CAAC/D,MAAT,GAAkB,CAAvG,EAA0G;AACxGO,mBAAK,CAAC,4BAA4B8N,iBAA5B,GAAgD,OAAjD,CAAL;AACA,mBAAK5N,eAAL,GAAuB,KAAKoF,wBAAL,CAA8B+D,OAA9B,CAAsCyE,iBAAtC,EAAyDtK,QAAzD,CAAvB;AACA,mBAAKuK,yBAAL,GAAiC,IAAjC;AACA/N,mBAAK,CAAC,8BAA8B,KAAKE,eAApC,CAAL,CAJwG,CAKxG;;AACA,mBAAKtC,QAAL,CAAcS,cAAd,CAA6B,gBAA7B,EAA+CC,SAA/C,CAAyDC,MAAzD,CAAgE,cAAhE;AACD,aAPD,MAOO;AACLyB,mBAAK,CAAC,8EAAD,CAAL;AACD;AACJ;AAED;;;;;;;wCAIcwD,Q,EAAgB;AAC1B,gBAAIwK,eAAe,GAAG,KAAK9N,eAA3B;AACAF,iBAAK,CAAC,4BAA4BgO,eAA7B,CAAL;;AACA,gBAAIA,eAAe,IAAI,IAAnB,IAA2BA,eAAe,CAACvO,MAAhB,GAAyB,CAApD,IAAyD+D,QAAQ,IAAI,IAArE,IAA6EA,QAAQ,CAAC/D,MAAT,GAAkB,CAAnG,EAAsG;AACpGO,mBAAK,CAAC,4BAA4BgO,eAA5B,GAA8C,OAA/C,CAAL;AACA,mBAAK9N,eAAL,GAAuB,KAAKoF,wBAAL,CAA8BS,OAA9B,CAAsCiI,eAAtC,EAAuDxK,QAAvD,CAAvB;AACA,mBAAKuK,yBAAL,GAAiC,KAAjC;AACA/N,mBAAK,CAAC,8BAA8B,KAAKE,eAApC,CAAL;AACA,mBAAKtC,QAAL,CAAcS,cAAd,CAA6B,gBAA7B,EAA+CC,SAA/C,CAAyDC,MAAzD,CAAgE,cAAhE;AACD,aAND,MAMO;AACLyB,mBAAK,CAAC,yFAAD,CAAL;AACD;AACJ;AAED;;;;;;;6CAImBwD,Q,EAAgB;AAC/B,gBAAIwK,eAAe,GAAG,KAAK9N,eAA3B,CAD+B,CAE/B;;AACA,gBAAI8N,eAAe,IAAI,IAAnB,IAA2BA,eAAe,CAACvO,MAAhB,GAAyB,CAApD,IAAyD+D,QAAQ,IAAI,IAArE,IAA6EA,QAAQ,CAAC/D,MAAT,GAAkB,CAAnG,EAAsG;AACpG;AACA,kBAAIwO,eAAe,GAAG,KAAK3I,wBAAL,CAA8BS,OAA9B,CAAsCiI,eAAtC,EAAuDxK,QAAvD,CAAtB;AACAxD,mBAAK,CAAC,uBAAuBiO,eAAxB,CAAL;AACA,mBAAKrQ,QAAL,CAAcS,cAAd,CAA6B,sBAA7B,EAAqDC,SAArD,CAA+DC,MAA/D,CAAsE,cAAtE;AACR;;;;;AAKO,aAVD,MAUO;AACLyB,mBAAK,CAAC,yFAAD,CAAL;AACD;AACJ;AAED;;;;;;iDAGuBO,I,EAAY;AAAA;;AACjC,iBAAKzB,gBAAL,CAAsBmT,sBAAtB,CAA6C1R,IAA7C,EAAmDlE,IAAnD,CAAwD,UAAAC,QAAQ,EAAI;AAClE,sBAAI,CAAC8V,UAAL,GAAuC9V,QAAvC;AAEA,sBAAI,CAACuD,QAAL,GAAgB,QAAI,CAACuS,UAAL,CAAgBvS,QAAhC;AACA,sBAAI,CAACsS,SAAL,GAAiB,QAAI,CAACC,UAAL,CAAgBD,SAAjC;;AAEA,sBAAI,CAACE,wCAAL,CAA8C,QAAI,CAACF,SAAnD;;AACA,sBAAI,CAACjE,WAAL,GAAmB,QAAI,CAACkE,UAAL,CAAgBjE,SAAnC;AAEA,sBAAI,CAAC7L,MAAL,GAAc,QAAI,CAAC8P,UAAL,CAAgB9P,MAA9B,CATkE,CAUlE;;AAEA,kBAAI,QAAI,CAACA,MAAL,KAAgB,gBAApB,EAAsC;AACpC;AACA,wBAAI,CAACpC,eAAL,GAAuB,EAAvB;AACD,eAHD,MAGO;AACL,wBAAI,CAACyP,MAAL,CAAY,QAAI,CAACwC,SAAjB,EAA4B,QAAI,CAACC,UAAL,CAAgB7R,IAA5C;AACD;;AAED,sBAAI,CAAC+R,cAAL,GAAsB,QAAI,CAACF,UAAL,CAAgBE,cAAtC;AAEA,sBAAI,CAACZ,WAAL,GAAmB,QAAI,CAACU,UAAL,CAAgBV,WAAnC;AACA,sBAAI,CAACa,gBAAL,GAAwB,QAAI,CAACH,UAAL,CAAgBG,gBAAxC;AAEA,sBAAI,CAAC1P,KAAL,GAAa,QAAI,CAACuP,UAAL,CAAgBvP,KAA7B,CAxBkE,CAyBlE;;AACA,sBAAI,CAAC2P,QAAL,GAAgB,QAAI,CAACJ,UAAL,CAAgBI,QAAhC;AACA,sBAAI,CAACC,cAAL,GAAsB,MAAtB,CA3BkE,CA2BpC;;AAE9B,sBAAI,CAACC,aAAL,GAAqB,QAAI,CAACN,UAAL,CAAgBM,aAArC;AAEA,sBAAI,CAACC,YAAL,GAAoB,QAAI,CAACP,UAAL,CAAgBQ,gBAApC;AACA,sBAAI,CAACC,UAAL,GAAkB,QAAI,CAACT,UAAL,CAAgBS,UAAlC,CAhCkE,CAkClE;;AACA,kBAAI,QAAI,CAACT,UAAL,IAAoB,IAAxB,EAA8B;AAC5B;AACA5V,uBAAO,CAACC,IAAR,CAAa,eAAe,QAAI,CAAC2V,UAAL,CAAgBvS,QAA5C;AACD,eAHD,MAGO;AACLrD,uBAAO,CAACC,IAAR,CAAa,qCAAqC8D,IAArC,GAA4C,IAAzD;AACD;;AAED,sBAAI,CAAChB,wBAAL;AACD,aA3CD;AA4CD;AAED;;;;;;;;iCAKO1D,Q,EAAkB0E,I,EAAc;AAAA;;AACrC;AAEA,iBAAKzB,gBAAL,CAAsBoL,wBAAtB,CAA+CrO,QAA/C,EAAyD0E,IAAzD,EAA+D,IAA/D,EAAqE,IAArE,EAA2ElE,IAA3E,CAAgF,UAAAC,QAAQ,EAAI;AAC1F,kBAAIkQ,GAAG,GAAmBlQ,QAA1B;;AACA,kBAAIkQ,GAAG,CAACvM,MAAJ,IAAc,IAAlB,EAAwB;AACtB,wBAAI,CAACC,eAAL,GAAuBsM,GAAG,CAACvM,MAA3B;AAEA,wBAAI,CAAC6S,kCAAL,GAA0CtG,GAAG,CAACuG,mCAA9C;;AACA,oBAAI,QAAI,CAACD,kCAAL,IAA2C,IAA/C,EAAqD,CACnD;AACD,iBAFD,MAEO,CACL;AACD;AACF,eATD,MASO;AACL9S,qBAAK,CAAC,yCAAyCO,IAAzC,GAAgD,eAAhD,GAAkE1E,QAAlE,GAA6E,IAA9E,CAAL;AACA,wBAAI,CAACqE,eAAL,GAAuB,EAAvB;AACD;;AAED,sBAAI,CAAC8S,OAAL,GAAexG,GAAG,CAACwG,OAAnB;AACA,sBAAI,CAAC1G,MAAL,GAAcE,GAAG,CAACF,MAAlB;AACA,sBAAI,CAAC2G,QAAL,GAAgBzG,GAAG,CAACyG,QAApB;AACD,aAnBD;AAoBD;AAED;;;;;;kCAGK;AAAA;;AACHjT,iBAAK,CAAC,0EAA0E,KAAKO,IAAhF,CAAL;AACA/D,mBAAO,CAACC,IAAR,CAAa,mEAAmE,KAAK8D,IAArF;AAEA,iBAAKzB,gBAAL,CAAsBsP,KAAtB,CAA4B,KAAK7N,IAAjC,EAAuClE,IAAvC,CAA4C,UAAAC,QAAQ,EAAI;AACtD;AACAE,qBAAO,CAACC,IAAR,CAAa,mBAAb;AACA,sBAAI,CAAC2V,UAAL,GAAuC9V,QAAvC;;AACA,sBAAI,CAACyC,MAAL,CAAY0B,QAAZ,CAAqB,CAAC,4BAA4B,QAAI,CAAC0R,SAAlC,CAArB;AACD,aALD;AAMD;AAED;;;;;;sDAGyB;AAAA;;AACvB;AACA3V,mBAAO,CAACC,IAAR,CAAa,kCAAkC,KAAK8D,IAAvC,GAA8C,GAA3D;AAEA,iBAAKzB,gBAAL,CAAsBuP,yBAAtB,CAAgD,KAAK9N,IAArD,EAA2DlE,IAA3D,CAAgE,UAAAC,QAAQ,EAAI;AAC1E;AACAE,qBAAO,CAACC,IAAR,CAAa,2BAA2B,QAAI,CAAC8D,IAAhC,GAAuC,qBAApD;;AACA,sBAAI,CAACxB,MAAL,CAAY0B,QAAZ,CAAqB,CAAC,4BAA4B,QAAI,CAAC0R,SAAlC,CAArB;AACD,aAJD;AAKD;AAED;;;;;;;;;;oDAO0Be,S,EAAoB9E,K,EAAgBtO,W,EAAqBC,U,EAAkB;AAAA;;AACnG;AACA,gBAAIE,MAAM,GAAG,KAAKC,eAAlB,CAFmG,CAInG;;AACA,gBAAI;AACFC,qBAAO,CAACC,MAAR,CAAe,iBAAf;AACD,aAFD,CAEE,OAAMC,CAAN,EAAS;AACTL,mBAAK,CAAC,YAAYK,CAAb,CAAL;AACD,aATkG,CAWnG;;;AACA7D,mBAAO,CAACC,IAAR,CAAa,yBAAyB,KAAKkR,cAA3C;;AAEA,gBAAI1N,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACR,MAAP,KAAkB,CAAzC,EAA4C;AAC1CO,mBAAK,CAAC,4EAAD,CAAL;AACA;AACD,aAjBkG,CAmBnG;;;AACA,gBAAID,UAAU,IAAI,KAAKZ,uBAAnB,IAA8C,KAAKwO,cAAL,IAAuB,YAAzE,EAAuF;AACrF3N,mBAAK,CAAC,wKAAD,CAAL,CADqF,CAErF;AACA;AACA;AACD,aAzBkG,CA2BnG;;;AACAxD,mBAAO,CAACC,IAAR,CAAa,qCAAqC,KAAK8D,IAA1C,GAAiD,KAAjD,GAAyDN,MAAtE;AAEA,iBAAKnB,gBAAL,CAAsBqU,yBAAtB,CAAgD,KAAK5S,IAArD,EAA2DN,MAA3D,EAAmE,KAAK8N,yBAAxE,EAAmG,KAAKJ,cAAxG,EAAwHtR,IAAxH,CAA6H,UAAAC,QAAQ,EAAI;AACvI;AACAE,qBAAO,CAACC,IAAR,CAAa,uBAAuB,QAAI,CAAC8D,IAA5B,GAAmC,mBAAhD;;AAEA,kBAAI2S,SAAJ,EAAe;AACb;AACA1W,uBAAO,CAACC,IAAR,CAAa,wBAAb;;AACA,wBAAI,CAACqC,gBAAL,CAAsBsU,gBAAtB,CAAuC,QAAI,CAAC7S,IAA5C,EAAkDlE,IAAlD,CAAuD,UAAAC,QAAQ,EAAI;AACjE;AACAE,yBAAO,CAACC,IAAR,CAAa,yBAAb,EAFiE,CAGjE;AACD,iBAJD;AAKD;;AAED,kBAAI2R,KAAJ,EAAW;AACT;AACA5R,uBAAO,CAACC,IAAR,CAAa,oBAAb;;AACA,wBAAI,CAACqC,gBAAL,CAAsBsP,KAAtB,CAA4B,QAAI,CAAC7N,IAAjC,EAAuClE,IAAvC,CAA4C,UAAAC,QAAQ,EAAI;AACtD;AACAE,yBAAO,CAACC,IAAR,CAAa,mBAAb,EAFsD,CAGtD;AACD,iBAJD;AAKD;;AAEDD,qBAAO,CAACC,IAAR,CAAa,4BAA4BsD,UAAzC;;AACA,kBAAIA,UAAU,IAAI,QAAI,CAACZ,uBAAvB,EAAgD;AAC9C3C,uBAAO,CAACC,IAAR,CAAa,4CAA4CsD,UAA5C,GAAyD,OAAtE;;AACA,wBAAI,CAACpE,aAAL,CAAmB6E,WAAnB,CAA+B,QAAI,CAAC2R,SAApC,EAA+CrS,WAA/C,EAA4DC,UAA5D,EAAwE,QAAI,CAACQ,IAA7E,EAAmFlE,IAAnF,CAAwF,UAAAC,QAAQ,EAAI;AAClG;AACAE,yBAAO,CAACC,IAAR,CAAa,yBAAb;AACD,iBAHD;AAID,eA/BsI,CAiCvI;;;AACAD,qBAAO,CAACC,IAAR,CAAa,mDAAb,EAlCuI,CAmCvI;AACA;;AACA,sBAAI,CAACsC,MAAL,CAAY0B,QAAZ,CAAqB,CAAC,4BAA4B,QAAI,CAAC0R,SAAlC,CAArB;AACD,aAtCD;AAwCA3V,mBAAO,CAACC,IAAR,CAAa,yCAAb;AACD;AAED;;;;;;mEAGyC0V,S,EAAiB;AAAA;;AACxD3V,mBAAO,CAACC,IAAR,CAAa,iBAAiB0V,SAAjB,GAA6B,OAA1C;AAGA,iBAAK1W,oBAAL,CAA0BW,UAA1B,CAAqC+V,SAArC,EAAgD9V,IAAhD,CAAqD,UAAAC,QAAQ,EAAI;AAC/D,sBAAI,CAACqM,OAAL,GAAwBrM,QAAxB;;AAEA,kBAAI,QAAI,CAACqM,OAAL,IAAiB,IAArB,EAA2B;AACzBnM,uBAAO,CAACC,IAAR,CAAa,yBAAyB,QAAI,CAACkM,OAAL,CAAajM,EAAtC,GAA2C,yBAA3C,GAAuE,QAAI,CAACiM,OAAL,CAAaH,yBAAjG;;AACA,oBAAI,QAAI,CAACG,OAAL,CAAaH,yBAAb,KAA2C,IAA/C,EAAqD;AACnD,0BAAI,CAACmF,cAAL,GAAsB,aAAtB;AACD,iBAFD,MAEO;AACL,0BAAI,CAACA,cAAL,GAAsB,YAAtB;AACD;AACF,eAPD,MAOO;AACLnR,uBAAO,CAAC+F,KAAR,CAAc,iCAAiC4P,SAAjC,GAA6C,0BAA3D;AACD;AACF,aAbD;AAcD;;;;;;;yBAtYUH,kC,EAAkC,uH,EAAA,+H,EAAA,6I,EAAA,uJ,EAAA,qJ,EAAA,uI,EAAA,8J,EAAA,gEA4CsR,wDA5CtR,C;AA4C8R,O;;;cA5ChUA,kC;AAAkC,wD;AAAA,kB;AAAA,gB;AAAA,quI;AAAA;AAAA;;;ACxB/C;;AACE;;AAA2B;;AAAqB;;AAClD;;AAEA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AAEA;;AACE;;AACE;;AAAiD;AAAA,qBAAS,IAAA3D,yBAAA,EAAT;AAAoC,aAApC;;AAAjD;;AACF;;AAQA;;AAIA;;AACE;;AACE;;AAAqC;AAAA;AAAA;;AAArC;;AACA;;AACA;;AACA;;AACE;;AAAG;;AAAO;;AACV;;AAAkB;;AAAmC;;AACvD;;AACF;;AACA;;AACE;;AAAqC;AAAA;AAAA;;AAArC;;AACA;;AACA;;AACA;;AACE;;AAAG;;AAAiC;;AACpC;;AAAkB;;AAA2C;;AAC/D;;AACF;;AACA;;AACE;;AAAqC;AAAA;AAAA;;AAArC;;AACA;;AACA;;AACA;;AACE;;AAAG;;AAAM;;AACT;;AAAkB;;AAAmB;;AACvC;;AACF;;AACF;;AACF;;AAEA;;AAAiE;AAAA;;AAAA;;AAAA,qBAAS,qBAAiC,cAAjC,CAAT;AAAyD,aAAzD;;AAC/D;;AACF;;AAEA;;AACE;;AACE;;AAAI;;;;AAA0C;;AAC9C;;AACE;;AAAqB;;AAAM;;AAC3B;;AAAgB;;AAAY;;AAC9B;;AACA;;AACE;;AAAqB;;AAAS;;AAC9B;;AAAgB;;AAAe;;AACjC;;AACA;;AAIA;;AAIA;;AACE;;AAAqB;;AAAO;;AAC5B;;AAAG;;AAAiB;;AACtB;;AACA;;AAIA;;AAIA;;AAIA;;AAIA;;AAIA;;AAIA;;AACE;;AAAqB;;AAAI;;AACzB;;AAAgB;;AAAU;;AAC5B;;AACE;;AAAwD;AAAA;;AAAA;;AAAA,qBAAS,qBAAiC,cAAjC,CAAT;AAAyD,aAAzD;;AAAyE;;;;AAA+B;;AACpK;;AACF;;AAEF;;AAGA;;AACE;;AACE;;AACE;;AAAiB;;AAA4C;;AAAc;;AAAO;;AAAY;;AAAiM;;AAE/R;;AAMA;;AASA;;AAEA;;AAIA;;AACE;;AACE;;AAAI;;AAAwB;;AAC5B;;AAAiB;;AAAgF;;AAAkF;;AAAM;;AAAI;;AAC7L;;AAAyH;AAAA;;AAAA;;AAAA,qBAAiB,IAAAG,kBAAA,YAAjB;AAAgE,aAAhE;;AAAzH;;AACA;;AACE;;AAAkE;AAAA;;AAAA;;AAAA,qBAAS,sBAAsC,cAAtC,CAAT;AAA8D,aAA9D;;AAAgE;;;;AAAgC;;AAClK;;AAAkD;AAAA;;AAAA;;AAAA,qBAAS,IAAAA,kBAAA,YAAT;AAAwD,aAAxD;;AAA0D;;AAAO;;AACrH;;AACF;;AACF;;AAEF;;AACF;;AAEA;;AAgFF;;AACF;;AACF;;AACF;;;;AA3O6J;;AAAA;;AAc3I;;AAAA;;AAMiC;;AAAA,oGAA4B,OAA5B,EAA4B,YAA5B;;AASA;;AAAA,oGAA4B,OAA5B,EAA4B,aAA5B;;AASA;;AAAA,oGAA4B,OAA5B,EAA4B,YAA5B;;AAiBnC;;AAAA;;AAGc;;AAAA;;AAIA;;AAAA;;AAEC;;AAAA;;AAIA;;AAAA;;AAMd;;AAAA;;AAEc;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAId;;AAAA;;AAIA;;AAAA;;AAMa;;AAAA;;AAEiH;;AAAA;;AAUtE;;AAAA;;AAAyC;;AAAA;;AAEnF;;AAAA;;AAMA;;AAAA;;AAWd;;AAAA;;AAUmI;;AAAA;;AASrH;;AAAA;;;;;;;;;;;wEDzIlBwD,kC,EAAkC;gBAN9C,uDAM8C;iBANpC;AACTrV,oBAAQ,EAAE,iCADD;AAETC,uBAAW,EAAE,8CAFJ;AAGTC,qBAAS,EAAE,CAAC,6CAAD,CAHF;AAITuJ,yBAAa,EAAE,gEAAkBC;AAJxB,W;AAMoC,U;;;;;;;;;;;;;;;;;;oBA4C+Q,oD;qBAAO,wD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UErDxTgN,gB;AAeX;;;AAGA,kCAAoB7R,UAApB,EAAoDzC,MAApD,EAA4E6E,SAA5E,EAAyG;AAAA;;AAArF,eAAApC,UAAA,GAAAA,UAAA;AAAgC,eAAAzC,MAAA,GAAAA,MAAA;AAAwB,eAAA6E,SAAA,GAAAA,SAAA;AAhB5E,eAAAnC,OAAA,GAAU,sEAAYH,UAAtB;AAEA,eAAA4J,QAAA,GAA6B,EAA7B;AACA,eAAAoI,UAAA,GAAyB,EAAzB;AACA,eAAA5E,SAAA,GAAmC,EAAnC;AAaElS,iBAAO,CAACC,IAAR,CAAa,+BAAb;AACD;AAED;;;;;;;;;mDAK+BZ,Q,EAAkB0E,I,EAAcvB,Q,EAAkBuU,Q,EAAiB;;;;;;;;;AAChG;AACA/W,6BAAO,CAACC,IAAR,CAAa,4CAA4C8D,IAA5C,GAAmD,eAAnD,GAAqE1E,QAArE,GAAgF,OAA7F;AAEIyT,6B,GAAU,I;;AACd,0BAAItQ,QAAQ,IAAI,IAAhB,EAAsB;AACpBxC,+BAAO,CAACC,IAAR,CAAa,0BAAb;AACA6S,+BAAO,GAAG,IAAI,gEAAJ,GAAkBkE,GAAlB,CAAsB,eAAtB,EAAuC,YAAYxU,QAAnD,CAAV;AACD,uBAHD,MAGO;AACLsQ,+BAAO,GAAG,IAAI,gEAAJ,EAAV;AACD;;AACKD,iC,GAAc;AAClBC,+BAAO,EAAEA;AADS,uB;AAIhBxN,yB,GAAM,KAAKL,OAAL,GAAe,uBAAf,GAAyC5F,QAAzC,GAAoD,GAApD,GAA0D0E,I;AAChEwB,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,gCAAI,CAACV,UAAL,CAAgBxF,GAAhB,CAAoB8F,GAApB,EAAyBuN,WAAzB,EACA;AADA,yBAEGhN,SAFH,GAGGhG,IAHH,CAGQ,UAAAC,QAAQ,EAAI;AAChB,kCAAI,CAAC6N,cAAL,GAAsC7N,QAAtC,CADgB,CAEhB;;AACAE,iCAAO,CAACC,IAAR,CAAa,gCAAgC,QAAI,CAAC0N,cAAL,CAAoBsC,gBAAjE;AACAxK,iCAAO,CAAC,QAAI,CAACkI,cAAN,CAAP;AACC,yBARL,WASS,UAAA7N,QAAQ,EAAI;AACjBE,iCAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC/F,iCAAO,CAACC,IAAR,CAAa,0DAA0D8F,KAAK,CAACC,OAAhE,GAA0E,IAA1E,GAAiFD,KAAK,CAACE,IAApG;;AACA,8BAAInG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3B;AACA9F,mCAAO,CAACc,IAAR,CAAa,kDAAkDiD,IAAlD,GAAyD,wCAAtE;;AACA,gCAAIgT,QAAJ,EAAc;AACZ,sCAAI,CAACxU,MAAL,CAAY0B,QAAZ,CAAqB,CAAC,QAAD,CAArB,EAAiC;AAACrB,2CAAW,EAAE;AAAC,0DAAwBmB,IAAzB;AAA+B,6CAAW;AAA1C;AAAd,+BAAjC;AACD,6BAFD,MAEO;AACL/D,qCAAO,CAACC,IAAR,CAAa,kCAAb;AACD;;AACDyF,kCAAM;AACP,2BATD,MASO,IAAI5F,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAClCtC,iCAAK,CAAC,gDAAgDO,IAAhD,GAAuD,IAAxD,CAAL;AACA/D,mCAAO,CAACC,IAAR,CAAa,gDAAgD8D,IAAhD,GAAuD,IAApE;AACA2B,kCAAM;AACP,2BAJM,MAIA;AACLlC,iCAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,kCAAM;AACP;AACF,yBA9BH;AA+BD,uBAhCa,C;yDAiCPH,O;;;;;;;;;AACR;AAED;;;;;;;;qDAK2BlG,Q,EAAkB0E,I,EAAcV,Q,EAAgB;AAAA;;AACzE;AACArD,mBAAO,CAACC,IAAR,CAAa,qCAAqC8D,IAArC,GAA4C,KAA5C,GAAoDV,QAAjE;AAEA,gBAAIiC,GAAG,GAAG,KAAKL,OAAL,GAAe,uBAAf,GAAyC5F,QAAzC,GAAoD,GAApD,GAA0D0E,IAA1D,GAAiE,WAA3E;AACA,gBAAIwB,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,sBAAI,CAACV,UAAL,CAAgB4B,KAAhB,CAAsBtB,GAAtB,EAA2B;AAAEjC,wBAAQ,EAARA;AAAF,eAA3B,EAAyC;AAAEuC,4BAAY,EAAE;AAAhB,eAAzC,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,wBAAI,CAAC6N,cAAL,GAAsC7N,QAAtC,CADgB,CAEhB;;AACAE,uBAAO,CAACC,IAAR,CAAa,sCAAsC,QAAI,CAAC0N,cAAL,CAAoBsC,gBAAvE;AACAxK,uBAAO,CAAC,QAAI,CAACkI,cAAN,CAAP;AACC,eAPL,WAQS,UAAA7N,QAAQ,EAAI;AACjBE,uBAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,oBAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC/F,uBAAO,CAACC,IAAR,CAAa,qEAAqE8F,KAAK,CAACC,OAA3E,GAAqF,IAArF,GAA4FD,KAAK,CAACE,IAA/G;;AACA,oBAAInG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BtC,uBAAK,CAAC,8BAAD,CAAL;AACAxD,yBAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,wBAAM;AACP,iBAJD,MAIO;AACLlC,uBAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA7B,GAAuC,IAAvC,GAA8ClG,QAAQ,CAACgG,MAAxD,CAAL;AACAJ,wBAAM;AACP;AACF,eApBH;AAqBD,aAtBa,CAAd,CALyE,CA4BzE;;AACA1F,mBAAO,CAACC,IAAR,CAAa,+BAAb;AACA,mBAAOsF,OAAP;AACC;AAEH;;;;;;;;;sDAM4BlG,Q,EAAkB0E,I,EAAcN,M,EAAgBkO,S,EAAiB;AAAA;;AAC3F;AACA3R,mBAAO,CAACC,IAAR,CAAa,qCAAqC8D,IAArC,GAA4C,KAA5C,GAAoDN,MAAjE,EAF2F,CAI3F;;AAEA,gBAAI6B,GAAG,GAAG,KAAKL,OAAL,GAAe,uBAAf,GAAyC5F,QAAzC,GAAoD,GAApD,GAA0D0E,IAApE;AACA,gBAAIwB,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,sBAAI,CAACV,UAAL,CAAgBuB,GAAhB,CAAoBjB,GAApB,EAAyB;AAAE7B,sBAAM,EAANA;AAAF,eAAzB,EAAqC;AAAEmC,4BAAY,EAAE;AAAhB,eAArC,EACA;AADA,eAEGC,SAFH,GAGGhG,IAHH,CAGQ,UAAAC,QAAQ,EAAI;AAChB,wBAAI,CAAC6N,cAAL,GAAsC7N,QAAtC,CADgB,CAEhB;;AACAE,uBAAO,CAACC,IAAR,CAAa,sCAAsC,QAAI,CAAC0N,cAAL,CAAoBlK,MAAvE;AACAgC,uBAAO,CAAC,QAAI,CAACkI,cAAN,CAAP;AACC,eARL,WASS,UAAA7N,QAAQ,EAAI;AACjBE,uBAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,oBAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC/F,uBAAO,CAACC,IAAR,CAAa,qEAAqE8F,KAAK,CAACC,OAA3E,GAAqF,IAArF,GAA4FD,KAAK,CAACE,IAA/G;;AACA,oBAAInG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BtC,uBAAK,CAAC,8BAAD,CAAL;AACAxD,yBAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,wBAAM;AACP,iBAJD,MAIO,IAAI5F,QAAQ,CAACgG,MAAT,KAAoB,GAApB,IAA2BC,KAAK,CAACE,IAAN,KAAe,oBAA9C,EAAoE;AACzEzC,uBAAK,CAAC,mEAAD,CAAL;AACAkC,wBAAM;AACP,iBAHM,MAGA;AACLlC,uBAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,wBAAM;AACP;AACF,eAxBH;AAyBD,aA1Ba,CAAd,CAP2F,CAkC3F;;AACA1F,mBAAO,CAACC,IAAR,CAAa,6BAAb;AACA,mBAAOsF,OAAP;AACC;AAEH;;;;;;;;;qDAMiClG,Q,EAAkBmI,M,EAAgBD,K,EAAa;;;;;;;;;AAC9E;AACAvH,6BAAO,CAACC,IAAR,CAAa,mCAAb;AAEIqF,yB,GAAM,KAAKL,OAAL,GAAe,uB;;AAEzB,0BAAI5F,QAAQ,IAAI,IAAhB,EAAsB;AACpBiG,2BAAG,GAAGA,GAAG,GAAG,YAAN,GAAqBjG,QAA3B;;AACA,4BAAImI,MAAM,IAAI,IAAd,EAAoB;AAClBlC,6BAAG,GAAGA,GAAG,GAAG,UAAN,GAAmBkC,MAAzB;AACD;;AACD,4BAAID,KAAK,IAAI,IAAb,EAAmB;AACjBjC,6BAAG,GAAGA,GAAG,GAAG,SAAN,GAAkBiC,KAAxB;AACD;AACF,uB,CACD;;;AAEIhC,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,gCAAI,CAACV,UAAL,CAAgBxF,GAAhB,CAAoB8F,GAApB,EAAyB;AAAEM,sCAAY,EAAE;AAAhB,yBAAzB,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,kCAAI,CAAC4O,QAAL,GAAkC5O,QAAlC;AACAE,iCAAO,CAACC,IAAR,CAAa,gDAAgD,QAAI,CAACyO,QAAL,CAAczL,MAA3E;AACAwC,iCAAO,CAAC,QAAI,CAACiJ,QAAN,CAAP,CAHgB,CAIhB;AACC,yBAPL,WAQS,UAAA5O,QAAQ,EAAI;AACjBE,iCAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC,8BAAIjG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3B9F,mCAAO,CAACC,IAAR,CAAa,8BAAb;;AACA,gCAAImM,GAAG,GAAG,QAAI,CAAChF,SAAL,CAAeK,OAAf,CAAuB,oDAAvB,CAAV;;AACA,oCAAI,CAAClF,MAAL,CAAY0B,QAAZ,CAAqB,CAAC,QAAD,CAArB,EAAiC;AAACrB,yCAAW,EAAE;AAAC,2CAAWwJ;AAAZ;AAAd,6BAAjC;;AACA3G,mCAAO;AACR,2BALD,MAKO;AACLjC,iCAAK,CAAC,uBAAuBuC,KAAK,CAACE,IAA7B,GAAoC,IAApC,GAA2CF,KAAK,CAACC,OAAlD,CAAL;AACAN,kCAAM;AACP;AACF,yBApBH;AAqBD,uBAtBa,C;yDAuBPH,O;;;;;;;;;AACR;AAED;;;;;;;+CAI2BlG,Q,EAAgB;;;;;;;;;AACzC;AACAW,6BAAO,CAACC,IAAR,CAAa,6BAAb;AAEIqF,yB,GAAM,KAAKL,OAAL,GAAe,uC;;AACzB,0BAAI5F,QAAQ,IAAI,IAAhB,EAAsB;AACpBiG,2BAAG,GAAGA,GAAG,GAAG,aAAN,GAAsBjG,QAA5B;AACD;;AACGkG,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,gCAAI,CAACV,UAAL,CAAgBxF,GAAhB,CAAoB8F,GAApB,EAAyB;AAAEM,sCAAY,EAAE;AAAhB,yBAAzB,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,kCAAI,CAACgX,UAAL,GAA8BhX,QAA9B;AACAE,iCAAO,CAACC,IAAR,CAAa,sCAAsC,QAAI,CAAC6W,UAAL,CAAgB7T,MAAnE;AACAwC,iCAAO,CAAC,QAAI,CAACqR,UAAN,CAAP;AACC,yBANL,WAOS,UAAAhX,QAAQ,EAAI;AACjBE,iCAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC,8BAAIjG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3B9F,mCAAO,CAACC,IAAR,CAAa,8BAAb;;AACA,gCAAImM,GAAG,GAAG,QAAI,CAAChF,SAAL,CAAeK,OAAf,CAAuB,0CAAvB,CAAV;;AACA,oCAAI,CAAClF,MAAL,CAAY0B,QAAZ,CAAqB,CAAC,QAAD,CAArB,EAAiC;AAACrB,yCAAW,EAAE;AAAC,2CAAWwJ;AAAZ;AAAd,6BAAjC;;AACA3G,mCAAO;AACR,2BALD,MAKO;AACL,gCAAIM,KAAK,CAACE,IAAN,KAAe,cAAnB,EAAmC;AACjCjG,qCAAO,CAACC,IAAR,CAAa,mBAAb;AACD,6BAFD,MAEO;AACLuD,mCAAK,CAAC,uBAAuBuC,KAAK,CAACE,IAA7B,GAAoC,IAApC,GAA2CF,KAAK,CAACC,OAAlD,CAAL;AACD;;AACDN,kCAAM;AACP;AACF,yBAvBH;AAwBD,uBAzBa,C;yDA0BPH,O;;;;;;;;;AACR;AAED;;;;;;;;kDAK8BO,M,EAAgBzG,Q,EAAkBkI,K,EAAeC,M,EAAc;;;;;;;;;AAC3F;AACAxH,6BAAO,CAACC,IAAR,CAAa,+BAAb;AAEIqF,yB,GAAM,KAAKL,OAAL,GAAe,kCAAf,GAAoDsC,KAApD,GAA4D,UAA5D,GAAyEC,M;;AACnF,0BAAI1B,MAAM,IAAI,IAAV,IAAkBzG,QAAQ,IAAI,IAAlC,EAAwC;AACtC,4BAAIyG,MAAM,IAAI,IAAd,EAAoB;AAClBR,6BAAG,GAAGA,GAAG,GAAG,UAAN,GAAmBQ,MAAzB;AACD;;AACD,4BAAIzG,QAAQ,IAAI,IAAZ,IAAoByG,MAAM,IAAI,IAAlC,EAAwC;AACtCR,6BAAG,GAAGA,GAAG,GAAG,aAAN,GAAsBjG,QAA5B;AACD;;AACD,4BAAIA,QAAQ,IAAI,IAAZ,IAAoByG,MAAM,IAAI,IAAlC,EAAwC;AACtCR,6BAAG,GAAGA,GAAG,GAAG,aAAN,GAAsBjG,QAA5B;AACD;AACF;;AAEGkG,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,gCAAI,CAACV,UAAL,CAAgBxF,GAAhB,CAAoB8F,GAApB,EAAyB;AAAEM,sCAAY,EAAE;AAAhB,yBAAzB,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,kCAAI,CAACoS,SAAL,GAAwCpS,QAAxC;;AACA,8BAAIgG,MAAM,IAAI,IAAd,EAAoB;AAClB9F,mCAAO,CAACC,IAAR,CAAa,kDAAkD6F,MAAlD,GAA2D,iBAA3D,GAA+EzG,QAA/E,GAA0F,MAA1F,GAAmG,QAAI,CAAC6S,SAAL,CAAejP,MAA/H;AACD,2BAFD,MAEO;AACLjD,mCAAO,CAACC,IAAR,CAAa,4CAA4C,QAAI,CAACiS,SAAL,CAAejP,MAAxE;AACD;;AACDwC,iCAAO,CAAC,QAAI,CAACyM,SAAN,CAAP;AACC,yBAVL,WAWS,UAAApS,QAAQ,EAAI;AACjBE,iCAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC,8BAAIjG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3B9F,mCAAO,CAACC,IAAR,CAAa,8BAAb;;AACA,gCAAImM,GAAG,GAAG,QAAI,CAAChF,SAAL,CAAeK,OAAf,CAAuB,gDAAvB,CAAV;;AACA,oCAAI,CAAClF,MAAL,CAAY0B,QAAZ,CAAqB,CAAC,QAAD,CAArB,EAAiC;AAACrB,yCAAW,EAAE;AAAC,2CAAWwJ;AAAZ;AAAd,6BAAjC;;AACA3G,mCAAO;AACR,2BALD,MAKO;AACLjC,iCAAK,CAAC,uBAAuBuC,KAAK,CAACE,IAA7B,GAAoC,IAApC,GAA2CF,KAAK,CAACC,OAAlD,CAAL;AACAN,kCAAM;AACP;AACF,yBAvBH;AAwBD,uBAzBa,C;yDA0BPH,O;;;;;;;;;AACR;AAED;;;;;;2CAGiBuP,G,EAAW;AAAA;;AAC1B;AACA9U,mBAAO,CAACC,IAAR,CAAa,yBAAyB6U,GAAzB,GAA+B,GAA5C;AAEA,gBAAIxP,GAAG,GAAG,KAAKL,OAAL,GAAe,sBAAf,GAAwC6P,GAAlD;AACA,gBAAIvP,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,sBAAI,CAACV,UAAL,CAAgBxF,GAAhB,CAAoB8F,GAApB,EAAyB;AAAEM,4BAAY,EAAE;AAAhB,eAAzB,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,wBAAI,CAACkV,aAAL,GAA+BlV,QAA/B,CADgB,CAEhB;;AACAE,uBAAO,CAACC,IAAR,CAAa,qBAAqB,QAAI,CAAC+U,aAAL,CAAmB3R,QAArD;AACAoC,uBAAO,CAAC,QAAI,CAACuP,aAAN,CAAP;AACC,eAPL,WAQS,UAAAlV,QAAQ,EAAI;AACjBE,uBAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,oBAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC/F,uBAAO,CAACC,IAAR,CAAa,yDAAyD8F,KAAK,CAACC,OAA/D,GAAyE,IAAzE,GAAgFD,KAAK,CAACE,IAAnG;;AACA,oBAAInG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BtC,uBAAK,CAAC,8BAAD,CAAL;AACAxD,yBAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,wBAAM;AACP,iBAJD,MAIO,IAAI5F,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAClCtC,uBAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAhG,yBAAO,CAACC,IAAR,CAAa,uBAAuB8F,KAAK,CAACC,OAA1C;AACAN,wBAAM;AACP,iBAJM,MAIA;AACLlC,uBAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,wBAAM;AACP;AACF,eAxBH;AAyBD,aA1Ba,CAAd;AA2BA,mBAAOH,OAAP;AACD;AAED;;;;;;wCAGcuP,G,EAAW;AAAA;;AACvB;AACA9U,mBAAO,CAACC,IAAR,CAAa,iCAAiC6U,GAAjC,GAAuC,GAApD;AAEA,gBAAIxP,GAAG,GAAG,KAAKL,OAAL,GAAe,sBAAf,GAAwC6P,GAAxC,GAA8C,UAAxD;AACA,gBAAIvP,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,sBAAI,CAACV,UAAL,CAAgBxF,GAAhB,CAAoB8F,GAApB,EAAyB;AAAEM,4BAAY,EAAE;AAAhB,eAAzB,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,wBAAI,CAACyV,gBAAL,GAAkCzV,QAAlC,CADgB,CAEhB;;AACAE,uBAAO,CAACC,IAAR,CAAa,wBAAwB,QAAI,CAACsV,gBAAL,CAAsBlS,QAA3D;AACAoC,uBAAO,CAAC,QAAI,CAAC8P,gBAAN,CAAP;AACC,eAPL,WAQS,UAAAzV,QAAQ,EAAI;AACjBE,uBAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,oBAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC/F,uBAAO,CAACC,IAAR,CAAa,uDAAuD8F,KAAK,CAACC,OAA7D,GAAuE,IAAvE,GAA8ED,KAAK,CAACE,IAAjG;;AACA,oBAAInG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BtC,uBAAK,CAAC,8BAAD,CAAL;AACAxD,yBAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,wBAAM;AACP,iBAJD,MAIO,IAAI5F,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAClCtC,uBAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAhG,yBAAO,CAACC,IAAR,CAAa,uBAAuB8F,KAAK,CAACC,OAA1C;AACAN,wBAAM;AACP,iBAJM,MAIA;AACLlC,uBAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,wBAAM;AACP;AACF,eAxBH;AAyBD,aA1Ba,CAAd;AA2BA,mBAAOH,OAAP;AACD;AAED;;;;;;wCAGcuP,G,EAAW;AAAA;;AACvB;AACA9U,mBAAO,CAACC,IAAR,CAAa,iCAAiC6U,GAAjC,GAAuC,GAApD;AAEA,gBAAIxP,GAAG,GAAG,KAAKL,OAAL,GAAe,sBAAf,GAAwC6P,GAAxC,GAA8C,UAAxD;AACA,gBAAIvP,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,sBAAI,CAACV,UAAL,CAAgBxF,GAAhB,CAAoB8F,GAApB,EAAyB;AAAEM,4BAAY,EAAE;AAAhB,eAAzB,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,wBAAI,CAACuV,iBAAL,GAAmCvV,QAAnC,CADgB,CAEhB;;AACAE,uBAAO,CAACC,IAAR,CAAa,yBAAyB,QAAI,CAACoV,iBAAL,CAAuBhS,QAA7D;AACAoC,uBAAO,CAAC,QAAI,CAAC4P,iBAAN,CAAP;AACC,eAPL,WAQS,UAAAvV,QAAQ,EAAI;AACjBE,uBAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,oBAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC/F,uBAAO,CAACC,IAAR,CAAa,uDAAuD8F,KAAK,CAACC,OAA7D,GAAuE,IAAvE,GAA8ED,KAAK,CAACE,IAAjG;;AACA,oBAAInG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BtC,uBAAK,CAAC,8BAAD,CAAL;AACAxD,yBAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,wBAAM;AACP,iBAJD,MAIO,IAAI5F,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAClCtC,uBAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAhG,yBAAO,CAACC,IAAR,CAAa,uBAAuB8F,KAAK,CAACC,OAA1C;AACAN,wBAAM;AACP,iBAJM,MAIA;AACLlC,uBAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,wBAAM;AACP;AACF,eAxBH;AAyBD,aA1Ba,CAAd;AA2BA,mBAAOH,OAAP;AACD;AAED;;;;;;;qDAI2BuP,G,EAAW;AAAA;;AACpC;AACA9U,mBAAO,CAACC,IAAR,CAAa,oCAAoC6U,GAApC,GAA0C,GAAvD;AAEA,gBAAIxP,GAAG,GAAG,KAAKL,OAAL,GAAe,sBAAf,GAAwC6P,GAAxC,GAA8C,QAAxD;AACA,gBAAIvP,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,sBAAI,CAACV,UAAL,CAAgBxF,GAAhB,CAAoB8F,GAApB,EAAyB;AAAEM,4BAAY,EAAE;AAAhB,eAAzB,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,wBAAI,CAACmX,uBAAL,GAAuCnX,QAAvC,CADgB,CAEhB;;AACAE,uBAAO,CAACC,IAAR,CAAa,gCAAgC,QAAI,CAACgX,uBAAlD;AACAxR,uBAAO,CAAC,QAAI,CAACwR,uBAAN,CAAP;AACC,eAPL,WAQS,UAAAnX,QAAQ,EAAI;AACjBE,uBAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,oBAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC/F,uBAAO,CAACC,IAAR,CAAa,oEAAoE8F,KAAK,CAACC,OAA1E,GAAoF,IAApF,GAA2FD,KAAK,CAACE,IAA9G;;AACA,oBAAInG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BtC,uBAAK,CAAC,8BAAD,CAAL;AACAxD,yBAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,wBAAM;AACP,iBAJD,MAIO,IAAI5F,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAClCtC,uBAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAhG,yBAAO,CAACC,IAAR,CAAa,uBAAuB8F,KAAK,CAACC,OAA1C;AACAN,wBAAM;AACP,iBAJM,MAIA;AACLlC,uBAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,wBAAM;AACP;AACF,eAxBH;AAyBD,aA1Ba,CAAd;AA2BA,mBAAOH,OAAP;AACD;AAED;;;;;;qCAGWlG,Q,EAAkB0E,I,EAAc+L,M,EAAc;AAAA;;AACvD;AACA9P,mBAAO,CAACC,IAAR,CAAa,kBAAkBZ,QAAlB,GAA6B,GAA7B,GAAmC0E,IAAnC,GAA0C,KAA1C,GAAkD+L,MAAlD,GAA2D,MAAxE;AAEA,gBAAIxK,GAAG,GAAG,KAAKL,OAAL,GAAe,2BAAf,GAA6C5F,QAA7C,GAAwD,GAAxD,GAA8D0E,IAA9D,GAAqE,qBAArE,GAA6F+L,MAAvG;AACA,gBAAIvK,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,sBAAI,CAACV,UAAL,CAAgBxF,GAAhB,CAAoB8F,GAApB,EAAyB;AAAEM,4BAAY,EAAE;AAAhB,eAAzB,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,wBAAI,CAAC6N,cAAL,GAAsC7N,QAAtC,CADgB,CAEhB;;AACAE,uBAAO,CAACC,IAAR,CAAa,oBAAoB,QAAI,CAAC0N,cAAL,CAAoBsC,gBAArD;AACAxK,uBAAO,CAAC,QAAI,CAACkI,cAAN,CAAP;AACC,eAPL,WAQS,UAAA7N,QAAQ,EAAI;AACjBE,uBAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,oBAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC/F,uBAAO,CAACC,IAAR,CAAa,8CAA8C8F,KAAK,CAACC,OAApD,GAA8D,IAA9D,GAAqED,KAAK,CAACE,IAAxF;;AACA,oBAAInG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BtC,uBAAK,CAAC,8BAAD,CAAL;AACAxD,yBAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,wBAAM;AACP,iBAJD,MAIO,IAAI5F,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAClCtC,uBAAK,CAAC,4BAA4BO,IAA5B,GAAmC,IAApC,CAAL;AACA/D,yBAAO,CAACC,IAAR,CAAa,4BAA4B8D,IAA5B,GAAmC,IAAhD;AACA2B,wBAAM;AACP,iBAJM,MAIA;AACLlC,uBAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,wBAAM;AACP;AACF,eAxBH;AAyBD,aA1Ba,CAAd;AA2BA,mBAAOH,OAAP;AACD;AAED;;;;;;;;yDAKqClG,Q,EAAkB0E,I,EAAY;;;;;;;;;AACjE;AACA/D,6BAAO,CAACC,IAAR,CAAa,mDAAmD8D,IAAnD,GAA0D,eAA1D,GAA4E1E,QAA5E,GAAuF,OAApG;AAEIiG,yB,GAAM,KAAKL,OAAL,GAAe,2BAAf,GAA6C5F,QAA7C,GAAwD,GAAxD,GAA8D0E,IAA9D,GAAqE,S;AAC3EwB,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,gCAAI,CAACV,UAAL,CAAgBxF,GAAhB,CAAoB8F,GAApB,EAAyB;AAAEM,sCAAY,EAAE;AAAhB,yBAAzB,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,kCAAI,CAAC8V,UAAL,GAAuC9V,QAAvC,CADgB,CAEhB;;AACAE,iCAAO,CAACC,IAAR,CAAa,qCAAqC,QAAI,CAAC2V,UAAL,CAAgBvS,QAAlE;AACAoC,iCAAO,CAAC,QAAI,CAACmQ,UAAN,CAAP;AACC,yBAPL,WAQS,UAAA9V,QAAQ,EAAI;AACjBE,iCAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC/F,iCAAO,CAACC,IAAR,CAAa,+DAA+D8F,KAAK,CAACC,OAArE,GAA+E,IAA/E,GAAsFD,KAAK,CAACE,IAAzG;;AACA,8BAAInG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3B;AACA9F,mCAAO,CAACC,IAAR,CAAa,+CAA+C8D,IAA/C,GAAsD,yBAAnE;;AACA,oCAAI,CAACxB,MAAL,CAAY0B,QAAZ,CAAqB,CAAC,QAAD,CAArB,EAAiC;AAACrB,yCAAW,EAAE;AAAC,wDAAwBmB,IAAzB;AAA+B,2CAAW;AAA1C;AAAd,6BAAjC;;AACA2B,kCAAM;AACP,2BALD,MAKO,IAAI5F,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAClCtC,iCAAK,CAAC,6CAA6CO,IAA7C,GAAoD,IAArD,CAAL;AACA/D,mCAAO,CAACC,IAAR,CAAa,6CAA6C8D,IAA7C,GAAoD,IAAjE;AACA2B,kCAAM;AACP,2BAJM,MAIA;AACLlC,iCAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,kCAAM;AACP;AACF,yBAzBH;AA0BD,uBA3Ba,C;yDA4BPH,O;;;;;;;;;AACR;AAED;;;;;;;iDAI6BxB,I,EAAY;;;;;;;;;AACvC;AACA/D,6BAAO,CAACC,IAAR,CAAa,yCAAyC8D,IAAzC,GAAgD,OAA7D;AAEIuB,yB,GAAM,KAAKL,OAAL,GAAe,2BAAf,GAA6ClB,I;AACnDwB,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,gCAAI,CAACV,UAAL,CAAgBxF,GAAhB,CAAoB8F,GAApB,EAAyB;AAAEM,sCAAY,EAAE;AAAhB,yBAAzB,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,kCAAI,CAAC8V,UAAL,GAAuC9V,QAAvC,CADgB,CAEhB;;AACAE,iCAAO,CAACC,IAAR,CAAa,qCAAqC,QAAI,CAAC2V,UAAL,CAAgBvS,QAAlE;AACAoC,iCAAO,CAAC,QAAI,CAACmQ,UAAN,CAAP;AACC,yBAPL,WAQS,UAAA9V,QAAQ,EAAI;AACjBE,iCAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC/F,iCAAO,CAACC,IAAR,CAAa,+DAA+D8F,KAAK,CAACC,OAArE,GAA+E,IAA/E,GAAsFD,KAAK,CAACE,IAAzG;;AACA,8BAAInG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3B;AACA9F,mCAAO,CAACC,IAAR,CAAa,+CAA+C8D,IAA/C,GAAsD,yBAAnE;;AACA,oCAAI,CAACxB,MAAL,CAAY0B,QAAZ,CAAqB,CAAC,QAAD,CAArB,EAAiC;AAACrB,yCAAW,EAAE;AAAC,wDAAwBmB,IAAzB;AAA+B,2CAAW;AAA1C;AAAd,6BAAjC;;AACA2B,kCAAM;AACP,2BALD,MAKO,IAAI5F,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAClCtC,iCAAK,CAAC,6CAA6CO,IAA7C,GAAoD,IAArD,CAAL;AACA/D,mCAAO,CAACC,IAAR,CAAa,6CAA6C8D,IAA7C,GAAoD,IAAjE;AACA2B,kCAAM;AACP,2BAJM,MAIA;AACLlC,iCAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,kCAAM;AACP;AACF,yBAzBH;AA0BD,uBA3Ba,C;yDA4BPH,O;;;;;;;;;AACR;AAED;;;;;;oDAGgCxB,I,EAAY;;;;;;;;;AAC1C;AACA/D,6BAAO,CAACC,IAAR,CAAa,kCAAkC8D,IAAlC,GAAyC,GAAtD;AAEIuB,yB,GAAM,KAAKL,OAAL,GAAe,2BAAf,GAA6ClB,I;AACnDwB,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,gCAAI,CAACV,UAAL,WAAuBM,GAAvB,EAA4B;AAAEM,sCAAY,EAAE;AAAhB,yBAA5B,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB;AACAE,iCAAO,CAACC,IAAR,CAAa,mCAAmC8D,IAAhD;AACA0B,iCAAO;AACN,yBANL,WAOS,UAAA3F,QAAQ,EAAI;AACjBE,iCAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC/F,iCAAO,CAACC,IAAR,CAAa,kEAAkE8F,KAAK,CAACC,OAAxE,GAAkF,IAAlF,GAAyFD,KAAK,CAACE,IAA5G;;AACA,8BAAInG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BtC,iCAAK,CAAC,8BAAD,CAAL;AACAxD,mCAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,kCAAM;AACP,2BAJD,MAIO;AACLlC,iCAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,kCAAM;AACP;AACF,yBAnBH;AAoBD,uBArBa,C,EAsBd;;AACA1F,6BAAO,CAACC,IAAR,CAAa,+BAAb;yDACOsF,O;;;;;;;;;AACN;AAEH;;;;;;2CAGuBlG,Q,EAAkB0E,I,EAAY;;;;;;;;;AACnD;AACA/D,6BAAO,CAACC,IAAR,CAAa,yBAAyBZ,QAAzB,GAAoC,GAApC,GAA0C0E,IAA1C,GAAiD,GAA9D;AAEIuB,yB,GAAM,KAAKL,OAAL,GAAe,uBAAf,GAAyC5F,QAAzC,GAAoD,GAApD,GAA0D0E,I;AAChEwB,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,gCAAI,CAACV,UAAL,WAAuBM,GAAvB,EAA4B;AAAEM,sCAAY,EAAE;AAAhB,yBAA5B,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB;AACAE,iCAAO,CAACC,IAAR,CAAa,0BAA0B8D,IAAvC;AACA0B,iCAAO;AACN,yBANL,WAOS,UAAA3F,QAAQ,EAAI;AACjBE,iCAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC/F,iCAAO,CAACC,IAAR,CAAa,yDAAyD8F,KAAK,CAACC,OAA/D,GAAyE,IAAzE,GAAgFD,KAAK,CAACE,IAAnG;;AACA,8BAAInG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BtC,iCAAK,CAAC,8BAAD,CAAL;AACAxD,mCAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,kCAAM;AACP,2BAJD,MAIO;AACLlC,iCAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,kCAAM;AACP;AACF,yBAnBH;AAoBD,uBArBa,C,EAsBd;;AACA1F,6BAAO,CAACC,IAAR,CAAa,kCAAb;yDACOsF,O;;;;;;;;;AACN;AAEH;;;;;;0DAGgClG,Q,EAAkB0E,I,EAAcsC,K,EAAa;AAAA;;AAC3ErG,mBAAO,CAACC,IAAR,CAAa,uBAAuBZ,QAAvB,GAAkC,KAAlC,GAA0C0E,IAA1C,GAAiD,sBAAjD,GAA0EsC,KAAvF;AAEA,gBAAIyM,OAAO,GAAG,IAAI,gEAAJ,EAAd;AACA,gBAAMD,WAAW,GAAG;AAClBC,qBAAO,EAAEA;AADS,aAApB;AAIA,gBAAIxN,GAAG,GAAG,KAAKL,OAAL,GAAe,uBAAf,GAAyC5F,QAAzC,GAAoD,GAApD,GAA0D0E,IAA1D,GAAiE,eAAjE,GAAmFsC,KAA7F;AACA,gBAAId,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,sBAAI,CAACV,UAAL,CAAgBuB,GAAhB,CAAoBjB,GAApB,EAAyB,EAAzB,EAA6BuN,WAA7B,EACGhN,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChBE,uBAAO,CAACC,IAAR,CAAa,oDAAb;AACAwF,uBAAO;AACN,eALL,WAMS,UAAA3F,QAAQ,EAAI;AACjBE,uBAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,oBAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC/F,uBAAO,CAACC,IAAR,CAAa,0EAA0E8F,KAAK,CAACC,OAAhF,GAA0F,IAA1F,GAAiGD,KAAK,CAACE,IAApH;;AACA,oBAAInG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BtC,uBAAK,CAAC,8BAAD,CAAL;AACAxD,yBAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,wBAAM;AACP,iBAJD,MAIO;AACLlC,uBAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,wBAAM;AACP;AACF,eAlBH;AAmBD,aApBa,CAAd,CAT2E,CA8B3E;;AACA1F,mBAAO,CAACC,IAAR,CAAa,mDAAb;AACA,mBAAOsF,OAAP;AACD;AAED;;;;;;;oDAI0B2R,W,EAAqB7X,Q,EAAgB;AAAA;;AAC7DW,mBAAO,CAACC,IAAR,CAAa,mCAAmCiX,WAAhD;AAEA,gBAAIpE,OAAO,GAAG,IAAI,gEAAJ,EAAd;AACA,gBAAMD,WAAW,GAAG;AAClBC,qBAAO,EAAEA;AADS,aAApB;AAIA,gBAAIxN,GAAG,GAAG,KAAKL,OAAL,GAAe,YAAf,GAA8B5F,QAA9B,GAAyC,OAAnD;AACA,gBAAIkG,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,sBAAI,CAACV,UAAL,CAAgBW,IAAhB,CAAqBL,GAArB,EAA0B;AAAE4R,2BAAW,EAAXA;AAAF,eAA1B,EAA2CrE,WAA3C,EACA;AADA,eAEGhN,SAFH,GAGGhG,IAHH,CAGQ,UAAAC,QAAQ,EAAI;AAChBE,uBAAO,CAACC,IAAR,CAAa,kCAAb;AACAwF,uBAAO;AACjB;;;;;AAKW,eAXL,WAYS,UAAA3F,QAAQ,EAAI;AACjBE,uBAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,oBAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC/F,uBAAO,CAACC,IAAR,CAAa,wDAAwD8F,KAAK,CAACC,OAA9D,GAAwE,IAAxE,GAA+ED,KAAK,CAACE,IAAlG;;AACA,oBAAInG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BtC,uBAAK,CAAC,8BAAD,CAAL;AACAxD,yBAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,wBAAM;AACP,iBAJD,MAIO;AACLlC,uBAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,wBAAM;AACP;AACF,eAxBH;AAyBD,aA1Ba,CAAd,CAT6D,CAoC7D;;AACA1F,mBAAO,CAACC,IAAR,CAAa,iCAAb;AACA,mBAAOsF,OAAP;AACD;AAED;;;;;;;;4CAKkBD,G,EAAa6R,Q,EAAkB9X,Q,EAAgB;AAAA;;AAC/DW,mBAAO,CAACC,IAAR,CAAa,2BAA2BqF,GAAxC;AAEA,gBAAIwN,OAAO,GAAG,IAAI,gEAAJ,EAAd;AACA,gBAAMD,WAAW,GAAG;AAClBC,qBAAO,EAAEA;AADS,aAApB;AAIA,gBAAIsE,UAAU,GAAG,KAAKnS,OAAL,GAAe,YAAf,GAA8B5F,QAA9B,GAAyC,OAA1D;AACA,gBAAIkG,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,sBAAI,CAACV,UAAL,CAAgBW,IAAhB,CAAqByR,UAArB,EAAiC;AAAE9R,mBAAG,EAAHA,GAAF;AAAO6R,wBAAQ,EAARA;AAAP,eAAjC,EAAoDtE,WAApD,EACGhN,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChBE,uBAAO,CAACC,IAAR,CAAa,0BAAb;AACAwF,uBAAO;AACjB;;;;;AAKW,eAVL,WAWS,UAAA3F,QAAQ,EAAI;AACjBE,uBAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,oBAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC/F,uBAAO,CAACC,IAAR,CAAa,gDAAgD8F,KAAK,CAACC,OAAtD,GAAgE,IAAhE,GAAuED,KAAK,CAACE,IAA1F;;AACA,oBAAInG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BtC,uBAAK,CAAC,8BAAD,CAAL;AACAxD,yBAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,wBAAM;AACP,iBAJD,MAIO;AACLlC,uBAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,wBAAM;AACP;AACF,eAvBH;AAwBD,aAzBa,CAAd,CAT+D,CAmC/D;;AACA1F,mBAAO,CAACC,IAAR,CAAa,yBAAb;AACA,mBAAOsF,OAAP;AACD;AAED;;;;;;;;;oDAM0B8R,e,EAAyBC,oB,EAA8BC,6B,EAAuClY,Q,EAAgB;AAAA;;AACtIW,mBAAO,CAACC,IAAR,CAAa,mCAAmCoX,eAAhD;AAEA,gBAAIvE,OAAO,GAAG,IAAI,gEAAJ,EAAd;AACA,gBAAMD,WAAW,GAAG;AAClBC,qBAAO,EAAEA;AADS,aAApB;AAIA,gBAAIsE,UAAU,GAAG,KAAKnS,OAAL,GAAe,YAAf,GAA8B5F,QAA9B,GAAyC,cAA1D;AACA,gBAAIkG,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,sBAAI,CAACV,UAAL,CAAgBW,IAAhB,CAAqByR,UAArB,EAAiC;AAAEC,+BAAe,EAAfA,eAAF;AAAmBC,oCAAoB,EAApBA,oBAAnB;AAAyCC,6CAA6B,EAA7BA;AAAzC,eAAjC,EAA2G1E,WAA3G,EACGhN,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChBE,uBAAO,CAACC,IAAR,CAAa,kCAAb;AACAwF,uBAAO;AACjB;;;;;AAKW,eAVL,WAWS,UAAA3F,QAAQ,EAAI;AACjBE,uBAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,oBAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC/F,uBAAO,CAACC,IAAR,CAAa,wDAAwD8F,KAAK,CAACC,OAA9D,GAAwE,IAAxE,GAA+ED,KAAK,CAACE,IAAlG;;AACA,oBAAInG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BtC,uBAAK,CAAC,8BAAD,CAAL;AACAxD,yBAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,wBAAM;AACP,iBAJD,MAIO;AACLlC,uBAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,wBAAM;AACP;AACF,eAvBH;AAwBD,aAzBa,CAAd,CATsI,CAmCtI;;AACA1F,mBAAO,CAACC,IAAR,CAAa,iCAAb;AACA,mBAAOsF,OAAP;AACD;AAED;;;;;;;;qDAK2B4R,Q,EAAkBD,W,EAAqB7X,Q,EAAgB;AAAA;;AAChFW,mBAAO,CAACC,IAAR,CAAa,qCAAqCkX,QAAlD;AAEA,gBAAIrE,OAAO,GAAG,IAAI,gEAAJ,EAAd;AACA,gBAAMD,WAAW,GAAG;AAClBC,qBAAO,EAAEA;AADS,aAApB;AAIA,gBAAIsE,UAAU,GAAG,KAAKnS,OAAL,GAAe,YAAf,GAA8B5F,QAA9B,GAAyC,gBAA1D;AACA,gBAAIkG,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,sBAAI,CAACV,UAAL,CAAgBW,IAAhB,CAAqByR,UAArB,EAAiC;AAAED,wBAAQ,EAARA,QAAF;AAAYD,2BAAW,EAAXA;AAAZ,eAAjC,EAA4DrE,WAA5D,EACGhN,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChBE,uBAAO,CAACC,IAAR,CAAa,oCAAb;AACAwF,uBAAO;AACjB;;;;;AAKW,eAVL,WAWS,UAAA3F,QAAQ,EAAI;AACjBE,uBAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,oBAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC/F,uBAAO,CAACC,IAAR,CAAa,0DAA0D8F,KAAK,CAACC,OAAhE,GAA0E,IAA1E,GAAiFD,KAAK,CAACE,IAApG;;AACA,oBAAInG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BtC,uBAAK,CAAC,8BAAD,CAAL;AACAxD,yBAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,wBAAM;AACP,iBAJD,MAIO;AACLlC,uBAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,wBAAM;AACP;AACF,eAvBH;AAwBD,aAzBa,CAAd,CATgF,CAmChF;;AACA1F,mBAAO,CAACC,IAAR,CAAa,mCAAb;AACA,mBAAOsF,OAAP;AACD;AAED;;;;;;;;iCAKOiS,gB,EAA0B/T,M,EAAgBpE,Q,EAAkBmD,Q,EAAgB;AAAA;;AACjFxC,mBAAO,CAACC,IAAR,CAAa,4BAA4BuX,gBAA5B,GAA+C,IAA/C,GAAsD/T,MAAnE;AAEA,gBAAIqP,OAAO,GAAG,IAAd;;AACA,gBAAItQ,QAAQ,IAAI,IAAhB,EAAsB;AACpBxC,qBAAO,CAACC,IAAR,CAAa,0BAAb;AACA6S,qBAAO,GAAG,IAAI,gEAAJ,GAAkBkE,GAAlB,CAAsB,eAAtB,EAAuC,YAAYxU,QAAnD,CAAV;AACD,aAHD,MAGO;AACLsQ,qBAAO,GAAG,IAAI,gEAAJ,EAAV;AACD;;AACD,gBAAMD,WAAW,GAAG;AAClBC,qBAAO,EAAEA;AADS,aAApB;AAIA,gBAAIxN,GAAG,GAAG,KAAKL,OAAL,GAAe,uBAAf,GAAyC5F,QAAnD;AACA,gBAAIkG,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,sBAAI,CAACV,UAAL,CAAgBW,IAAhB,CAAqBL,GAArB,EAA0B;AAAE7B,sBAAM,EAANA,MAAF;AAAU+T,gCAAgB,EAAhBA;AAAV,eAA1B,EAAwD3E,WAAxD,EACA;AADA,eAEGhN,SAFH,GAGGhG,IAHH,CAGQ,UAAAC,QAAQ,EAAI;AAChB,oBAAIiE,IAAI,GAAGjE,QAAQ,CAAC,MAAD,CAAnB;AACAE,uBAAO,CAACC,IAAR,CAAa,gCAAgC8D,IAA7C;AACA0B,uBAAO,CAAC1B,IAAD,CAAP;AACC,eAPL,WAQS,UAAAjE,QAAQ,EAAI;AACjBE,uBAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,oBAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC/F,uBAAO,CAACC,IAAR,CAAa,4DAA4D8F,KAAK,CAACC,OAAlE,GAA4E,IAA5E,GAAmFD,KAAK,CAACE,IAAtG;;AACA,oBAAInG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BtC,uBAAK,CAAC,8BAAD,CAAL;AACAxD,yBAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,wBAAM;AACP,iBAJD,MAIO;AACLlC,uBAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,wBAAM;AACP;AACF,eApBH;AAqBD,aAtBa,CAAd,CAfiF,CAsCjF;;AACA1F,mBAAO,CAACC,IAAR,CAAa,qCAAb;AACA,mBAAOsF,OAAP;AACC;AAEH;;;;;;;;8DAKoCxB,I,EAAcV,Q,EAAgB;AAAA;;AAChE;AACArD,mBAAO,CAACC,IAAR,CAAa,gDAAgD8D,IAAhD,GAAuD,KAAvD,GAA+DV,QAA5E;AAEA,gBAAIiC,GAAG,GAAG,KAAKL,OAAL,GAAe,2BAAf,GAA6ClB,IAA7C,GAAoD,WAA9D;AACA,gBAAIwB,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,sBAAI,CAACV,UAAL,CAAgBuB,GAAhB,CAAoBjB,GAApB,EAAyB;AAAEjC,wBAAQ,EAARA;AAAF,eAAzB,EAAuC;AAAEuC,4BAAY,EAAE;AAAhB,eAAvC,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,wBAAI,CAAC8V,UAAL,GAAuC9V,QAAvC,CADgB,CAEhB;;AACAE,uBAAO,CAACC,IAAR,CAAa,kCAAkC,QAAI,CAAC2V,UAAL,CAAgBvS,QAA/D;AACAoC,uBAAO,CAAC,QAAI,CAACmQ,UAAN,CAAP;AACC,eAPL,WAQS,UAAA9V,QAAQ,EAAI;AACjBE,uBAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,oBAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC/F,uBAAO,CAACC,IAAR,CAAa,+DAA+D8F,KAAK,CAACC,OAArE,GAA+E,IAA/E,GAAsFD,KAAK,CAACE,IAAzG;;AACA,oBAAInG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BtC,uBAAK,CAAC,8BAAD,CAAL;AACAxD,yBAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,wBAAM;AACP,iBAJD,MAIO,IAAI5F,QAAQ,CAACgG,MAAT,KAAoB,GAApB,IAA2BC,KAAK,CAACE,IAAN,KAAe,8BAA9C,EAA8E;AACnFzC,uBAAK,CAAC,gCAAD,CAAL;AACAkC,wBAAM;AACP,iBAHM,MAGA;AACLlC,uBAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,wBAAM;AACP;AACF,eAvBH;AAwBD,aAzBa,CAAd,CALgE,CA+BhE;;AACA1F,mBAAO,CAACC,IAAR,CAAa,qCAAb;AACA,mBAAOsF,OAAP;AACC;AAEH;;;;;;;;;;oDAO0BxB,I,EAAcN,M,EAAgB8N,yB,EAAoCI,S,EAAiB;AAAA;;AAC3G;AACA3R,mBAAO,CAACC,IAAR,CAAa,kCAAkC8D,IAAlC,GAAyC,KAAzC,GAAiDN,MAA9D,EAF2G,CAI3G;;AAEA,gBAAI6S,kCAAkC,GAAG,IAAzC;;AACA,gBAAI/E,yBAAJ,EAA+B;AAC7B+E,gDAAkC,GAAG,SAArC;AACD;;AAED,gBAAIhR,GAAG,GAAG,KAAKL,OAAL,GAAe,2BAAf,GAA6ClB,IAAvD;AACA,gBAAIwB,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,sBAAI,CAACV,UAAL,CAAgBuB,GAAhB,CAAoBjB,GAApB,EAAyB;AAAE7B,sBAAM,EAANA,MAAF;AAAU6S,kDAAkC,EAAlCA,kCAAV;AAA8C3E,yBAAS,EAATA;AAA9C,eAAzB,EAAoF;AAAE/L,4BAAY,EAAE;AAAhB,eAApF,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,wBAAI,CAAC8V,UAAL,GAAuC9V,QAAvC,CADgB,CAEhB;;AACAE,uBAAO,CAACC,IAAR,CAAa,kCAAkC,QAAI,CAAC2V,UAAL,CAAgBvS,QAA/D;AACAoC,uBAAO,CAAC,QAAI,CAACmQ,UAAN,CAAP;AACC,eAPL,WAQS,UAAA9V,QAAQ,EAAI;AACjBE,uBAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,oBAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC/F,uBAAO,CAACC,IAAR,CAAa,+DAA+D8F,KAAK,CAACC,OAArE,GAA+E,IAA/E,GAAsFD,KAAK,CAACE,IAAzG;;AACA,oBAAInG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BtC,uBAAK,CAAC,8BAAD,CAAL;AACAxD,yBAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,wBAAM;AACP,iBAJD,MAIO,IAAI5F,QAAQ,CAACgG,MAAT,KAAoB,GAApB,IAA2BC,KAAK,CAACE,IAAN,KAAe,oBAA9C,EAAoE;AACzEzC,uBAAK,CAAC,mEAAD,CAAL;AACAkC,wBAAM;AACP,iBAHM,MAGA;AACLlC,uBAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,wBAAM;AACP;AACF,eAvBH;AAwBD,aAzBa,CAAd,CAZ2G,CAsC3G;;AACA1F,mBAAO,CAACC,IAAR,CAAa,2BAAb;AACA,mBAAOsF,OAAP;AACC;AAEH;;;;;;2CAGiBxB,I,EAAY;AAAA;;AAC3B;AACA/D,mBAAO,CAACC,IAAR,CAAa,mEAAmE8D,IAAnE,GAA0E,OAAvF;AAEA,gBAAIuB,GAAG,GAAG,KAAKL,OAAL,GAAe,2BAAf,GAA6ClB,IAA7C,GAAoD,aAA9D;AACA,gBAAIwB,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,sBAAI,CAACV,UAAL,CAAgBxF,GAAhB,CAAoB8F,GAApB,EAAyB;AAAEM,4BAAY,EAAE;AAAhB,eAAzB,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB;AACAE,uBAAO,CAACC,IAAR,CAAa,qBAAb;AACAwF,uBAAO,CAAC3F,QAAD,CAAP;AACC,eANL,WAOS,UAAAA,QAAQ,EAAI;AACjBE,uBAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,oBAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC/F,uBAAO,CAACC,IAAR,CAAa,+DAA+D8F,KAAK,CAACC,OAArE,GAA+E,IAA/E,GAAsFD,KAAK,CAACE,IAAzG;;AACA,oBAAInG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BtC,uBAAK,CAAC,8BAAD,CAAL;AACAxD,yBAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,wBAAM;AACP,iBAJD,MAIO,IAAI5F,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAClCtC,uBAAK,CAAC,6CAA6CO,IAA7C,GAAoD,IAArD,CAAL;AACA/D,yBAAO,CAACC,IAAR,CAAa,6CAA6C8D,IAA7C,GAAoD,IAAjE;AACA2B,wBAAM;AACP,iBAJM,MAIA;AACLlC,uBAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,wBAAM;AACP;AACF,eAvBH;AAwBD,aAzBa,CAAd,CAL2B,CA+B3B;;AACA1F,mBAAO,CAACC,IAAR,CAAa,oCAAb;AACA,mBAAOsF,OAAP;AACD;AAED;;;;;;gCAGMxB,I,EAAY;AAAA;;AAChB;AACA/D,mBAAO,CAACC,IAAR,CAAa,0EAA0E8D,IAA1E,GAAiF,OAA9F;AAEA,gBAAIuB,GAAG,GAAG,KAAKL,OAAL,GAAe,2BAAf,GAA6ClB,IAA7C,GAAoD,QAA9D;AACA,gBAAIwB,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,sBAAI,CAACV,UAAL,CAAgBxF,GAAhB,CAAoB8F,GAApB,EAAyB;AAAEM,4BAAY,EAAE;AAAhB,eAAzB,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB;AACAE,uBAAO,CAACC,IAAR,CAAa,kBAAb;AACAwF,uBAAO,CAAC3F,QAAD,CAAP;AACC,eANL,WAOS,UAAAA,QAAQ,EAAI;AACjBE,uBAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,oBAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC/F,uBAAO,CAACC,IAAR,CAAa,+DAA+D8F,KAAK,CAACC,OAArE,GAA+E,IAA/E,GAAsFD,KAAK,CAACE,IAAzG;;AACA,oBAAInG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BtC,uBAAK,CAAC,8BAAD,CAAL;AACAxD,yBAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,wBAAM;AACP,iBAJD,MAIO,IAAI5F,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAClCtC,uBAAK,CAAC,6CAA6CO,IAA7C,GAAoD,IAArD,CAAL;AACA/D,yBAAO,CAACC,IAAR,CAAa,6CAA6C8D,IAA7C,GAAoD,IAAjE;AACA2B,wBAAM;AACP,iBAJM,MAIA;AACLlC,uBAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,wBAAM;AACP;AACF,eAvBH;AAwBD,aAzBa,CAAd,CALgB,CA+BhB;;AACA1F,mBAAO,CAACC,IAAR,CAAa,uCAAb;AACA,mBAAOsF,OAAP;AACD;;;;;;;yBAvjCUsR,gB,EAAgB,uH,EAAA,8G,EAAA,4H;AAAA,O;;;eAAhBA,gB;AAAgB,iBAAhBA,gBAAgB,K;AAAA,oBAFf;;;;;wEAEDA,gB,EAAgB;gBAH5B,wDAG4B;iBAHjB;AACV9V,sBAAU,EAAE;AADF,W;AAGiB,U;;;;;;;;;;;;;;;;;;;;;;;;;;ACf7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCE;;AAAkD;;AAAuB;;AAAS;;AAAK;;AAAE;;AAAiC;;AAAc;;AAAI;;;;;;AAAhD;;AAAA;;AAA8B;;AAAA;;;;;;;;UDS/G0W,e;AAKX;;;AAGA,iCAAoBxY,oBAApB,EAAwEC,KAAxE,EAA+F;AAAA;;AAA3E,eAAAD,oBAAA,GAAAA,oBAAA;AAAoD,eAAAC,KAAA,GAAAA,KAAA;AAA0B;AAElG;;;;;;;qCAGQ;AACN,iBAAKG,QAAL,GAAgB,KAAKH,KAAL,CAAWI,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,IAAjC,CAAhB;AACA,iBAAKC,SAAL;AACD;AAED;;;;;;;AAOA;;;sCAGS;AAAA;;AACP,iBAAKR,oBAAL,CAA0BW,UAA1B,CAAqC,KAAKP,QAA1C,EAAoDQ,IAApD,CAAyD,UAAAC,QAAQ,EAAI;AACnE,sBAAI,CAACC,MAAL,GAAuBD,QAAvB;AACAE,qBAAO,CAACC,IAAR,CAAa,aAAa,QAAI,CAACF,MAAL,CAAYG,EAAzB,GAA8B,oBAA3C;AACD,aAHD;AAID;;;8BAZgB;AACb,mBAAQ,KAAKH,MAAN,GAAgB,KAAKA,MAAL,CAAY4G,IAA5B,GAAmC,oBAA1C;AACH;;;;;;;yBAvBU8Q,e,EAAe,qJ,EAAA,+H;AAAA,O;;;cAAfA,e;AAAe,mC;AAAA,iB;AAAA,gB;AAAA,qX;AAAA;AAAA;ACV5B;;AACE;;AACF;;AAEA;;AACE;;AACA;;AACE;;AAEJ;;AAAI;;;;AAA+C;;AACnD;;AAA6F;;AAAmC;;AAChI;;AAAiG;;AAAwC;;AACzI;;AAAuF;;AAA8B;;AACrH;;AACA;;AAAG;;AAAqH;;;;AAAiC;;AAAS;;AAE9J;;AACF;;AACF;;;;AAjB6B;;AAAA;;AAIJ;;AAAA,+FAAqB,QAArB,EAAqB,KAArB;;AAIrB;;AAAA;;AACkC;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAE3B;;AAAA;;AAA6G;;AAAA;;;;;;;;;;wEDJ3GA,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACTtX,oBAAQ,EAAE,YADD;AAETC,uBAAW,EAAE,yBAFJ;AAGTC,qBAAS,EAAE,CAAC,wBAAD;AAHF,W;AAKiB,U;;;;;;;;;;;;;;;;;;;;;;;;AEV5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UASaqX,e;AAqBX,iCAAsCtW,QAAtC,EAAwDgG,SAAxD,EAA6FjG,IAA7F,EAA+G;AAAA;;AAAzE,eAAAC,QAAA,GAAAA,QAAA;AAAkB,eAAAgG,SAAA,GAAAA,SAAA;AAAqC,eAAAjG,IAAA,GAAAA,IAAA;AAAqB;;;;mCAhBzGM,K,EAAO;AACd,gBAAG,KAAKN,IAAL,CAAUO,aAAV,CAAwBC,QAAxB,CAAiCF,KAAK,CAACG,MAAvC,CAAH,EAAmD;AACjD;AACA,kBAAIH,KAAK,CAACG,MAAN,CAAa1B,EAAb,IAAmB,uBAAnB,IAA8CuB,KAAK,CAACG,MAAN,CAAa1B,EAAb,IAAmB,sBAAjE,IAA2F,KAAKkB,QAAL,CAAcS,cAAd,CAA6B,sBAA7B,EAAqDC,SAArD,CAA+DH,QAA/D,CAAwE,WAAxE,CAA/F,EAAqL;AACnL3B,uBAAO,CAACC,IAAR,CAAa,cAAb;AACA,qBAAKmB,QAAL,CAAcS,cAAd,CAA6B,sBAA7B,EAAqDC,SAArD,CAA+DC,MAA/D,CAAsE,WAAtE;AACD;AACF,aAND,MAMO;AACL;AACA,kBAAI,KAAKX,QAAL,CAAcS,cAAd,CAA6B,sBAA7B,EAAqDC,SAArD,CAA+DH,QAA/D,CAAwE,WAAxE,CAAJ,EAA0F;AACxF3B,uBAAO,CAACC,IAAR,CAAa,cAAb;AACA,qBAAKmB,QAAL,CAAcS,cAAd,CAA6B,sBAA7B,EAAqDC,SAArD,CAA+DC,MAA/D,CAAsE,WAAtE;AACD;AACF;AACF;;;qCAIO;AACN;AACA,gBAAIkN,eAAe,GAAGC,SAAS,CAAC/L,QAAhC;;AACA,gBAAI8L,eAAe,CAACE,OAAhB,CAAwB,IAAxB,MAAkC,CAAtC,EAAyC;AACvC,mBAAKwI,WAAL,CAAiB,IAAjB;AACD,aAFD,MAEO,IAAI1I,eAAe,CAACE,OAAhB,CAAwB,IAAxB,MAAkC,CAAtC,EAAyC;AAC9C,mBAAKwI,WAAL,CAAiB,IAAjB;AACD,aAFM,MAEA,IAAI1I,eAAe,CAACE,OAAhB,CAAwB,IAAxB,MAAkC,CAAtC,EAAyC;AAC9C,mBAAKwI,WAAL,CAAiB,IAAjB;AACD,aAFM,MAEA;AACL,mBAAKA,WAAL,CAAiB,IAAjB;AACD;AACF;AAED;;;;;;sCAGYxU,Q,EAAkB;AAC5B,iBAAKiE,SAAL,CAAeqI,GAAf,CAAmBtM,QAAnB;AACA,iBAAKyU,eAAL,GAAuBzU,QAAvB;AAEA,gBAAI0U,QAAQ,GAAG,iBAAiB1U,QAAhC,CAJ4B,CAK5B;;AACA,iBAAK/B,QAAL,CAAcS,cAAd,CAA6B,gBAA7B,EAA+CiW,SAA/C,GAA2D,wBAA3D;AACA,iBAAK1W,QAAL,CAAcS,cAAd,CAA6B,gBAA7B,EAA+CiW,SAA/C,GAA2D,wBAA3D;AACA,iBAAK1W,QAAL,CAAcS,cAAd,CAA6B,gBAA7B,EAA+CiW,SAA/C,GAA2D,wBAA3D;AACA,iBAAK1W,QAAL,CAAcS,cAAd,CAA6B,gBAA7B,EAA+CiW,SAA/C,GAA2D,wBAA3D;AACA,iBAAK1W,QAAL,CAAcS,cAAd,CAA6BgW,QAA7B,EAAuCC,SAAvC,GAAmD,iBAAnD;AACD;;;;;;;yBAnDUJ,e,EAAe,gEAqBN,wDArBM,C,EAqBE,qI,EAAA,yH;AAAA,O;;;cArBjBA,e;AAAe,mC;AAAA;AAAA;;qBAAf,oB;AAAgB,a,EAAA,K,EAAA,+D;;;;;;;;;;ACT7B;;AACM;;AACE;;AAA8B;AAAA;;AAAA;;AAAA,qBAAS,qBAAsC,WAAtC,CAAT;AAA2D,aAA3D;;AAC5B;;AACA;;AAAoD;;;;AAAoD;;AAC1G;;AACA;;AAEE;;AAAsB;;AAA4B;AAAA,qBAAS,IAAAC,WAAA,CAAY,IAAZ,CAAT;AAA0B,aAA1B;;AAA4B;;;;AAAoC;;AAAS;;AAC3H;;AAA4B;;AAA4B;AAAA,qBAAS,IAAAA,WAAA,CAAY,IAAZ,CAAT;AAA0B,aAA1B;;AAA4B;;;;AAAoC;;AAAS;;AACjI;;AAA4B;;AAA4B;AAAA,qBAAS,IAAAA,WAAA,CAAY,IAAZ,CAAT;AAA0B,aAA1B;;AAA4B;;;;AAAoC;;AAAS;;AACjI;;AAA4B;;AAA4B;AAAA,qBAAS,IAAAA,WAAA,CAAY,IAAZ,CAAT;AAA0B,aAA1B;;AAA4B;;;;AAAoC;;AAAS;;AACnI;;AACF;;AACA;;AACE;;AAAqB;;AAAE;;AAA4B;;AAAK;;AAAI;;AAC9D;;AACN;;;;AAb8D;;AAAA;;AAI0B;;AAAA;;AACM;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;;wEDFjFD,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACTvX,oBAAQ,EAAE,YADD;AAETC,uBAAW,EAAE,yBAFJ;AAGTC,qBAAS,EAAE,CAAC,wBAAD;AAHF,W;AAKiB,U;;;;oBAqBb,oD;qBAAO,wD;;;;;;;;AAhBpB8B,kBAAQ;kBADP,0DACO;mBADM,gB,EAAkB,CAAC,QAAD,C;AACxB;;;;;;;;;;;;;;;;;;;AEdV;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAMa4V,sB;;;;;;;;;;;;;;AAEX;;;oCAGUtT,S,EAAqC;AAC7C,yGAAuB,IAAIC,IAAJ,CAASD,SAAT,CAAvB,EAA4C,iCAA5C,EAD6C,CACmC;AAChF;AACD;;;;QARyC,wD;;;wDAA/BsT,sB;AAAsB,O;;;;cAAtBA,sB;AAAsB;;;iIAAtBA,sB;;;;;wEAAAA,sB,EAAsB;gBAHlC,kDAGkC;iBAH7B;AACJpR,gBAAI,EAAE;AADF,W;AAG6B,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGtBqR,U;AAOX;;;AAGA,4BAAoBhT,UAApB,EAA4C;AAAA;;AAAxB,eAAAA,UAAA,GAAAA,UAAA;AARpB,eAAAC,OAAA,GAAU,sEAAYH,UAAtB;AAEA,eAAAmT,KAAA,GAAgB,EAAhB;AAOEjY,iBAAO,CAACC,IAAR,CAAa,yBAAb;AACD;AAED;;;;;;;;;wCAKoB+G,Q,EAAkBkR,U,EAAkB;;;;;;;;;AACtD;AACAlY,6BAAO,CAACC,IAAR,CAAa,yBAAb;AAEIqF,yB,GAAM,KAAKL,OAAL,GAAe,yB;AACrBM,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,gCAAI,CAACV,UAAL,CAAgBuB,GAAhB,CAAoBjB,GAApB,EAAyB;AAAE0B,kCAAQ,EAARA,QAAF;AAAYkR,oCAAU,EAAVA;AAAZ,yBAAzB,EAAmD;AAAEtS,sCAAY,EAAE;AAAhB,yBAAnD,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChBE,iCAAO,CAACC,IAAR,CAAa,4BAAb;AACAwF,iCAAO;AACN,yBALL,WAMS,UAAA3F,QAAQ,EAAI;AACjBE,iCAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC,8BAAIjG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3B9F,mCAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,kCAAM;AACP,2BAHD,MAGO;AACLlC,iCAAK,CAAC,uBAAuBuC,KAAK,CAACE,IAA7B,GAAoC,IAApC,GAA2CF,KAAK,CAACC,OAAlD,CAAL;AACAN,kCAAM;AACP;AACF,yBAhBH;AAiBD,uBAlBa,C;yDAmBPH,O;;;;;;;;;AACR;AAED;;;;;;yCAGqBtD,Q,EAAgB;;;;;;;;;AACnC;AACAjC,6BAAO,CAACC,IAAR,CAAa,sBAAsBgC,QAAtB,GAAiC,OAA9C;AAEIqD,yB,GAAM,KAAKL,OAAL,GAAe,oCAAf,GAAsDhD,Q;AAC5DsD,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,gCAAI,CAACV,UAAL,CAAgBW,IAAhB,CAAqBL,GAArB,EAA0B;AAAEM,sCAAY,EAAE;AAAhB,yBAA1B,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChBE,iCAAO,CAACC,IAAR,CAAa,kCAAb;AACAwF,iCAAO;AACN,yBALL,WAMS,UAAA3F,QAAQ,EAAI;AACjBE,iCAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC,8BAAIjG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3B9F,mCAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,kCAAM;AACP,2BAHD,MAGO;AACLlC,iCAAK,CAAC,uBAAuBuC,KAAK,CAACE,IAA7B,GAAoC,IAApC,GAA2CF,KAAK,CAACC,OAAlD,CAAL;AACAN,kCAAM;AACP;AACF,yBAhBH;AAiBD,uBAlBa,C;yDAmBPH,O;;;;;;;;;AACR;AAED;;;;;;;;kCAKcc,K,EAAepE,Q,EAAkB+E,Q,EAAkBoD,S,EAAmBC,Q,EAAkBE,I,EAAcpH,Q,EAAkB6K,a,EAAsB;;;;;;;;;AAC1JhO,6BAAO,CAACC,IAAR,CAAa,eAAegC,QAAf,GAA0B,OAAvC;AAEIqD,yB,GAAM,KAAKL,OAAL,GAAe,oBAAf,GAAsC+I,a;AAE5CzI,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,gCAAI,CAACV,UAAL,CAAgBW,IAAhB,CAAqBL,GAArB,EAA0B;AAAEe,+BAAK,EAAEA,KAAT;AAAgBpE,kCAAQ,EAAEA,QAA1B;AAAoCmI,mCAAS,EAAEA,SAA/C;AAA0DC,kCAAQ,EAAEA,QAApE;AAA8ErD,kCAAQ,EAAEA,QAAxF;AAAkGuD,8BAAI,EAAEA,IAAxG;AAA8GpH,kCAAQ,EAAEA;AAAxH,yBAA1B,EAA8J;AAAEyC,sCAAY,EAAE;AAAhB,yBAA9J,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB;AACA;AACAE,iCAAO,CAACC,IAAR,CAAa,2BAAb;AACAwF,iCAAO,GAJS,CAKhB;AACC,yBARL,WASS,UAAA3F,QAAQ,EAAI;AACjBE,iCAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC/F,iCAAO,CAACC,IAAR,CAAa,kDAAkD8F,KAAK,CAACC,OAAxD,GAAkE,IAAlE,GAAyED,KAAK,CAACE,IAA5F;;AACA,8BAAInG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BtC,iCAAK,CAAC,8BAAD,CAAL;AACAxD,mCAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,kCAAM;AACP,2BAJD,MAIO;AACLlC,iCAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,kCAAM;AACP;AACF,yBArBH;AAsBD,uBAvBa,C,EAyBd;;AACA1F,6BAAO,CAACC,IAAR,CAAa,wBAAb;yDACOsF,O;;;;;;;;;AACR;AAED;;;;;;qCAGiBvD,I,EAAU;;;;;;;;;AACzBhC,6BAAO,CAACC,IAAR,CAAa,kBAAkB+B,IAAI,CAAC9B,EAAvB,GAA4B,OAAzC;AAEIoF,yB,GAAM,KAAKL,OAAL,GAAe,WAAf,GAA6BjD,IAAI,CAAC9B,E;AAExCqF,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,gCAAI,CAACV,UAAL,CAAgBuB,GAAhB,CAAoBjB,GAApB,EAAyB;AAAEpF,4BAAE,EAAE8B,IAAI,CAAC9B,EAAX;AAAekK,mCAAS,EAAEpI,IAAI,CAACoI,SAA/B;AAA0CC,kCAAQ,EAAErI,IAAI,CAACqI,QAAzD;AAAmEhE,+BAAK,EAAErE,IAAI,CAACqE,KAA/E;AAAsFW,kCAAQ,EAAEhF,IAAI,CAACgF,QAArG;AAA+G7D,kCAAQ,EAAEnB,IAAI,CAACmB;AAA9H,yBAAzB,EAAmK;AAAEyC,sCAAY,EAAE;AAAhB,yBAAnK,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB;AACA;AACAE,iCAAO,CAACC,IAAR,CAAa,2BAAb;AACAwF,iCAAO,GAJS,CAKhB;AACC,yBARL,WASS,UAAA3F,QAAQ,EAAI;AACjBE,iCAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC/F,iCAAO,CAACC,IAAR,CAAa,kDAAkD8F,KAAK,CAACC,OAAxD,GAAkE,IAAlE,GAAyED,KAAK,CAACE,IAA5F;;AACA,8BAAInG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BtC,iCAAK,CAAC,8BAAD,CAAL;AACAxD,mCAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,kCAAM;AACP,2BAJD,MAIO;AACLlC,iCAAK,CAAC,uBAAuBuC,KAAK,CAACC,OAA9B,CAAL;AACAN,kCAAM;AACP;AACF,yBArBH;AAsBD,uBAvBa,C,EAyBd;;AACA1F,6BAAO,CAACC,IAAR,CAAa,2BAAb;yDACOsF,O;;;;;;;;;AACR;AAED;;;;;;kCAGcrF,E,EAAU;;;;;;;;;AACtB;AACAF,6BAAO,CAACC,IAAR,CAAa,uBAAuBC,EAAvB,GAA4B,OAAzC;AAEIoF,yB,GAAM,KAAKL,OAAL,GAAgB,WAAhB,GAA8B/E,E;AACpCqF,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,gCAAI,CAACV,UAAL,CAAgBxF,GAAhB,CAAoB8F,GAApB,EAAyB;AAAEM,sCAAY,EAAE;AAAhB,yBAAzB,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,kCAAI,CAACkC,IAAL,GAAkBlC,QAAlB;AACA2F,iCAAO,CAAC,QAAI,CAACzD,IAAN,CAAP;AACC,yBALL,WAMS,UAAAlC,QAAQ,EAAI;AACjBE,iCAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC,8BAAIjG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3B9F,mCAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,kCAAM;AACP,2BAHD,MAGO;AACLlC,iCAAK,CAAC,uBAAuBuC,KAAK,CAACE,IAA7B,GAAoC,IAApC,GAA2CF,KAAK,CAACC,OAAlD,CAAL;AACAN,kCAAM;AACP;AACF,yBAhBH;AAiBD,uBAlBa,C;yDAmBPH,O;;;;;;;;;AACR;AAED;;;;;;wCAGiB;;;;;;;;;AACf;AACAvF,6BAAO,CAACC,IAAR,CAAa,eAAb;AAEIqF,yB,GAAM,KAAKL,OAAL,GAAgB,W;AACtBM,6B,GAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,gCAAI,CAACV,UAAL,CAAgBxF,GAAhB,CAAoB8F,GAApB,EAAyB;AAAEM,sCAAY,EAAE;AAAhB,yBAAzB,EACGC,SADH,GAEGhG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,kCAAI,CAACmY,KAAL,GAAqBnY,QAArB;AACAE,iCAAO,CAACC,IAAR,CAAa,4BAA4B,QAAI,CAACgY,KAAL,CAAWhV,MAApD;AACAwC,iCAAO,CAAC,QAAI,CAACwS,KAAN,CAAP;AACC,yBANL,WAOS,UAAAnY,QAAQ,EAAI;AACjBE,iCAAO,CAACC,IAAR,CAAa,sBAAsBH,QAAQ,CAACgG,MAA5C;AACA,8BAAIC,KAAK,GAAUjG,QAAQ,CAACiG,KAA5B,CAFiB,CAEkB;;AACnC,8BAAIjG,QAAQ,CAACgG,MAAT,KAAoB,GAAxB,EAA6B;AAC3B9F,mCAAO,CAACC,IAAR,CAAa,8BAAb;AACAyF,kCAAM;AACP,2BAHD,MAGO;AACLlC,iCAAK,CAAC,uBAAuBuC,KAAK,CAACE,IAA7B,GAAoC,IAApC,GAA2CF,KAAK,CAACC,OAAlD,CAAL;AACAN,kCAAM;AACP;AACF,yBAjBH;AAkBD,uBAnBa,C;yDAoBPH,O;;;;;;;;;AACR;;;;;;;yBArNUyS,U,EAAU,uH;AAAA,O;;;eAAVA,U;AAAU,iBAAVA,UAAU,K;AAAA,oBAFT;;;;;wEAEDA,U,EAAU;gBAHtB,wDAGsB;iBAHX;AACVjX,sBAAU,EAAE;AADF,W;AAGW,U;;;;;;;;;;;;;;;;;;;;;;ACTvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAWaoX,e;AAEX;;;AAGA,iCAAoBlX,qBAApB,EAA0EsB,MAA1E,EAAkGrB,kBAAlG,EAA0I;AAAA;;AAAtH,eAAAD,qBAAA,GAAAA,qBAAA;AAAsD,eAAAsB,MAAA,GAAAA,MAAA;AAAwB,eAAArB,kBAAA,GAAAA,kBAAA;AACjG;AAED;;;;;;;qCAGQ;AACN,iBAAKkX,QAAL;AACD;AAED;;;;;;qCAGQ;AAAA;;AACN;AACApY,mBAAO,CAACC,IAAR,CAAa,YAAb;AAEA,iBAAKgB,qBAAL,CAA2BmX,QAA3B,GAAsCvY,IAAtC,CAA2C,UAAAC,QAAQ,EAAI;AACrD;AACAE,qBAAO,CAACC,IAAR,CAAa,cAAuBH,QAAQ,CAACkG,OAA7C;;AACA,sBAAI,CAAC9E,kBAAL,CAAwBG,cAAxB,CAAuCgX,IAAvC,CAA4C,KAA5C;;AACA,sBAAI,CAAC9V,MAAL,CAAY0B,QAAZ,CAAqB,CAAC,EAAD,CAArB;AACD,aALD;AAMD;;;;;;;yBA5BUkU,e,EAAe,uJ,EAAA,uH,EAAA,kJ;AAAA,O;;;cAAfA,e;AAAe,mC;AAAA,gB;AAAA,e;AAAA;AAAA;ACX5B;;AAAG;;AAAU;;;;;;;;wEDWAA,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACThY,oBAAQ,EAAE,YADD;AAETC,uBAAW,EAAE,yBAFJ;AAGTC,qBAAS,EAAE,CAAC,wBAAD;AAHF,W;AAKiB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEX5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCE;;AAAkD;;AAAuB;;AAAS;;AAAK;;AAAE;;AAAiC;;AAAe;;AAAI;;;;;;AAAjD;;AAAA;;AAA8B;;AAAA;;;;;;;;AAsDpH;;AACE;;AAAI;;AAAsB;;AAC1B;;AAAI;;AAAI;;AACR;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAmB;;AACvB;;AAAI;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAoC;;AAAoI;;AAAK;;AAAE;;AAA6E;;AAAe;;AAAI;;AACxR;;;;;;;;AALM;;AAAA;;AAGA;;AAAA;;AACqL;;AAAA;;;;;;AAd7L;;AACA;;AACE;;AACE;;AAAI;;AAAW;;AACf;;AAAI;;AAAM;;AACV;;AAAI;;AAAY;;AAChB;;AAAI;;AAAM;;AACV;;AAAI;;;;AAAqC;;AAC3C;;AACA;;AAOF;;AACA;;;;;;AAVQ;;AAAA;;AAEF;;AAAA;;;;UD1CCiY,uB;AAOX,yCAAoBrZ,oBAApB,EAAwEC,KAAxE,EAAuGC,aAAvG,EAA+JiC,QAA/J,EAAyK;AAAA;;AAArJ,eAAAnC,oBAAA,GAAAA,oBAAA;AAAoD,eAAAC,KAAA,GAAAA,KAAA;AAA+B,eAAAC,aAAA,GAAAA,aAAA;AAAwD,eAAAiC,QAAA,GAAAA,QAAA;AAF/J,eAAA8D,QAAA,GAAsB,EAAtB;AAE4K;;;;qCAEpK;AACN,iBAAK7F,QAAL,GAAgB,KAAKH,KAAL,CAAWI,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,IAAjC,CAAhB;AACA,iBAAKC,SAAL;AACA,iBAAK8Y,WAAL;AACD;AAED;;;;;;sCAGS;AAAA;;AACP,iBAAKtZ,oBAAL,CAA0BW,UAA1B,CAAqC,KAAKP,QAA1C,EAAoDQ,IAApD,CAAyD,UAAAC,QAAQ,EAAI;AACnE,sBAAI,CAACC,MAAL,GAAuBD,QAAvB;AACAE,qBAAO,CAACC,IAAR,CAAa,aAAa,QAAI,CAACF,MAAL,CAAYG,EAAzB,GAA8B,oBAA3C;AACD,aAHD;AAID;AAED;;;;;;qCAGWoF,G,EAAW;AAAA;;AACpB;AAEA,iBAAKnG,aAAL,CAAmBqZ,UAAnB,CAA8B,KAAKnZ,QAAnC,EAA6CiG,GAA7C,EAAkDzF,IAAlD,CAAuD,UAAAC,QAAQ,EAAI;AACjE;AAEA;AACA,sBAAI,CAACyY,WAAL;;AAEA,sBAAI,CAACnX,QAAL,CAAcS,cAAd,CAA6B,mBAA7B,EAAkDC,SAAlD,CAA4DC,MAA5D,CAAmE,cAAnE;AACD,aAPD;AAQD;AAED;;;;;;wCAGW;AAAA;;AACT/B,mBAAO,CAACC,IAAR,CAAa,sBAAb;AAEA,iBAAKd,aAAL,CAAmBoZ,WAAnB,CAA+B,KAAKlZ,QAApC,EAA8CQ,IAA9C,CAAmD,UAAAC,QAAQ,EAAI;AAC7D,sBAAI,CAACoF,QAAL,GAA2BpF,QAA3B;AACD,aAFD;AAGD;AAED;;;;;;wCAGcI,E,EAAU;AAAA;;AACtB;AACA,iBAAKf,aAAL,CAAmBsZ,aAAnB,CAAiC,KAAKpZ,QAAtC,EAAgDa,EAAhD,EAAoDL,IAApD,CAAyD,UAAAC,QAAQ,EAAI;AACnE;AACAE,qBAAO,CAACC,IAAR,CAAa,cAAcC,EAAd,GAAmB,qBAAhC,EAFmE,CAInE;;AACA,sBAAI,CAACqY,WAAL;AACD,aAND;AAOD;;;;;;;yBAhEUD,uB,EAAuB,qJ,EAAA,+H,EAAA,uI,EAAA,gEAO2G,wDAP3G,C;AAOmH,O;;;cAP1IA,uB;AAAuB,4C;AAAA,iB;AAAA,gB;AAAA,unC;AAAA;AAAA;;;ACbpC;;AACE;;AACF;;AAEA;;AACE;;AACA;;AAEE;;AACE;;AACE;;AAAI;;AAA0C;;AAAO;;AAAI;;AACzD;;AAAI;;AAA0C;;AAAmB;;AAAI;;AACrE;;AAAI;;AAA0C;;AAAkB;;AAAI;;AACpE;;AAAI;;AAA0C;;AAAkB;;AAAI;;AACpE;;AAAI;;AAAQ;;AACd;;AACF;;AAEA;;AACE;;AAAI;;AAAQ;;AACZ;;AACA;;AAAG;;AAA+O;;AAA2C;;AAAc;;AAAI;;AAAC;;AAChT;;AACE;;AACE;;AAAQ;AAAA;;AAAA;;AAAA,qBAAS,qBAAmC,cAAnC,CAAT;AAA2D,aAA3D;;AAAuG;;;;AAAqC;;AACtJ;;AAEI;;AACE;;AACE;;AAAI;;;;AAAqC;;AAEzC;;AAQA;;AACE;;AAAkE;AAAA;;AAAA;;AAAA,qBAAS,qBAAmC,cAAnC,CAAT;AAA2D,aAA3D;;AAA6D;;;;AAAgC;;AAC/J;;AAAkD;AAAA;;AAAA;;AAAA,qBAAS,IAAAE,UAAA,WAAT;AAA8B,aAA9B;;AAAgC;;;;AAA6B;;AACjH;;AACF;;AACF;;AACN;;AACA;;AAkBF;;AACF;;AACF;;;;AAjE6B;;AAAA;;AAIJ;;AAAA,+FAAqB,QAArB,EAAqB,MAArB;;AAKV;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAW0G;;AAAA;;AAKrG;;AAAA;;AAW6H;;AAAA;;AAC7C;;AAAA;;AAKzF;;AAAA;;;;;;;;;;wEDjCEF,uB,EAAuB;gBALnC,uDAKmC;iBALzB;AACTnY,oBAAQ,EAAE,qBADD;AAETC,uBAAW,EAAE,kCAFJ;AAGTC,qBAAS,EAAE,CAAC,iCAAD;AAHF,W;AAKyB,U;;;;;;;;;;oBAOoG,oD;qBAAO,wD;;;;;;;;;;;;;;;;;;;;;AEpB/I;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAWaqY,2C;AASX,6DAAoBxZ,KAApB,EAAmDoD,gBAAnD,EAAuF;AAAA;;AAAnE,eAAApD,KAAA,GAAAA,KAAA;AAA+B,eAAAoD,gBAAA,GAAAA,gBAAA;AAAuC;;;;qCAElF;AAAA;;AACN,iBAAKpD,KAAL,CACG0D,WADH,CAEGtB,SAFH,CAEa,UAAAuB,MAAM,EAAI;AACnB,sBAAI,CAACxD,QAAL,GAAgBwD,MAAM,CAAC,WAAD,CAAN,IAAuB,8BAAvC;AACA,sBAAI,CAACkB,IAAL,GAAYlB,MAAM,CAAC,MAAD,CAAN,IAAkB,yBAA9B,CAFmB,CAGnB;;AACA,sBAAI,CAACZ,QAAL,GAAgBY,MAAM,CAAC,UAAD,CAAN,IAAsB,uBAAtC,CAJmB,CAKnB;;AACA7C,qBAAO,CAACC,IAAR,CAAa,uBAAuB,QAAI,CAACZ,QAA5B,GAAuC,IAAvC,GAA8C,QAAI,CAAC0E,IAAnD,GAA0D,IAA1D,GAAiE,QAAI,CAAC9B,QAAnF;AACD,aATH;AAUA,iBAAK0W,8BAAL,CAAoC,KAAKtZ,QAAzC,EAAmD,KAAK0E,IAAxD;AACD;AAED;;;;;;yDAG+B1E,Q,EAAkB0E,I,EAAY;AAAA;;AAC3D,iBAAKzB,gBAAL,CAAsBqW,8BAAtB,CAAqDtZ,QAArD,EAA+D0E,IAA/D,EAAqElE,IAArE,CAA0E,UAAAC,QAAQ,EAAI;AACpF,sBAAI,CAAC8V,UAAL,GAAuC9V,QAAvC;AACA,sBAAI,CAACuD,QAAL,GAAgB,QAAI,CAACuS,UAAL,CAAgBvS,QAAhC;AACA,sBAAI,CAACI,MAAL,GAAc,QAAI,CAACmS,UAAL,CAAgBnS,MAA9B;AACN;;;;;;;;;;AAUM;;AACA,kBAAI,QAAI,CAACmS,UAAL,IAAoB,IAAxB,EAA8B;AAC5B;AACA5V,uBAAO,CAACC,IAAR,CAAa,eAAe,QAAI,CAAC2V,UAAL,CAAgBvS,QAA5C;AACD,eAHD,MAGO;AACLrD,uBAAO,CAACC,IAAR,CAAa,qCAAqC8D,IAArC,GAA4C,IAAzD;AACD;AACF,aArBD;AAsBD;;;;;;;yBAnDU2U,2C,EAA2C,+H,EAAA,6I;AAAA,O;;;cAA3CA,2C;AAA2C,mE;AAAA,iB;AAAA,gB;AAAA,uJ;AAAA;AAAA;ACXxD;;AACE;;AAA2B;;;;AAAiD;;AAC9E;;AAEA;;AAEA;;AACA;;AAAK;;AAAQ;;;;AAAkC;;AAAS;;AAAE;;AAAK;;AAAc;;AAAM;;AACnF;;AACA;;AAAK;;AAAQ;;;;AAAgC;;AAAS;;AAAE;;;;AAAyD;;AACjH;;AAEA;;AACA;;AAAG;;;;AAAoD;;AACvD;;AACA;;AAAG;;AAAyE;;AAAC;;AAAI;;AAAM;;AAAyE;;AAAC;;AAAI;;AAAM;;AAAyE;;AAAC;;AAAI;;AAAM;;AAAyE;;AAAC;;AAAI;;AAAM;;AAA0E;;AAAC;;AAAI;;AACla;;AACA;;;;AAhB6B;;AAAA;;AAMhB;;AAAA;;AAAkD;;AAAA;;AAElD;;AAAA;;AAA+D;;AAAA;;AAIzE;;AAAA;;AAEG;;AAAA;;AAAoF;;AAAA;;AAAoF;;AAAA;;AAAoF;;AAAA;;AAAoF;;AAAA;;;;;;;;;;wEDJzUA,2C,EAA2C;gBANvD,uDAMuD;iBAN7C;AACTvY,oBAAQ,EAAE,4CADD;AAETC,uBAAW,EAAE,yDAFJ;AAGTC,qBAAS,EAAE,CAAC,wDAAD,CAHF;AAITuJ,yBAAa,EAAE,gEAAkBC;AAJxB,W;AAM6C,U;;;;;;;;;;;;;;;;;;;;;;;;AEXxD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAMa+O,e;AAEX;;;AAGA,iCAAsBC,SAAtB,EAA+C;AAAA;;AAAzB,eAAAA,SAAA,GAAAA,SAAA;AAA2B;AAEjD;;;;;;;oCAGiBtX,K,EAAYmI,I,EAAY;AACvC,oBAAQA,IAAR;AACE,mBAAK,MAAL;AAAa,uBAAO,KAAKmP,SAAL,CAAeC,uBAAf,CAAuCvX,KAAvC,CAAP;;AACb,mBAAK,OAAL;AAAc,uBAAO,KAAKsX,SAAL,CAAeE,wBAAf,CAAwCxX,KAAxC,CAAP;;AACd,mBAAK,QAAL;AAAe,uBAAO,KAAKsX,SAAL,CAAeG,yBAAf,CAAyCzX,KAAzC,CAAP;;AACf,mBAAK,KAAL;AAAY,uBAAO,KAAKsX,SAAL,CAAeI,sBAAf,CAAsC1X,KAAtC,CAAP;;AACZ,mBAAK,aAAL;AAAoB,uBAAO,KAAKsX,SAAL,CAAeK,8BAAf,CAA8C3X,KAA9C,CAAP;;AACpB;AAAS,sBAAM,IAAI4X,KAAJ,wCAA0CzP,IAA1C,EAAN;AANX;AAQD;;;;;;;yBAnBUkP,e,EAAe,uI;AAAA,O;;;;cAAfA,e;AAAe;;;;;wEAAfA,e,EAAe;gBAH3B,kDAG2B;iBAHtB;AACJjS,gBAAI,EAAE;AADF,W;AAGsB,U;;;;;;;;;;;;;;;;;;;;;;ACN5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACSE;;AACE;;AACE;;AAAG;;AAAQ;;AAAQ;;AAAU;;AAA2C;;AAC1E;;AACA;;AACE;;AAAG;;AAAqC;;AAAwE;;AAAiB;;AAAI;;AACvI;;AACF;;;;;;AAMM;;AAAyB;;;;AAAoD;;;;;;AAApD;;AAAA;;;;;;AAmP3B;;;;;;;;AAA4E;;;;;;;;AAE5E;;AACE;;AAAqB;;AAAuC;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,sBAAgC,cAAhC,CAAT;AAAwD,WAAxD;;AAA0D;;AAAkB;;AAC1I;;;;;;AACA;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;;;AAEF;;AACE;;;;AAA0F;;AAAyE;;AAAsG;;AAAI;;AAAkB;;AAAG;AAAA;;AAAA;;AAAA;AAAA;;AAAkC;;AAA+G;;AACrb;;;;;;AADE;;AAAA;;AAA6F;;AAAA;;;;;;AAVjG;;AACE;;AAEA;;AAGA;;AAGA;;AAGF;;;;;;AAXO;;AAAA;;AAEF;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;;;;;AAKL;;AACE;;AAAG;;;;AAA6C;;AAClD;;;;AADK;;AAAA;;;;;;AA2BH;;;;;;;;AAAkF;;;;;;AAClF;;AAAkF;;AAAgC;;AAAQ;;AAA+B;;AAAS;;;;;;AAAxC;;AAAA;;;;;;;;AAF5H;;AACE;;AACA;;AAIA;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACN;;AACF;;AAEA;;AACE;;AAAK;;AAA2E;;;;AAA6B;;AAAgD;;AAAI;;AACjK;;AAAK;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA8C;;;;AAAoC;;AAAmD;;AAAI;;AACjJ;;AAAK;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAoC;;;;AAA+B;;AAAkD;;AAAI;;AACnI;;AAEF;;;;;;;;AAfQ;;AAAA;;AACA;;AAAA;;AAQiB;;AAAA;;AACb;;AAAA;;AAAwE;;AAAA;;AAC1B;;AAAA;;AACV;;AAAA;;;;;;;;;;;;;;;;;;;;;SDjTpD;;;UAQayS,gB;AA0BX;;;AAGA,kCAAoBrQ,gBAApB,EAAgEF,kBAAhE,EAAgH5J,oBAAhH,EAAoKqD,gBAApK,EAAkOlB,QAAlO,EAAoP0H,wBAApP,EAAgT7H,qBAAhT,EAA8V;AAAA;;AAA1U,eAAA8H,gBAAA,GAAAA,gBAAA;AAA4C,eAAAF,kBAAA,GAAAA,kBAAA;AAAgD,eAAA5J,oBAAA,GAAAA,oBAAA;AAAoD,eAAAqD,gBAAA,GAAAA,gBAAA;AAA8D,eAAAlB,QAAA,GAAAA,QAAA;AAAkB,eAAA0H,wBAAA,GAAAA,wBAAA;AAA4D,eAAA7H,qBAAA,GAAAA,qBAAA;AARhT,eAAAyN,QAAA,GAA6B,EAA7B;AAQiW;AAEjW;;;;;;;qCAGQ;AACN;AACA,iBAAKjL,MAAL,GAAc,IAAI,qDAAJ,EAAd;AACA,iBAAKuF,cAAL,GAAsB,KAAtB;AAEA,iBAAKqQ,gBAAL;AAEA,iBAAKC,gBAAL,GAAwB,IAAxB;AACA,iBAAKC,kBAAL,GAA0B,KAA1B;AAEA,iBAAKC,eAAL,GAAuB,gBAAvB;AAEA,iBAAKC,eAAL;AACD;AAED;;;;;;4CAGe;AAAA;;AACb,iBAAKxY,qBAAL,CAA2BO,OAA3B,GAAqC3B,IAArC,CAA0C,UAAAC,QAAQ,EAAI;AACpD,sBAAI,CAACkC,IAAL,GAAkBlC,QAAlB;;AAEA,kBAAI,QAAI,CAACkC,IAAL,IAAc,IAAlB,EAAwB;AACtB;AACAhC,uBAAO,CAACC,IAAR,CAAa,eAAe,QAAI,CAAC+B,IAAL,CAAUC,QAAtC;AACD,eAHD,MAGO;AACLjC,uBAAO,CAACkC,KAAR,CAAc,0DAAd;AACD;AACF,aATD;AAUD;AAED;;;;;;yCAGe6B,I,EAAY;AACzB,gBAAI2V,MAAM,GAAG,eAAe3V,IAA5B,CADyB,CAGzB;;AAEA,gBAAI,KAAK3C,QAAL,CAAcS,cAAd,CAA6B6X,MAA7B,EAAqCnR,KAArC,CAA2CoR,OAA3C,KAAuD,MAA3D,EAAmE;AACjE,mBAAKvY,QAAL,CAAcS,cAAd,CAA6B6X,MAA7B,EAAqCnR,KAArC,CAA2CoR,OAA3C,GAAqD,OAArD;AACD,aAFD,MAEO;AACL,mBAAKvY,QAAL,CAAcS,cAAd,CAA6B6X,MAA7B,EAAqCnR,KAArC,CAA2CoR,OAA3C,GAAqD,MAArD;AACD;AACF;AAED;;;;;;uDAG0B;AAAA;;AACxB3Z,mBAAO,CAACC,IAAR,CAAa,iCAAiC,KAAKZ,QAAnD,EADwB,CAExB;;AACA,iBAAKiD,gBAAL,CAAsBqM,0BAAtB,CAAiD,KAAKtP,QAAtD,EAAgE,CAAhE,EAAmE,GAAnE,EAAwEQ,IAAxE,CAA6E,UAAAC,QAAQ,EAAI;AACvF,sBAAI,CAAC4O,QAAL,GAAkC5O,QAAlC,CADuF,CAEvF;;AAEA,sBAAI,CAAC8Z,UAAL;AACD,aALD;AAMD;AAED;;;;;;uCAGa;AACT,gBAAI,KAAKlL,QAAL,IAAkB,IAAlB,IAA0B,KAAKA,QAAL,CAAczL,MAAd,GAAuB,CAArD,EAAwD;AACtDjD,qBAAO,CAACC,IAAR,CAAa,0CAA0C,KAAKyO,QAAL,CAAczL,MAArE;AAEA,mBAAK7B,QAAL,CAAcS,cAAd,CAA6B,gBAA7B,EAA+C0G,KAA/C,CAAqDoR,OAArD,GAA+D,MAA/D;AACA,mBAAKvY,QAAL,CAAcS,cAAd,CAA6B,UAA7B,EAAyC0G,KAAzC,CAA+CoR,OAA/C,GAAyD,MAAzD;AACA,mBAAKvY,QAAL,CAAcS,cAAd,CAA6B,gBAA7B,EAA+C0G,KAA/C,CAAqDoR,OAArD,GAA+D,MAA/D;AACA,mBAAKvY,QAAL,CAAcS,cAAd,CAA6B,aAA7B,EAA4C0G,KAA5C,CAAkDoR,OAAlD,GAA4D,OAA5D,CANsD,CAMe;;AACrE,mBAAKvY,QAAL,CAAcS,cAAd,CAA6B,oBAA7B,EAAmD0G,KAAnD,CAAyDoR,OAAzD,GAAmE,MAAnE;AACA,mBAAKvY,QAAL,CAAcS,cAAd,CAA6B,yBAA7B,EAAwD0G,KAAxD,CAA8DoR,OAA9D,GAAwE,MAAxE;AACD,aATD,MASO;AACL3Z,qBAAO,CAACC,IAAR,CAAa,yCAAb;AAEA,mBAAKmB,QAAL,CAAcS,cAAd,CAA6B,gBAA7B,EAA+C0G,KAA/C,CAAqDoR,OAArD,GAA+D,MAA/D;AACA,mBAAKvY,QAAL,CAAcS,cAAd,CAA6B,UAA7B,EAAyC0G,KAAzC,CAA+CoR,OAA/C,GAAyD,MAAzD;AACA,mBAAKvY,QAAL,CAAcS,cAAd,CAA6B,gBAA7B,EAA+C0G,KAA/C,CAAqDoR,OAArD,GAA+D,MAA/D;AACA,mBAAKvY,QAAL,CAAcS,cAAd,CAA6B,aAA7B,EAA4C0G,KAA5C,CAAkDoR,OAAlD,GAA4D,MAA5D;AACA,mBAAKvY,QAAL,CAAcS,cAAd,CAA6B,oBAA7B,EAAmD0G,KAAnD,CAAyDoR,OAAzD,GAAmE,MAAnE;AACA,mBAAKvY,QAAL,CAAcS,cAAd,CAA6B,yBAA7B,EAAwD0G,KAAxD,CAA8DoR,OAA9D,GAAwE,MAAxE;AACD;AACJ;AAED;;;;;;wCAGc1Z,I,EAAY;AACxB;AACA,iBAAK4Z,gBAAL,CAAsB5Z,IAAtB;AACD;AAED;;;;;;sCAGS;AACP;AACA,iBAAK4Z,gBAAL,CAAsB,KAAKC,YAA3B;AACD;AAED;;;;;;oCAGUC,I,EAAc5C,Q,EAAgB;AAAA;;AACtC;AAEA,gBAAI,KAAK9X,QAAL,KAAkB,IAAtB,EAA4B;AAC1BmE,mBAAK,CAAC,yCAAD,CAAL;AACA;AACD,aANqC,CAQtC;;;AACA,iBAAKlB,gBAAL,CAAsB0X,iBAAtB,CAAwCD,IAAxC,EAA8C5C,QAA9C,EAAwD,KAAK9X,QAA7D,EAAuEQ,IAAvE,CAA4E,UAAAC,QAAQ,EAAI;AACtF;AACA;AACAE,qBAAO,CAACC,IAAR,CAAa,yBAAb;AACAuD,mBAAK,CAAC,iCAAD,CAAL;;AAEA,sBAAI,CAACmL,0BAAL;AACD,aAPD;AAQD;AAED;;;;;;2CAGiBtD,K,EAAe4O,Q,EAAkBC,S,EAAmBC,O,EAAe;AAClF;AACA,iBAAKN,gBAAL,CAAsBxO,KAAK,GAAG,GAAR,GAAc4O,QAAd,GAAyB,GAAzB,GAA+BC,SAA/B,GAA2C,GAA3C,GAAiDC,OAAvE;AACD;AAED;;;;;;;wCAIcC,I,EAAcnY,Q,EAAkB+E,Q,EAAkBqT,c,EAAsB;AAAA;;AACpF,gBAAI,KAAKhb,QAAL,KAAkB,IAAtB,EAA4B;AAC1BmE,mBAAK,CAAC,yCAAD,CAAL;AACA;AACD,aAJmF,CAMpF;;;AACA,gBAAI8T,oBAAoB,GAAG,KAAKxO,wBAAL,CAA8B+D,OAA9B,CAAsC,eAAe5K,QAAf,GAA0B,aAA1B,GAA0C+E,QAAhF,EAA0FqT,cAA1F,CAA3B;AACA,iBAAK/X,gBAAL,CAAsBgY,yBAAtB,CAAgDF,IAAhD,EAAsD9C,oBAAtD,EAA4E,SAA5E,EAAuF,KAAKjY,QAA5F,EAAsGQ,IAAtG,CAA2G,UAAAC,QAAQ,EAAI;AACrH;AACA;AACAE,qBAAO,CAACC,IAAR,CAAa,iCAAb;AACAuD,mBAAK,CAAC,oCAAD,CAAL;;AAEA,sBAAI,CAACmL,0BAAL;AACD,aAPD;AAQD;AAED;;;;;;uCAGahI,I,EAAcN,K,EAAekU,W,EAAqBC,O,EAAe;AAC5E;AACA,iBAAKX,gBAAL,CAAsBlT,IAAI,GAAG,GAAP,GAAaN,KAAb,GAAqB,GAArB,GAA2BkU,WAA3B,GAAyC,GAAzC,GAA+CC,OAArE;AACD;AAED;;;;;;8CAGiB;AAAA;;AACf,gBAAI,KAAKnb,QAAL,KAAkB,IAAtB,EAA4B;AAC1BmE,mBAAK,CAAC,yCAAD,CAAL;AACA;AACD,aAJc,CAMf;;;AACA,iBAAKlB,gBAAL,CAAsBmY,0BAAtB,CAAiD,6BAAjD,EAAgF,KAAKC,qBAArF,EAA4G,KAAKrb,QAAjH,EAA2HQ,IAA3H,CAAgI,UAAAC,QAAQ,EAAI;AAC1I;AACA;AACAE,qBAAO,CAACC,IAAR,CAAa,mCAAb;AACAuD,mBAAK,CAAC,sCAAD,CAAL;;AAEA,sBAAI,CAACmL,0BAAL;AACD,aAPD;AAQD;AAED;;;;;;sCAGYtD,K,EAAa;AACvB;AACA,iBAAKwO,gBAAL,CAAsBxO,KAAK,GAAG,GAAR,GAAc,KAAKsP,0BAAnB,GAAgD,GAAhD,GAAsD,KAAKC,0BAAjF,EAFuB,CAIvB;;AACJ;;;;;;;;;;;;AAYG;AAED;;;;;;8CAGoBlR,I,EAAY;AAC9B;AACA,iBAAKtI,QAAL,CAAcS,cAAd,CAA6B,KAAK2X,eAAlC,EAAmDjR,KAAnD,CAAyDoR,OAAzD,GAAmE,MAAnE;AACA,iBAAKH,eAAL,GAAuB9P,IAAvB;AACA,iBAAKtI,QAAL,CAAcS,cAAd,CAA6B,KAAK2X,eAAlC,EAAmDjR,KAAnD,CAAyDoR,OAAzD,GAAmE,MAAnE;AACD;AAED;;;;;;mCAGM;AACJ;AACA,iBAAKC,UAAL;AACD;AAED;;;;;;2CAGc;AACZ;AACA,iBAAKN,gBAAL,GAAwB,KAAxB;AACA,iBAAKC,kBAAL,GAA0B,IAA1B;AAEA,iBAAKnY,QAAL,CAAcS,cAAd,CAA6B,gBAA7B,EAA+C0G,KAA/C,CAAqDoR,OAArD,GAA+D,MAA/D;AACA,iBAAKvY,QAAL,CAAcS,cAAd,CAA6B,UAA7B,EAAyC0G,KAAzC,CAA+CoR,OAA/C,GAAyD,MAAzD;AACA,iBAAKvY,QAAL,CAAcS,cAAd,CAA6B,gBAA7B,EAA+C0G,KAA/C,CAAqDoR,OAArD,GAA+D,MAA/D;AACA,iBAAKvY,QAAL,CAAcS,cAAd,CAA6B,aAA7B,EAA4C0G,KAA5C,CAAkDoR,OAAlD,GAA4D,MAA5D;AACA,iBAAKvY,QAAL,CAAcS,cAAd,CAA6B,oBAA7B,EAAmD0G,KAAnD,CAAyDoR,OAAzD,GAAmE,MAAnE;AACA,iBAAKvY,QAAL,CAAcS,cAAd,CAA6B,yBAA7B,EAAwD0G,KAAxD,CAA8DoR,OAA9D,GAAwE,MAAxE;AAEJ;;;;;;;;;;;;;;;;;AAiBG;AAED;;;;;;yCAGY;AACV,gBAAI,KAAKJ,kBAAT,EAA6B;AAC3B;AACA,mBAAKD,gBAAL,GAAwB,IAAxB;AACA,mBAAKC,kBAAL,GAA0B,KAA1B;AAEA,mBAAKnY,QAAL,CAAcS,cAAd,CAA6B,gBAA7B,EAA+C0G,KAA/C,CAAqDoR,OAArD,GAA+D,MAA/D;AACA,mBAAKvY,QAAL,CAAcS,cAAd,CAA6B,UAA7B,EAAyC0G,KAAzC,CAA+CoR,OAA/C,GAAyD,MAAzD;AACA,mBAAKvY,QAAL,CAAcS,cAAd,CAA6B,gBAA7B,EAA+C0G,KAA/C,CAAqDoR,OAArD,GAA+D,MAA/D;AAEA,mBAAKvY,QAAL,CAAcS,cAAd,CAA6B,UAA7B,EAAyCC,SAAzC,CAAmDC,MAAnD,CAA0D,oBAA1D;AACA,mBAAKX,QAAL,CAAcS,cAAd,CAA6B,QAA7B,EAAuCC,SAAvC,CAAiDC,MAAjD,CAAwD,kBAAxD;AACD,aAXD,MAWO,CACL;AACD;AACF;AAED;;;;;;6CAGgB;AAAA;;AACd,iBAAK1C,QAAL,GAAgB,IAAhB;AAEA,iBAAKJ,oBAAL,CAA0Boa,gBAA1B,GAA6CxZ,IAA7C,CAAkD,UAAAC,QAAQ,EAAI;AAC5D,sBAAI,CAAC+a,aAAL,GAA8B/a,QAA9B;;AACA,kBAAI,QAAI,CAAC+a,aAAL,IAAsB,IAA1B,EAAgC;AAC9B,wBAAI,CAACxb,QAAL,GAAgB,QAAI,CAACwb,aAAL,CAAmB3a,EAAnC;;AACA,wBAAI,CAACyO,0BAAL;AACD,eAHD,MAGO;AACL3O,uBAAO,CAACc,IAAR,CAAa,kCAAb;AACA,wBAAI,CAACM,QAAL,CAAcS,cAAd,CAA6B,qBAA7B,EAAoD0G,KAApD,CAA0DoR,OAA1D,GAAoE,OAApE,CAFK,CAEwE;AAC9E;AACF,aATD;AAUD;AAED;;;;;;sCAGYtW,Q,EAAgB;AAAA;;AAC1B,gBAAI,KAAKhE,QAAL,KAAkB,IAAtB,EAA4B;AAC1BmE,mBAAK,CAAC,yCAAD,CAAL;AACA;AACD,aAJyB,CAM1B;;;AAEA,gBAAIH,QAAQ,CAACJ,MAAT,KAAoB,CAAxB,EAA2B;AACzBO,mBAAK,CAAC,mCAAD,CAAL;AACA;AACD;;AAED,iBAAKwF,cAAL,GAAsB,KAAtB;AAEA,gBAAI7F,QAAQ,GAAG,KAAK4F,gBAAL,CAAsBM,WAArC;AAEA,iBAAKR,kBAAL,CAAwBK,WAAxB,CAAoC7F,QAApC,EAA8C,IAA9C,EAAoD,KAAKhE,QAAzD,EAAmE8D,QAAnE,EAA6EtD,IAA7E,CAAkF,UAAAC,QAAQ,EAAI;AAC5F,sBAAI,CAAC2D,MAAL,GAAsB3D,QAAtB;AACA,sBAAI,CAACkJ,cAAL,GAAsB,IAAtB,CAF4F,CAG5F;AACD,aAJD;AAKD;AAED;;;;;;2CAGiBkO,W,EAAmB;AAAA;;AAClC,gBAAI,KAAK7X,QAAL,KAAkB,IAAtB,EAA4B;AAC1BmE,mBAAK,CAAC,yCAAD,CAAL;AACA;AACD,aAJiC,CAMlC;;;AACA,iBAAKlB,gBAAL,CAAsBwY,yBAAtB,CAAgD5D,WAAhD,EAA6D,KAAK7X,QAAlE,EAA4EQ,IAA5E,CAAiF,UAAAC,QAAQ,EAAI;AAC3F;AACA;AACAE,qBAAO,CAACC,IAAR,CAAa,iCAAb;AACAuD,mBAAK,CAAC,yCAAD,CAAL;;AAEA,sBAAI,CAACmL,0BAAL;AACD,aAPD;AAQD;AAED;;;;;;+CAGqB5K,I,EAAY;AAC/B,iBAAKgX,cAAL,GAAsBhX,IAAtB,CAD+B,CAG/B;;AAEA,iBAAKiX,cAAL,CAAoBjX,IAApB;AACA,iBAAK3C,QAAL,CAAcS,cAAd,CAA6B,kBAA7B,EAAiDC,SAAjD,CAA2DC,MAA3D,CAAkE,cAAlE;AACD;AAED;;;;;;;oCAIUsE,K,EAAa;AACrB;AACA,iBAAKjF,QAAL,CAAcS,cAAd,CAA6B,kBAA7B,EAAiDC,SAAjD,CAA2DC,MAA3D,CAAkE,cAAlE;AAEA,iBAAKO,gBAAL,CAAsB2Y,+BAAtB,CAAsD,KAAK5b,QAA3D,EAAqE,KAAK0b,cAA1E,EAA0F1U,KAA1F,EAAiGxG,IAAjG,CAAsG,UAAAC,QAAQ,EAAI;AAChHE,qBAAO,CAACC,IAAR,CAAa,mDAAb,EADgH,CAEhH;AACD,aAHD;AAID;AAED;;;;;;qCAGW8D,I,EAAY;AAAA;;AACrB;AAEA,iBAAKzB,gBAAL,CAAsBsM,gBAAtB,CAAuC,KAAKvP,QAA5C,EAAsD0E,IAAtD,EAA4DlE,IAA5D,CAAiE,UAAAC,QAAQ,EAAI;AAC3E;AACAE,qBAAO,CAACC,IAAR,CAAa,kBAAkB8D,IAAlB,GAAyB,qBAAtC,EAF2E,CAI3E;;AACA,sBAAI,CAACN,MAAL,CAAY,QAAZ,IAAwB,IAAxB;AACA,sBAAI,CAACuF,cAAL,GAAsB,KAAtB,CAN2E,CAQ3E;;AACA,sBAAI,CAAC2F,0BAAL;AACD,aAVD;AAWD;AAED;;;;;;wCAGc3H,Q,EAAgB;AAC5BxD,iBAAK,CAAC,uBAAuB,KAAKsF,wBAAL,CAA8BS,OAA9B,CAAsC,KAAK9F,MAAL,CAAYA,MAAlD,EAA0DuD,QAA1D,CAAxB,CAAL;AACA,iBAAK5F,QAAL,CAAcS,cAAd,CAA6B,WAA7B,EAA0CN,KAA1C,GAAkD,EAAlD;AACA,iBAAKH,QAAL,CAAcS,cAAd,CAA6B,gBAA7B,EAA+CC,SAA/C,CAAyDC,MAAzD,CAAgE,cAAhE;AACD;AAED;;;;;;qCAGQ;AACN,gBAAIyH,YAAY,GAAqBpI,QAAQ,CAACS,cAAT,CAAwB,WAAxB,CAArC;AACA,gBAAI4H,CAAC,GAAqBrI,QAAQ,CAACS,cAAT,CAAwB,UAAxB,CAA1B;;AACA,gBAAI2H,YAAY,CAACE,IAAb,KAAsB,UAA1B,EAAsC;AACpCF,0BAAY,CAACE,IAAb,GAAoB,MAApB;AACAD,eAAC,CAACE,GAAF,GAAQ,gCAAR;AACD,aAHD,MAGO;AACLH,0BAAY,CAACE,IAAb,GAAoB,UAApB;AACAD,eAAC,CAACE,GAAF,GAAQ,yBAAR;AACD;AACF;;;;;;;yBAzbUyP,gB,EAAgB,qI,EAAA,kJ,EAAA,qJ,EAAA,6I,EAAA,gEA6BqL,wDA7BrL,C,EA6B6L,8J,EAAA,uJ;AAAA,O;;;cA7B7MA,gB;AAAgB,qC;AAAA,kB;AAAA,iB;AAAA,g3K;AAAA;AAAA;;;AChB7B;;AAIE;;AAUA;;AACE;;AACE;;AACE;;AACA;;AAAiB;;AAA2I;;AAC5J;;AACE;;AACA;;AAAI;;AAAO;;AACX;;AAAI;;AAA6B;;AACjC;;AAAI;;AAAuB;;AAC3B;;AAAI;;AAAc;;AAClB;;AAAI;;AAAmD;;AACvD;;AAAI;;AAAsB;;AAC1B;;AAAI;;AAAG;;AACP;;AACF;;AACA;;AAAiB;;AAAoF;;AACrG;;AAAiB;;AAAQ;AAAA,qBAAS,IAAA8B,cAAA,EAAT;AAAyB,aAAzB;;AAAqE;;;;AAA0C;;AAAS;;AACnJ;;AACF;;AACF;;AAGA;;AACE;;AAA6C;AAAA,qBAAS,IAAAC,YAAA,EAAT;AAAuB,aAAvB;;AAAyB;;;;AAA6B;;AAAU;;AAAE;;AAA+B;AAAA,qBAAS,IAAAD,cAAA,EAAT;AAAyB,aAAzB;;AAA2B;;;;AAA+B;;AAC1M;;AAGA;;AACE;;AACM;;AAAkG;AAAA,qBAAU,IAAAE,mBAAA,qBAAV;AAAkD,aAAlD;;AAC9F;;AAA+B;;;;AAAmC;;AAClE;;AAA0B;;;;AAAmC;;AAC7D;;AAA0B;;;;AAA2C;;AAErE;;AAA8B;;;;AAAgD;;AAE9E;;AAAmC;;;;AAAuC;;AAC1E;;AAA4B;;;;AAAgC;;AAChE;;AAGA;;AACE;;AACE;;AAAI;;AAAI;;;;AAAoH;;AAAK;;AACjI;;AAAI;;AACF;;AAAwD;AAAA,qBAAS,IAAAC,MAAA,EAAT;AAAiB,aAAjB;;AAAiC;;;;AAAgC;;AACzH;;AACA;;AAAwD;AAAA;;AAAA;;AAAA,qBAAS,IAAAC,aAAA,WAAT;AAAuC,aAAvC;;AAAuD;;;;AAA+B;;AAChJ;;AAAK;;AACP;;AACF;;AAGA;;AACE;;AACE;;AAAI;;AAClB;;AACG;AAAA;AAAA;;AAeD;;AACY;;AAAK;;AACL;;AAAI;;AACF;;AAAwD;AAAA,qBAAS,IAAAD,MAAA,EAAT;AAAiB,aAAjB;;AAAiC;;;;AAAgC;;AACzH;;AACA;;AAAwD;AAAA,qBAAS,IAAAE,SAAA,EAAT;AAAoB,aAApB;;AAAoC;;;;AAA+B;;AAC7H;;AAAK;;AACP;;AACF;;AAGA;;AACE;;AACE;;AAAI;;AAAI;;AAAoG;;AAAK;;AACjH;;AAAI;;AAAI;;;;AAA6H;;AAAK;;AAC1I;;AAAI;;AACF;;AAAwD;AAAA,qBAAS,IAAAF,MAAA,EAAT;AAAiB,aAAjB;;AAAiC;;;;AAAgC;;AACzH;;AACA;;AAAwD;AAAA;;AAAA;;AAAA;;AAAA,qBAAS,IAAAG,SAAA,sBAAT;AAA0D,aAA1D;;AAA0E;;;;AAA+B;;AACnK;;AAAK;;AACP;;AACF;;AAGA;;AACE;;AACE;;AAAI;;AAAI;;AAAuG;;AAAK;;AACpH;;AAAI;;AAAI;;AAAqG;;AAAK;;AAClH;;AAAI;;AAAI;;AAA2G;;AAAK;;AACxH;;AAAI;;AAAI;;AAAuG;;AAAK;;AACpH;;AAAI;;AACF;;AAAwD;AAAA,qBAAS,IAAAH,MAAA,EAAT;AAAiB,aAAjB;;AAAiC;;;;AAAgC;;AACzH;;AACA;;AAAwD;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,qBAAS,IAAAI,gBAAA,6CAAT;AAAkI,aAAlI;;AAAkJ;;;;AAA+B;;AAC3O;;AAAK;;AACP;;AACF;;AAGA;;AACE;;AACE;;AAAI;;AAAI;;AAAkG;;AAAK;;AAC/G;;AAAI;;AAAI;;;;AAAgI;;AAAK;;AAC7I;;AAAI;;AAAI;;;;AAA4H;;AAAK;;AACzI;;AAAI;;AAAI;;AAAmI;;AAAK;;AAChJ;;AAAI;;AACF;;AAAwD;AAAA,qBAAS,IAAAJ,MAAA,EAAT;AAAiB,aAAjB;;AAAiC;;;;AAAgC;;AACzH;;AACA;;AAAwD;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,qBAAS,IAAAK,aAAA,gDAAT;AAAgI,aAAhI;;AAAgJ;;;;AAA+B;;AACzO;;AAAK;;AACP;;AACF;;AAGA;;AACE;;AACE;;AAAI;;AAAI;;AAAwG;;AAAK;;AACrH;;AAAI;;AAAI;;AAA4F;;AAAK;;AACzG;;AAAI;;AAAI;;AAAyG;;AAAK;;AACtH;;AAAI;;AAAI;;AAA+F;;AAAK;;AAC5G;;AAAI;;AACF;;AAAwD;AAAA,qBAAS,IAAAL,MAAA,EAAT;AAAiB,aAAjB;;AAAiC;;;;AAAgC;;AACzH;;AACA;;AAAwD;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,qBAAS,IAAAM,YAAA,gDAAT;AAAqH,aAArH;;AAAqI;;;;AAA+B;;AAC9N;;AAAK;;AACP;;AACF;;AAGA;;AACE;;AACE;;AAAI;;AAClB;;AACG;AAAA;AAAA;;AAeD;;AACY;;AAAK;;AACL;;AAAI;;AACF;;AAAwD;AAAA,qBAAS,IAAAN,MAAA,EAAT;AAAiB,aAAjB;;AAAiC;;;;AAAgC;;AACzH;;AACA;;AAAwD;AAAA,qBAAS,IAAAO,iBAAA,EAAT;AAA4B,aAA5B;;AAA4C;;;;AAA+B;;AACrI;;AAAK;;AACP;;AACF;;AAGA;;AACE;;AACE;;AAAI;;AAAI;;;;AAA2H;;AAAK;;AACxI;;AAAI;;AACF;;AAAI;;;;AAA4C;;AAChE;;AACG;AAAA;AAAA;;AAeD;;AACY;;AAAK;;AACL;;AAAI;;AACF;;AAAI;;;;AAA4C;;AAChE;;AACG;AAAA;AAAA;;AAeD;;AACa;;AAAK;;AACN;;AAAI;;AACF;;AAAwD;AAAA,qBAAS,IAAAP,MAAA,EAAT;AAAiB,aAAjB;;AAAiC;;;;AAAgC;;AACzH;;AACA;;AAAwD;AAAA;;AAAA;;AAAA,qBAAS,IAAAQ,WAAA,YAAT;AAAyC,aAAzC;;AAAyD;;;;AAA+B;;AAClJ;;AAAK;;AACP;;AACF;;AACN;;AACF;;AAIA;;AACE;;AACE;;AACE;;AAAqD;AAAA;;AAAA;;AAAA,qBAAiB,IAAA3S,WAAA,YAAjB;AAA4C,aAA5C;;;;AAArD;;AAMA;;AAAQ;AAAA;;AAAA;;AAAA,qBAAS,IAAAA,WAAA,YAAT;AAAoC,aAApC;;AACN;;AACF;;AACF;;AACF;;AACF;;AAEA;;AAEE;;AAcA;;AAIA;;AACE;;AACE;;AAAI;;;;AAAwC;;AAC5C;;AAAiB;;AAAiD;;AAClE;;AACE;;AAAkG;AAAA;;AAAA;;AAAA,qBAAiB,IAAAoF,aAAA,YAAjB;AAA+C,aAA/C;;;;AAAlG;;AACA;;AAAmB;AAAA,qBAAQ,IAAAC,QAAA,EAAR;AAAkB,aAAlB;;AACjB;;AACF;;AACF;;AACA;;AACE;;AAAkE;AAAA;;AAAA;;AAAA,qBAAS,sBAAgC,cAAhC,CAAT;AAAwD,aAAxD;;AAA0D;;;;AAAgC;;AAC5J;;AAAkD;AAAA;;AAAA;;AAAA,qBAAS,IAAAD,aAAA,YAAT;AAAuC,aAAvC;;AAAyC;;AAAO;;AACpG;;AACF;;AACF;;AACF;;AAGA;;AACE;;AACE;;AAAQ;AAAA,qBAAS,IAAA4M,cAAA,EAAT;AAAyB,aAAzB;;AAAqE;;;;AAA0C;;AACzH;;AACA;;AAiBF;;AAEE;;AACE;;AACE;;AAAI;;;;AAA8B;;AAClC;;AAAiB;;AAAqE;;AACtF;;AACE;;AAA0D;AAAA;;AAAA;;AAAA,qBAAiB,IAAAY,SAAA,YAAjB;AAAuC,aAAvC;;AAA1D;;AACF;;AACA;;AACE;;AAAkE;AAAA;;AAAA;;AAAA,qBAAS,sBAAkC,cAAlC,CAAT;AAA0D,aAA1D;;AAA4D;;;;AAAgC;;AAC9J;;AAAkD;AAAA;;AAAA;;AAAA,qBAAS,IAAAA,SAAA,YAAT;AAA+B,aAA/B;;AAAiC;;;;AAA+B;;AACpH;;AACF;;AACF;;AAEF;;AACE;;AACE;;AAAqC;;;;AAAgD;;AAEvF;;AACF;;AAWF;;;;AAzVO;;AAAA;;AAaK;;AAAA;;AAc0F;;AAAA;;AAO5B;;AAAA;;AAAmG;;AAAA;;AAOhI;;AAAA;;AACL;;AAAA;;AACA;;AAAA;;AAEI;;AAAA;;AAEK;;AAAA;;AACP;;AAAA;;AAM6C;;AAAA;;AAEkB;;AAAA;;AAEsB;;AAAA;;AAU5H;;AAAA,kGAA0B,MAA1B,EAA0B,gJAA1B;;AAkBsG;;AAAA;;AAEG;;AAAA;;AAShB;;AAAA;;AAEa;;AAAA;;AAEyC;;AAAA;;AAazC;;AAAA;;AAEiH;;AAAA;;AAS1H;;AAAA;;AACA;;AAAA;;AAGS;;AAAA;;AAE+G;;AAAA;;AAa/G;;AAAA;;AAEoG;;AAAA;;AAU1M;;AAAA,2GAAmC,MAAnC,EAAmC,gJAAnC;;AAkBsG;;AAAA;;AAEW;;AAAA;;AAQzB;;AAAA;;AAEvE;;AAAA;;AAEjB;;AAAA,gHAAwC,MAAxC,EAAwC,gJAAxC;;AAkBiB;;AAAA;;AAEjB;;AAAA,gHAAwC,MAAxC,EAAwC,gJAAxC;;AAkBsG;;AAAA;;AAEwB;;AAAA;;AAYtB;;AAAA;;AAetF;;AAAA;;AAcG;;AAAA;;AAMZ;;AAAA;;AAG+C;;AAAA;;AAM2E;;AAAA;;AAUnD;;AAAA;;AAE1E;;AAAA;;AAqBG;;AAAA;;AAM4H;;AAAA;;AAC3C;;AAAA;;AAOpF;;AAAA;;AAAkC;;AAAA;;;;;;;;;;;wED/T9B1C,gB,EAAgB;gBAN5B,uDAM4B;iBANlB;AACTjZ,oBAAQ,EAAE,cADD;AAETC,uBAAW,EAAE,2BAFJ;AAGTC,qBAAS,EAAE,CAAC,0BAAD,CAHF;AAITuJ,yBAAa,EAAE,gEAAkBC;AAJxB,W;AAMkB,U;;;;;;;;;;;;oBA6B8K,oD;qBAAO,wD;;;;;;;;;;;;;;;;;;;;;;;;;AElDloCA,UAAMkS,MAAM,GAAW,CACrB;AAAEC,YAAI,EAAE,EAAR;AAAYC,iBAAS,EAAE;AAAvB,OADqB,EAErB;AAAED,YAAI,EAAE,KAAR;AAAeC,iBAAS,EAAE;AAA1B,OAFqB,EAGrB;AAAED,YAAI,EAAE,KAAR;AAAeC,iBAAS,EAAE;AAA1B,OAHqB,EAIrB;AAAED,YAAI,EAAE,yBAAR;AAAmCC,iBAAS,EAAE;AAA9C,OAJqB,EAKrB;AAAED,YAAI,EAAE,OAAR;AAAiBC,iBAAS,EAAE;AAA5B,OALqB,EAMrB;AAAED,YAAI,EAAE,iBAAR;AAA2BC,iBAAS,EAAE;AAAtC,OANqB,EAOrB;AAAED,YAAI,EAAE,gBAAR;AAA0BC,iBAAS,EAAE;AAArC,OAPqB,EAQrB;AAAED,YAAI,EAAE,QAAR;AAAkBC,iBAAS,EAAE;AAA7B,OARqB,EASrB;AAAED,YAAI,EAAE,iBAAR;AAA2BC,iBAAS,EAAE;AAAtC,OATqB,EAUrB;AAAED,YAAI,EAAE,WAAR;AAAqBC,iBAAS,EAAE;AAAhC,OAVqB,EAWrB;AAAED,YAAI,EAAE,UAAR;AAAoBC,iBAAS,EAAE;AAA/B,OAXqB,EAYrB;AAAED,YAAI,EAAE,YAAR;AAAsBC,iBAAS,EAAE;AAAjC,OAZqB,EAarB;AAAED,YAAI,EAAE,YAAR;AAAsBC,iBAAS,EAAE;AAAjC,OAbqB,EAcrB;AAAED,YAAI,EAAE,gBAAR;AAA0BC,iBAAS,EAAE;AAArC,OAdqB,EAerB;AAAED,YAAI,EAAE,oBAAR;AAA8BC,iBAAS,EAAE;AAAzC,OAfqB,EAgBrB;AAAED,YAAI,EAAE,qBAAR;AAA+BC,iBAAS,EAAE;AAA1C,OAhBqB,EAiBrB;AAAED,YAAI,EAAE,8BAAR;AAAwCC,iBAAS,EAAE;AAAnD,OAjBqB,EAkBrB;AAAED,YAAI,EAAE,+CAAR;AAAyDC,iBAAS,EAAE;AAApE,OAlBqB,EAmBrB;AAAED,YAAI,EAAE,qBAAR;AAA+BC,iBAAS,EAAE;AAA1C,OAnBqB,EAoBrB;AAAED,YAAI,EAAE,gBAAR;AAA0BC,iBAAS,EAAE;AAArC,OApBqB,EAqBrB;AAAED,YAAI,EAAE,sBAAR;AAAgCC,iBAAS,EAAE;AAA3C,OArBqB,EAsBrB;AAAED,YAAI,EAAE,uBAAR;AAAiCC,iBAAS,EAAE;AAA5C,OAtBqB,EAuBrB;AAAED,YAAI,EAAE,iCAAR;AAA2CC,iBAAS,EAAE;AAAtD,OAvBqB,EAwBrB;AAAED,YAAI,EAAE,iBAAR;AAA2BC,iBAAS,EAAE;AAAtC,OAxBqB,EAyBrB;AAAED,YAAI,EAAE,2BAAR;AAAqCC,iBAAS,EAAE;AAAhD,OAzBqB,EA0BrB;AAAED,YAAI,EAAE,uBAAR;AAAiCC,iBAAS,EAAE;AAA5C,OA1BqB,EA2BrB;AAAED,YAAI,EAAE,kBAAR;AAA4BC,iBAAS,EAAE;AAAvC,OA3BqB,EA4BrB;AAAED,YAAI,EAAE,KAAR;AAAeC,iBAAS,EAAE;AAA1B,OA5BqB,EA6BrB;AAAED,YAAI,EAAE,2BAAR;AAAqCC,iBAAS,EAAE;AAAhD,OA7BqB,EA8BrB;AAAED,YAAI,EAAE,qCAAR;AAA+CC,iBAAS,EAAE;AAA1D,OA9BqB,EA+BrB;AAAED,YAAI,EAAE,gDAAR;AAA0DC,iBAAS,EAAE;AAArE,OA/BqB,EAgCrB;AAAED,YAAI,EAAE,mDAAR;AAA6DC,iBAAS,EAAE;AAAxE,OAhCqB,EAiCrB;AAAED,YAAI,EAAE,yCAAR;AAAmDC,iBAAS,EAAE;AAA9D,OAjCqB,EAkCrB;AAAED,YAAI,EAAE,aAAR;AAAuBC,iBAAS,EAAE;AAAlC,OAlCqB,EAmCrB;AAAED,YAAI,EAAE,gBAAR;AAA0BC,iBAAS,EAAE;AAArC,OAnCqB,EAoCrB;AAAED,YAAI,EAAE,aAAR;AAAuBC,iBAAS,EAAE;AAAlC,OApCqB,EAqCrB;AAAED,YAAI,EAAE,IAAR;AAAcC,iBAAS,EAAE;AAAzB,OArCqB,CAAvB;;UA6CaC,gB;;;;;cAAAA;;;;2BAAAA,gB;AAAgB,S;AAAA,kBAJlB,CAAC,6DAAa1L,OAAb,CAAqBuL,MAArB,EAA6B;AAAEI,iBAAO,EAAE;AAAX,SAA7B,CAAD,CAIkB,EAFjB,4DAEiB;;;;4HAAhBD,gB,EAAgB;AAAA;AAAA,oBAFjB,4DAEiB;AAAA,S;AAFL,O;;;;;wEAEXA,gB,EAAgB;gBAL5B,sDAK4B;iBALnB;AACRpL,mBAAO,EAAE,CAAC,6DAAaN,OAAb,CAAqBuL,MAArB,EAA6B;AAAEI,qBAAO,EAAE;AAAX,aAA7B,CAAD,CADD;AAER;AACAC,mBAAO,EAAE,CAAC,4DAAD;AAHD,W;AAKmB,U;;;;;;;;;;;;;;;;;;ACjF7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACEE;;AACE;;AAEA;;AAAkB;;;;AAA2C;;AAC/D;;;;AADoB;;AAAA;;;;;;AASlB;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;;;;;;;AANJ;;AACE;;AAAY;;AAA2C;;AAEvD;;AAAkB;;;;AAAiC;;AAEnD;;AAIA;;AACE;;;;AACA;;AACA;;AACE;;AAAgG;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;;AAAhG;;AACA;;AAAmB;AAAA;;AAAA;;AAAA;AAAA;;AACjB;;AACF;;AACF;;AACF;;AAEA;;AACE;;AAAmF;;;;AAAyC;;AAC5H;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA2G;;;;AAAiC;;AACtJ;;AACF;;;;;;AArBoB;;AAAA;;AAED;;AAAA;;AAKuD;;AAAA;;AAAiD;;AAGtE;;AAAA;;AAQF;;AAAA;;AAAoC;;AAAA;;AACgC;;AAAA;;;;UDrB5GC,c;AAiBX;;;AAGA,gCAAoBpb,qBAApB,EAA0EsB,MAA1E,EAAkGrD,KAAlG,EAAiIgC,kBAAjI,EAAyK;AAAA;;AAArJ,eAAAD,qBAAA,GAAAA,qBAAA;AAAsD,eAAAsB,MAAA,GAAAA,MAAA;AAAwB,eAAArD,KAAA,GAAAA,KAAA;AAA+B,eAAAgC,kBAAA,GAAAA,kBAAA,CAAwC,CAlBzK;;AACA,eAAA6C,IAAA,GAAe,IAAf,CAiByK,CAfzK;;AACA,eAAAV,QAAA,GAAmB,IAAnB,CAcyK,CAZzK;;AACA,eAAA2C,OAAA,GAAkB,IAAlB,CAWyK,CATzK;;AACA,eAAAxD,QAAA,GAAmB,IAAnB,CAQyK,CANzK;;AACA,eAAAP,QAAA,GAAmB,IAAnB;AAMEjC,iBAAO,CAACC,IAAR,CAAa,6BAAb;AACD;AAED;;;;;;;qCAGQ;AAAA;;AACN,iBAAKf,KAAL,CACG0D,WADH,CAEGtB,SAFH,CAEa,UAAAuB,MAAM,EAAI;AACnB,sBAAI,CAACkB,IAAL,GAAYlB,MAAM,CAAC,sBAAD,CAAN,IAAkC,IAA9C,CADmB,CAEnB;;AAEA,sBAAI,CAACQ,QAAL,GAAgBR,MAAM,CAAC,UAAD,CAAN,IAAsB,IAAtC;AAEA,sBAAI,CAACmD,OAAL,GAAenD,MAAM,CAAC,SAAD,CAAN,IAAqB,IAApC;;AAEA,kBAAI,QAAI,CAACkB,IAAL,IAAa,IAAjB,EAAuB;AACrB/D,uBAAO,CAACC,IAAR,CAAa,8BAA8B,QAAI,CAAC8D,IAAhD,EADqB,CAErB;AACD;;AAED,sBAAI,CAACvB,QAAL,GAAgBK,MAAM,CAAC,OAAD,CAAN,IAAmB,IAAnC;;AACA,kBAAI,QAAI,CAACL,QAAL,IAAiB,IAArB,EAA2B;AACzB,wBAAI,CAAC8Z,eAAL;AACD;;AAED,sBAAI,CAACra,QAAL,GAAgBY,MAAM,CAAC,UAAD,CAAN,IAAsB,IAAtC;;AACA,kBAAI,QAAI,CAACZ,QAAL,IAAiB,IAArB,EAA2B;AACzBjC,uBAAO,CAACC,IAAR,CAAa,wBAAwB,QAAI,CAACgC,QAA1C;AACD;AACF,aAxBH;AAyBD;AAED;;;;;;4CAGkB;AAAA;;AAChB;AACA,iBAAKhB,qBAAL,CAA2Bqb,eAA3B,CAA2C,KAAK9Z,QAAhD,EAA0D3C,IAA1D,CAA+D,UAAAmT,WAAW,EAAI;AAC5EhT,qBAAO,CAACC,IAAR,CAAa,wBAAwB+S,WAAW,CAAC/Q,QAAjD;;AACA,sBAAI,CAACM,MAAL,CAAY0B,QAAZ,CAAqB,CAAC,YAAD,CAArB;AACD,aAHD;AAID;AAED;;;;;;;;kCAKQhC,Q,EAAkB+E,Q,EAAgB;AAAA;;AACxC;AACAhH,mBAAO,CAACC,IAAR,CAAa,WAAb;;AAEA,gBAAIgC,QAAQ,CAACgB,MAAT,KAAoB,CAAxB,EAA2B;AACzBO,mBAAK,CAAC,yBAAD,CAAL;AACA;AACD;;AAED,iBAAKvC,qBAAL,CAA2Bsb,OAA3B,CAAmCta,QAAnC,EAA6C+E,QAA7C,EAAuDnH,IAAvD,CAA4D,UAAAmT,WAAW,EAAI;AACzE;AACAhT,qBAAO,CAACC,IAAR,CAAa,wBAAwB+S,WAAW,CAAC/Q,QAAjD;;AACA,sBAAI,CAACf,kBAAL,CAAwBG,cAAxB,CAAuCgX,IAAvC,CAA4C,IAA5C;;AAEA,kBAAIpW,QAAQ,KAAK+Q,WAAW,CAAC/Q,QAA7B,EAAuC;AACnCuB,qBAAK,CAAC,iCAAiCwP,WAAW,CAAC/Q,QAA7C,GAAwD,0DAAxD,GAAqHA,QAArH,GAAgI,OAAjI,CAAL;AACH;;AAED,kBAAI,QAAI,CAAC8B,IAAL,IAAa,IAAjB,EAAuB;AACrB,wBAAI,CAACxB,MAAL,CAAY0B,QAAZ,CAAqB,CAAC,kBAAD,CAArB,EAA2C;AAACrB,6BAAW,EAAE;AAAC,4BAAQ,QAAI,CAACmB;AAAd;AAAd,iBAA3C;AACD,eAFD,MAEO,IAAI,QAAI,CAACV,QAAL,IAAiB,IAArB,EAA2B;AAChC;AACArD,uBAAO,CAACC,IAAR,CAAa,mBAAmB,QAAI,CAACoD,QAAxB,GAAmC,6BAAnC,GAAmE2P,WAAW,CAAC/Q,QAA/E,GAA0F,OAAvG;;AACA,wBAAI,CAACM,MAAL,CAAY0B,QAAZ,CAAqB,CAAC,MAAD,CAArB,EAA+B;AAACrB,6BAAW,EAAE;AAAC,yBAAK,QAAI,CAACS;AAAX;AAAd,iBAA/B;AACD,eAJM,MAIA;AACL;AACA,oBAAI2P,WAAW,CAACwJ,KAAZ,CAAkB,CAAlB,MAAyB,YAA7B,EAA2C;AACzC,0BAAI,CAACja,MAAL,CAAY0B,QAAZ,CAAqB,CAAC,YAAD,CAArB;AACD,iBAFD,MAEO;AACL,0BAAI,CAAC1B,MAAL,CAAY0B,QAAZ,CAAqB,CAAC,YAAD,CAArB,EADK,CACiC;;AACvC;AACF;AACF,aAvBD;AAwBD;AAED;;;;;;qCAGW;AACT,gBAAIuF,YAAY,GAAqBpI,QAAQ,CAACS,cAAT,CAAwB,UAAxB,CAArC;AACA,gBAAI4H,CAAC,GAAqBrI,QAAQ,CAACS,cAAT,CAAwB,UAAxB,CAA1B;;AACA,gBAAI2H,YAAY,CAACE,IAAb,KAAsB,UAA1B,EAAsC;AACpCF,0BAAY,CAACE,IAAb,GAAoB,MAApB;AACAD,eAAC,CAACE,GAAF,GAAQ,gCAAR;AACD,aAHD,MAGO;AACLH,0BAAY,CAACE,IAAb,GAAoB,UAApB;AACAD,eAAC,CAACE,GAAF,GAAQ,yBAAR;AACD;AACF;;;;;;;yBAvHU0S,c,EAAc,uJ,EAAA,uH,EAAA,+H,EAAA,kJ;AAAA,O;;;cAAdA,c;AAAc,kC;AAAA,gB;AAAA,e;AAAA,wuB;AAAA;AAAA;ACV3B;;AAEE;;AAOA;;AAyBF;;;;AAhC4B;;AAAA;;AAOA;;AAAA;;;;;;;;;;wEDCfA,c,EAAc;gBAL1B,uDAK0B;iBALhB;AACTlc,oBAAQ,EAAE,WADD;AAETC,uBAAW,EAAE,wBAFJ;AAGTC,qBAAS,EAAE,CAAC,uBAAD;AAHF,W;AAKgB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEV3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC8CU;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAHJ;;AACE;;AACA;;AAGA;;AACA;;AACA;;AACE;;AACF;;AACA;;AACA;;AACA;;AACE;;AAAgD;;AAAgB;;AAClE;;AACA;;AACA;;AACA;;AAAoB;;AAAmB;;AACvC;;AACA;;AACA;;AAAoB;;AAAe;;AACnC;;AACA;;AACA;;AAAG;;AAAyC;;AAAqE;;AAAI;;AACrH;;AACF;;;;;;AAvBiC;;AAAA;;AAM7B;;AAAA;;AAKiB;;AAAA;;AAA+B;;AAAA;;AAI9B;;AAAA;;AAGA;;AAAA;;AAGd;;AAAA;;;;UD1DHoc,Y;AAIX,8BAAoB1S,UAApB,EAA4C;AAAA;;AAAxB,eAAAA,UAAA,GAAAA,UAAA;AAFpB,eAAAkO,KAAA,GAAgB,EAAhB;AAE+C;AAE/C;;;;;;;qCAGQ;AACN,iBAAKyE,WAAL;AACD;AAED;;;;;;wCAGW;AAAA;;AACT,iBAAK3S,UAAL,CAAgB2S,WAAhB,GAA8B7c,IAA9B,CAAmC,UAAAC,QAAQ,EAAI;AAC7C,sBAAI,CAACmY,KAAL,GAAqBnY,QAArB;AACAE,qBAAO,CAACC,IAAR,CAAa,6BAAb;AACD,aAHD;AAID;;;;;;;yBArBUwc,Y,EAAY,iI;AAAA,O;;;cAAZA,Y;AAAY,gC;AAAA,iB;AAAA,gB;AAAA,wb;AAAA;AAAA;ACTzB;;AACE;;AAA2B;;AAA8B;;AAC3D;;AAEA;;AACE;;AAiBE;;AAWE;;AAA+B;;;;AAAyC;;AACxE;;AAAK;;AAAM;;AACX;;AACE;;AACE;;AAAI;;;;AAA6C;;AACjD;;AAAI;;;;AAAsC;;AAC1C;;AAAI;;AAAM;;AACV;;AAAI;;;;AAAkC;;AACtC;;AAAI;;;;AAAkC;;AACtC;;AAAI;;;;AAAqC;;AAC3C;;AACA;;AA0BF;;AACF;;AACF;;AACF;;;;AAxCqC;;AAAA;;AAIvB;;AAAA;;AACA;;AAAA;;AAEA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAEF;;AAAA;;;;;;;;;;wEDnCCA,Y,EAAY;gBALxB,uDAKwB;iBALd;AACTtc,oBAAQ,EAAE,SADD;AAETC,uBAAW,EAAE,sBAFJ;AAGTC,qBAAS,EAAE,CAAC,qBAAD;AAHF,W;AAKc,U;;;;;;;;;;;;;;;;;;;;;;AETzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAMasc,kB;AAIX;;;AAGA,oCAAc;AAAA;;AALP,aAAAtb,cAAA,GAA2C,IAAI,oDAAJ,CAA6B,KAA7B,CAA3C;AAKU,O;;;yBAPNsb,kB;AAAkB,O;;;eAAlBA,kB;AAAkB,iBAAlBA,kBAAkB,K;AAAA,oBAFjB;;;;;wEAEDA,kB,EAAkB;gBAH9B,wDAG8B;iBAHnB;AACV5b,sBAAU,EAAE;AADF,W;AAGmB,U;;;;;;;;;;;;;;;;;;;;ACN/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,UAAI,sEAAY8D,UAAhB,EAA4B;AAC1B;AACD;;AAED,kFAAyB+X,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,eAAI7c,OAAO,CAAC+F,KAAR,CAAc8W,GAAd,CAAJ;AAAA,OADZ;;;;;;;;;;;;;;;ACVA,eAASC,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOvX,OAAO,CAACC,OAAR,GAAkB5F,IAAlB,CAAuB,YAAW;AACxC,cAAIgE,CAAC,GAAG,IAAIsV,KAAJ,CAAU,yBAAyB4D,GAAzB,GAA+B,GAAzC,CAAR;AACAlZ,WAAC,CAACoC,IAAF,GAAS,kBAAT;AACA,gBAAMpC,CAAN;AACA,SAJM,CAAP;AAKA;;AACDiZ,8BAAwB,CAACE,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAF,8BAAwB,CAACrX,OAAzB,GAAmCqX,wBAAnC;AACAG,YAAM,CAACb,OAAP,GAAiBU,wBAAjB;AACAA,8BAAwB,CAAC5c,EAAzB,GAA8B,MAA9B","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Context } from '../models/context';\nimport { Webhook } from '../models/webhook';\nimport { WebhookRequest } from '../models/webhook-request';\nimport { ConfigurationService } from \"../services/configuration.service\";\nimport { DomainService } from \"../services/domain.service\";\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-domain-webhook-deliveries',\n  templateUrl: './domain-webhook-deliveries.component.html',\n  styleUrls: ['./domain-webhook-deliveries.component.css']\n})\nexport class DomainWebhookDeliveriesComponent implements OnInit {\n\n  domainId: string;\n  domain: Context;\n  webhookId: string;\n\n  requests: WebhookRequest[] = [];\n\n  constructor(private configurationService: ConfigurationService, private route: ActivatedRoute, private domainService: DomainService) { }\n\n  ngOnInit(): void {\n    this.domainId = this.route.snapshot.paramMap.get(\"id\");\n    this.getDomain();\n    this.webhookId = this.route.snapshot.paramMap.get(\"whid\");\n\n    this.getWebhookRequests();\n  }\n\n  /**\n   * Get domain\n   */\n  getDomain(): void {\n    this.configurationService.getContext(this.domainId).then(response => {\n      this.domain = <Context>response;\n      console.info(\"Domain '\" + this.domain.id + \"' has been loaded.\");\n    });\n  }\n\n  /**\n   * Get all webhook requests of a particular webhook\n   */\n  getWebhookRequests(): void {\n    console.info(\"Get all webhook requests ...\");\n\n    this.domainService.getWebhookRequests(this.domainId, this.webhookId).then(response => {\n      this.requests = <WebhookRequest[]>response;\n    });\n  }\n\n}\n","<div class=\"sub-header\">\n  <p class=\"font-weight-600\" *ngIf=\"domain != null\"><a href=\"/#/dashboard\">Dashboard</a> / <a href=\"/#/domain/{{domainId}}\">{{domain.name}}</a></p>\n</div>\n\n<main class=\"align-center\">\n  <app-domain-navigation [domainId]=\"domainId\" [pageId]=\"'NULL'\"></app-domain-navigation>\n  <div class=\"content p-24 justify-center\">\n\n    <div id=\"settings-navigation\" style=\"float: left; margin-right: 30px; padding: 20px; background-color: var(--white-grey);\">\n      <ul>\n        <li><a href=\"/#/domain/{{domainId}}/settings\">General</a></li>\n        <li><a href=\"/#/domain/{{domainId}}/settings\">Index Configuration</a></li>\n        <li><a href=\"/#/domain/{{domainId}}/settings\">Mail Configuration</a></li>\n        <li><a href=\"/#/domain/{{domainId}}/settings\">IMAP Configuration</a></li>\n        <li><a href=\"/#/domain/{{domainId}}/settings/webhooks\">Webhooks</a></li>\n      </ul>\n    </div>\n\n    <div class=\"container\">\n      <h2>Webhook Deliveries</h2>\n      <br/>\n\n      <div *ngIf=\"requests.length == 0\">\n        <p>No requests have been delivered yet.</p>\n        <br/>\n        <p>As soon as an expert will answer a question a webhook request will be triggered and the delivery will be displayed here.</p>\n        <br/>\n        <p> Also please check whether the webhook is active/enabled.</p>\n      </div>\n\n      <div *ngIf=\"requests.length > 0\">\n      <table id=\"webhook-list\" border=\"1\" width=\"100%\">\n        <tr>\n          <th>Date/Time</th>\n          <th>Status Code</th>\n        </tr>\n        <tr *ngFor=\"let request of requests.reverse()\">\n          <td>{{request.sentAt | epochHumanReadable }}</td>\n          <td>{{request.statusCode}}</td>\n        </tr>\n      </table>\n      </div>\n    </div>\n  </div>\n</main>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilService {\n\n  constructor() { }\n\n  /**\n   * Linkify plain text\n   * @param plainText Plain text, e.g. 'Please see https://ukatie.com'\n   * @return linkified text, e.g. 'Please see <a href=\"https://ukatie.com\">https://ukatie.com</a>'\n   */\n  public linkify(plainText): string{\n    let replacedText;\n    let replacePattern1;\n    let replacePattern2;\n    let replacePattern3;\n\n    if (!plainText.includes(\"<a href=\")) { // TODO: Only create links for URLs which are not linked yet\n      // URLs starting with http://, https://, or ftp://\n      replacePattern1 = /(\\b(https?|ftp):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/gim;\n      replacedText = plainText.replace(replacePattern1, '<a href=\"$1\" target=\"_blank\">$1</a>');\n\n      // URLs starting with \"www.\" (without // before it, or it'd re-link the ones done above).\n      replacePattern2 = /(^|[^\\/])(www\\.[\\S]+(\\b|$))/gim;\n      replacedText = replacedText.replace(replacePattern2, '$1<a href=\"http://$2\" target=\"_blank\">$2</a>');\n\n      // Change email addresses to mailto:: links.\n      replacePattern3 = /(([a-zA-Z0-9\\-\\_\\.])+@[a-zA-Z\\_]+?(\\.[a-zA-Z]{2,6})+)/gim;\n      replacedText = replacedText.replace(replacePattern3, '<a href=\"mailto:$1\">$1</a>');\n    } else {\n      console.warn(\"Text already contains a link, therefore URL(s) will not be replaced by link: \" + plainText);\n      return plainText;\n    }\n\n    return replacedText;\n  }\n\n}\n","import { Component, OnInit, HostListener, ElementRef, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { AuthenticationService } from \"../../services/authentication.service\";\nimport { User } from '../../models/user';\nimport { DataSharingService } from '../../services/data-sharing.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  user: User;\n  isUserLoggedIn: boolean;\n\n  @HostListener('document:click', ['$event'])\n  clickout(event) {\n    if(this.eRef.nativeElement.contains(event.target)) {\n      //console.info(\"clicked inside header component: \" + event.target);\n      if (event.target.id != \"image-profile\" && this.document.getElementById('account_dd').classList.contains('opened-dd')) {\n        console.info(\"Close modal.\");\n        this.document.getElementById('account_dd').classList.toggle('opened-dd');\n      }\n    } else {\n      //console.info(\"clicked outside header component\");\n      if (this.document.getElementById('account_dd') != null && this.document.getElementById('account_dd').classList.contains('opened-dd')) {\n        console.info(\"Close modal.\");\n        this.document.getElementById('account_dd').classList.toggle('opened-dd');\n      }\n    }\n  }\n\n  /**\n   *\n   */\n  constructor(private authenticationService: AuthenticationService, private dataSharingService: DataSharingService, private eRef: ElementRef, @Inject(DOCUMENT) private document) {\n        this.dataSharingService.isUserLoggedIn.subscribe( value => {\n            this.isUserLoggedIn = value;\n\n            this.getUser();\n        });\n  }\n\n  /**\n   *\n   */\n  ngOnInit(): void {\n  }\n\n  /**\n   * Get user object of signed in user\n   */\n  getUser(): void {\n    this.authenticationService.getUser().then(response => {\n      this.user = <User>response;\n\n      if (this.user !=  null) {\n        //alert(\"DEBUG: HeaderComponent.getUser(): Username: \" + this.user.username);\n        console.info(\"Username: \" + this.user.username);\n      } else {\n        console.debug(\"HeaderComponent#getUser(): User not signed in!\");\n      }\n    });\n  }\n\n}\n","<header>\n      <div class=\"main-header\">\n\n        <a [routerLink]=\"['/']\"><img src=\"assets/img/logo.svg\" style=\"height:2.5rem;\" alt=\"Logo of Katie\"></a>\n\n        <div class=\"account\" *ngIf=\"user === null\">\n          <button [routerLink]=\"['/login']\" class=\"fw-600 bg-blue white solid-button\">{{ 'katie.sign_in' | translate }}</button>\n        </div>\n        <div class=\"\" *ngIf=\"user != null\">\n          <button id=\"button-profile\" class=\"icon\" (click)=\"account_dd.classList.toggle('opened-dd');\">\n            <img id=\"image-profile\" src=\"assets/img/profile_icon.svg\" alt=\"profile icon\">\n          </button>\n          <div id=\"account_dd\" #account_dd class=\"p-24 dd-content closed-dd\">\n            <p class=\"dark-grey\" *ngIf=\"user != null\">{{ user.username }}</p>\n            <hr>\n            <a *ngIf=\"user != null && user.myKatieId != null\" class=\"blue text-button\" [routerLink]=\"['/my-katie']\">My Katie</a>\n            <a *ngIf=\"user != null && user.myKatieId == null\" href=\"mailto:contact@wyona.com?subject=Request My Katie\">Request My Katie</a>\n            <br/><br/>\n            <a class=\"blue text-button\" [routerLink]=\"['/dashboard']\">{{ 'katie.dashboard' | translate }}</a>\n            <br/><br/>\n            <a *ngIf=\"user != null\" class=\"blue text-button\" [routerLink]=\"['/iam/profile/edit']\">{{ 'katie.manage_my_account' | translate }}</a>\n            <hr>\n            <a class=\"blue text-button\" [routerLink]=\"['/logout']\">{{ 'katie.sign_out' | translate }}</a>\n          </div>\n        </div>\n      </div>\n</header>\n","/**\n *\n */\nexport class FaqQuestion {\n  public uuid: string;\n  public question: string;\n  public answer: string;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { QuestionsService } from \"../services/questions.service\";\nimport { DomainService } from \"../services/domain.service\";\nimport { FaqTopic } from \"../models/faq_topic\";\nimport { Context } from '../models/context';\nimport { ConfigurationService } from \"../services/configuration.service\";\n\ndeclare var tinymce: any;\n\n@Component({\n  selector: 'app-add-qna',\n  templateUrl: './add-qna.component.html',\n  styleUrls: ['./add-qna.component.css']\n})\nexport class AddQnaComponent implements OnInit {\n\n  tinymce_content: string;\n\n  domainId: string;\n  domain: Context;\n\n  subQuestion: string;\n  jwtToken: string = null;\n\n  faqLanguages: string[] = [];\n  topics: FaqTopic[] = [];\n  KATIE_NO_TOPIC_SELECTED: string = \"KATIE_NO_TOPIC_SELECTED\";\n\n  /**\n   *\n   */\n  constructor(private route: ActivatedRoute, private questionsService: QuestionsService, private router: Router, private domainService: DomainService, private configurationService: ConfigurationService) { }\n\n  /**\n   *\n   */\n  ngOnInit(): void {\n    //tinymce.init({selector: \"#tinymce4answer\"});\n\n    this.route\n      .queryParams\n      .subscribe(params => {\n        this.subQuestion = params['q'] || null;\n        this.jwtToken = params['token'] || null;\n      });\n\n    this.domainId = this.route.snapshot.paramMap.get(\"domainid\");\n    this.getDomain();\n\n    this.getFAQLanguagesAndTopics();\n  }\n\n  /**\n   *\n   */\n  getDomain(): void {\n    this.configurationService.getContext(this.domainId).then(response => {\n      this.domain = <Context>response;\n      console.info(\"Domain '\" + this.domain.id + \"' has been loaded.\");\n    });\n  }\n\n  /**\n   *\n   */\n  getFAQLanguagesAndTopics() {\n    console.info(\"Get FAQ languages and topics of domain '\" + this.domainId + \"' ...\");\n    this.domainService.getFAQLanguages(this.domainId).then(response => {\n      this.faqLanguages = <string[]>response;\n      console.info(\"Number of FAQ languages: \" + this.faqLanguages.length);\n\n      if (this.faqLanguages.length > 0) {\n        this.getFAQTopics(this.domainId, this.faqLanguages[0]);\n      }\n    });\n  }\n\n  /**\n   *\n   */\n  getFAQTopics(domainId: string, language: string) {\n    this.domainService.getFAQ(domainId, language, true).then(response => {\n      this.topics = <FaqTopic[]>response;\n      console.info(\"All \" + this.topics.length + \" FAQ topics of domain '\" + domainId + \"' have been loaded.\");\n    });\n  }\n\n  /**\n   * Reload FAQ topics for a particular language\n   */\n  reloadFAQTopics(language: string) {\n    //alert(\"DEBUG: Reload FAQ topics for language '\" + language + \"' ...\");\n    console.info(\"DEBUG: Reload FAQ topics for language '\" + language + \"' ...\");\n    this.getFAQTopics(this.domainId, language);\n  }\n\n  /**\n   *\n   * @param faqLanguage FAQ language, e.g. \"de\"\n   * @param faqTopicId FAQ topic Id, e.g. \"slack_integration\" or \"legal\"\n   */\n  addQnA(question: string, faqLanguage: string, faqTopicId: string): void {\n    if (question == null || (question != null && question.length == 0)) {\n      alert(\"WARNING: Please make sure to enter a question!\");\n      return;\n    }\n\n    var answer = this.tinymce_content;\n\n    // INFO: Because of a race condition we have to remove tinymce manually, whereas see https://stackoverflow.com/questions/33278834/getting-ns-error-unexpected-while-using-tinymce-in-mozilla and https://ittone.ma/ittone/javascript-import-tinymce-explicitly-in-angular-tinymce-angular/\n    try {\n      tinymce.remove(\"#tinymce4answer\");\n    } catch(e) {\n      alert(\"ERROR: \" + e);\n    }\n\n    console.info(\"Add QnA: \" + question + \" | \" + answer);\n\n    this.questionsService.addQnA(question, answer, this.domainId, this.jwtToken).then(response => {\n      var uuid = response;\n      console.info(\"New QnA has been saved: \" + uuid);\n\n      console.info(\"Selected FAQ topic Id: \" + faqTopicId);\n      if (faqTopicId != this.KATIE_NO_TOPIC_SELECTED) {\n        console.info(\"Add QnA to FAQ topic '\" + faqTopicId + \"' ...\");\n        this.domainService.addQnAtoFAQ(this.domainId, faqLanguage, faqTopicId, uuid).then(response => {\n          //alert(\"DEBUG: QnA added successfully.\");\n          console.info(\"QnA added successfully.\");\n        });\n      }\n\n      this.router.navigate(['/trained-questions-answers/' + this.domainId]);\n    });\n  }\n\n}\n","<div class=\"sub-header\">\n  <p *ngIf=\"domain != null\" class=\"font-weight-600\">{{ 'katie.add_qna_to_domain' | translate }} <a href=\"/#/domain/{{domainId}}/qna\">{{domain.name}}</a></p>\n</div>\n\n<main class=\"align-center\">\n  <div class=\"content p-24 justify-center\">\n    <div class=\"container\">\n      <div>\n      <p><input class=\"form-field mt-12\" type=\"text\" size=\"50\" #_question id=\"question\" name=\"question\" value=\"{{subQuestion}}\" placeholder=\"{{ 'katie.question' | translate }}\"/></p>\n      <br/>\n<editor id=\"tinymce4answer\" outputFormat=\"html\"\n   [(ngModel)]=\"tinymce_content\"\n   [init]=\"{\n     base_url: '/tinymce',\n     suffix: '.min',\n     height: 300,\n     entity_encoding: 'raw',\n     menubar: false,\n     plugins: [\n       'advlist autolink lists link image charmap print preview anchor',\n       'searchreplace visualblocks code fullscreen',\n       'insertdatetime media table paste code help wordcount'\n     ],\n     toolbar:\n       'undo redo | formatselect | bold italic backcolor | link | \\\n       bullist numlist outdent indent | code | help'\n   }\"\n ></editor>\n\n          <div id=\"add_qna_to_faq\" [ngClass]=\"{ 'add_qna_to_faq_visible': faqLanguages.length > 0, 'add_qna_to_faq_not_visible': faqLanguages.length == 0}\"> <!-- INFO: Hide with CSS when there are no FAQ languages, because ngIf does not work, because faq_language.value and faq_topic.value will not be available further down -->\n            <br/><br/>\n            <!-- TODO: See how plus sign is used by Trello + {{ 'katie.add_qna_to_faq' | translate }}: -->\n            {{ 'katie.add_qna_to_faq' | translate }}:\n            &#160;\n            <select class=\"form-field mt-48\" #faq_language name=\"faq_language\" id=\"faq_language\" (change)=\"reloadFAQTopics(faq_language.value)\">\n              <option *ngFor=\"let language of faqLanguages\" value=\"{{language}}\">{{language}}</option>\n            </select>\n            &#160;\n            <!-- TODO: Reload topic names when language is switched -->\n            <select class=\"form-field mt-48\" #faq_topic name=\"faq_topic\" id=\"faq_topic\">\n              <option selected=\"true\" value=\"{{KATIE_NO_TOPIC_SELECTED}}\">Select Topic ...</option>\n              <option *ngFor=\"let topic of topics\" value=\"{{topic.id}}\">{{topic.title}}</option>\n            </select>\n          </div>\n\n<br/>\n\n      <button class=\"fw-600 bg-blue white solid-button mt-24\" (click)=\"addQnA(_question.value, faq_language.value, faq_topic.value)\" type=\"button\">{{ 'katie.add_qna' | translate }}</button>\n      </div>\n    </div>\n  </div>\n\n</main>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ConfigurationService } from \"../services/configuration.service\";\nimport { KatieVersion } from \"../models/katie_version\";\nimport { AuthenticationService } from \"../services/authentication.service\";\nimport { User } from '../models/user'\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  // INFO: Question submitted as URL query string\n  question: string = null;\n  katieVersion: KatieVersion;\n\n  user: User;\n  isUserSignedIn: boolean;\n\n  constructor(private router: Router, private route: ActivatedRoute, private configurationService: ConfigurationService, private authenticationService: AuthenticationService) {\n    console.info(\"HomeComponent: Loading Home component ...\");\n  }\n\n  /**\n   *\n   */\n  ngOnInit(): void {\n    this.getKatieVersion();\n\n    this.getUser();\n\n    this.route\n      .queryParams\n      .subscribe(params => {\n        this.question = params['q'] || null;\n\n        if (this.question != null) {\n          console.info(\"Question as query parameter: \" + this.question);\n          //alert(\"Question as query parameter: \" + this.question);\n\n          this.submitQuestion(this.question);\n        }\n      });\n  }\n\n  /**\n   * Get user object of signed in user\n   */\n  getUser(): void {\n    this.authenticationService.getUser().then(response => {\n      this.user = <User>response;\n\n      if (this.user !=  null) {\n        console.info(\"Username: \" + this.user.username);\n        this.isUserSignedIn = true;\n      } else {\n        console.debug(\"User not signed in!\");\n        this.isUserSignedIn = false;\n      }\n    });\n  }\n\n  /**\n   * Get version/environment of Katie server\n   */\n  getKatieVersion(): void {\n    console.info(\"Get version/environment of Katie server ...\");\n    this.configurationService.getVersion().then(response => {\n      this.katieVersion = <KatieVersion>response;\n    });\n  }\n\n  /**\n   * Submit question using a query string parameter\n   */\n  submitQuestion(question: string): void {\n\n    if (question.length === 0) {\n      alert(\"WARNING: Please enter a question!\");\n      return;\n    }\n\n    //alert(\"DEBUG: Submit question: \" + question);\n    var timestamp = Date.now();\n    this.router.navigate(['/ask'], { queryParams: { 'q': question, 'ts': timestamp } });\n  }\n}\n","<!-- INFO: Only add sub-heeader when user is signed in -->\n<div class=\"sub-header\" *ngIf=\"isUserSignedIn\">\n  <p class=\"font-weight-600\">{{ 'katie.welcome' | translate }} {{user.firstname}}<!-- {{user.lastname}}--></p>\n</div>\n\n<main>\n  <!-- INFO: User signed in -->\n  <div *ngIf=\"isUserSignedIn\">\n    <div class=\"content p-24 justify-center\">\n      <section class=\"container flex-column\">\n        <span *ngIf=\"user != null && user.myKatieId != null\">\n          <a href=\"/#/my-katie\">MyKatie</a>, your personal Domain / Knowledge Base\n          <br/><br/>\n        </span>\n        <a href=\"/#/dashboard\">{{ 'katie.dashboard' | translate }}</a>\n      </section>\n    </div>\n  </div>\n\n  <!-- INFO: Homepage for on-premises -->\n  <div id=\"on-premises\" *ngIf=\"katieVersion != null && katieVersion.environment === 'on-premises' && !isUserSignedIn\">\n    <div class=\"pr-24 pl-24\">\n      <section class=\"container flex-column\">\n        <h1 class=\"mt-128\">{{ 'katie.welcome_to_katie' | translate }}</h1>\n    <p class=\"mt-24\">Version: {{katieVersion.version}}</p>\n    <p class=\"mt-24\">Environment: {{katieVersion.environment}}</p>\n      </section>\n    </div>\n  </div>\n\n  <!-- INFO: Homepage for cloud (ukatie.com) -->\n  <div id=\"ask-question\" *ngIf=\"katieVersion != null && katieVersion.environment === 'cloud' && !isUserSignedIn\">\n    <div class=\"pr-24 pl-24\">\n      <section class=\"container flex-column\">\n        <h1 class=\"mt-128\">{{ 'katie.people_look_for_answers' | translate }}</h1>\n        <p class=\"mt-24\">{{ 'katie.katie_helps_your_employees_and_customers' | translate }}</p>\n        <p class=\"mt-24\">{{ 'katie.question_answer_bot' | translate }}</p>\n        <p class=\"mt-24\"><a href=\"/#/faq/ROOT/en\" class=\"blue\">{{ 'katie.try_katie' | translate }}</a>&#160;<span>{{ 'katie.and' | translate }}</span>&#160;<span>{{ 'katie.learn_more' | translate }}</span>.</p>\n        <!--<p class=\"mt-24\"><a href=\"/#/ask\" class=\"blue\">{{ 'katie.try_katie' | translate }}</a>&#160;<span>{{ 'katie.and' | translate }}</span>&#160;<span>{{ 'katie.learn_more' | translate }}</span>.</p>-->\n        <!--<p class=\"mt-24\"><a href=\"/#/ask\" class=\"blue\">{{ 'katie.try_katie' | translate }}</a>&#160;<span>{{ 'katie.and' | translate }}</span>&#160;<span class=\"text-button\"><a class=\"blue\" href=\"#learn-more\">{{ 'katie.learn_more' | translate }}</a></span>.</p>-->\n\n<!--\n        <div id=\"input-form\" class=\"mt-48\">\n          <input #question id=\"question\" type=\"text\" (keydown.enter)=\"submitQuestion(question.value)\" />\n          <button id=\"input-button\" (click)=\"submitQuestion(question.value)\" type=\"button\">\n            <img src=\"assets/img/arrow_button.svg\" alt=\"\">\n          </button>\n        </div>\n-->\n\n        <div class=\"mt-64 space-between flex-wrap double-row\" id=\"learn-more\">\n        <!--<div class=\"mt-128 space-between flex-wrap double-row\" id=\"learn-more\">-->\n          <div class=\"row-6\">\n            <h2>{{ 'katie.title_better_knowledge_transfer_and_retention' | translate}}</h2>\n            <p class=\"mt-24\">{{ 'katie.text_better_knowledge_transfer_and_retention' | translate}}</p>\n          </div>\n          <div class=\"row-5\">\n            <h1>20-25%</h1>\n            <h2>{{ 'katie.potential_improvement' | translate}} <a target=\"_blank\" href=\"https://www.mckinsey.com/~/media/McKinsey/Industries/Technology%20Media%20and%20Telecommunications/High%20Tech/Our%20Insights/The%20social%20economy/MGI_The_social_economy_Executive_Summary.ashx\" class=\"dark-grey\">{{ 'katie.according_to_mckinsey' | translate}}</a></h2>\n          </div>\n          <!--\nMost importantly, we find that social technologies, when used within and across enterprises, have the potential to raise the productivity of the high-skill knowledge workers that are critical to performance and growth in the 21st century by 20 to 25 percent.\n-->\n        </div>\n        <section class=\"mt-64\">\n          <div class=\"table\">\n            <div class=\"row\">\n              <div class=\"cell\">\n                <img src=\"assets/img/network_icon.svg\" alt=\"Network illustration\">\n                <h2 class=\"mt-24\">{{ 'katie.title_effective_knowledge_flow' | translate}}</h2>\n                <p>{{ 'katie.text_effective_knowledge_flow' | translate}}</p>\n              </div>\n              <div class=\"cell\">\n                <img src=\"assets/img/exit_icon.svg\" alt=\"Exit illustration\">\n                <h2 class=\"mt-24\">{{ 'katie.title_retain_knowledge' | translate}}</h2>\n                <p>{{ 'katie.text_retain_knowledge' | translate}}</p>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"cell\">\n                <img src=\"assets/img/lightbulb_icon.svg\" alt=\"Collaboration illustration\">\n                <h2 class=\"mt-24\">{{ 'katie.unlock_undocumented_intelligence' | translate}}</h2>\n                <p>{{ 'katie.make_hidden_knowledge_accessible' | translate}}</p>\n              </div>\n              <div class=\"cell\">\n                <img src=\"assets/img/ease_icon.svg\" alt=\"Collaboration illustration\">\n                <h2 class=\"mt-24\"> {{ 'katie.title_ease_of_use' | translate}}</h2>\n                <p>{{ 'katie.text_ease_of_use_1' | translate}}<a href=\"katie4faq.html\" class=\"blue\">{{ 'katie.text_ease_of_use_2' | translate}}</a>{{ 'katie.text_ease_of_use_3' | translate}}</p>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"cell\">\n                <img src=\"assets/img/security_icon.svg\" alt=\"Security illustration\">\n                <h2 class=\"mt-24\">{{ 'katie.title_privacy_guaranteed' | translate}}</h2>\n                <p>{{ 'katie.text_privacy_guaranteed' | translate}}</p>\n              </div>\n              <div class=\"cell\">\n                <img src=\"assets/img/ease_icon.svg\" alt=\"Integration illustration\">\n                <h2 class=\"mt-24\">{{ 'katie.title_quickly_integrated' | translate}}</h2>\n                <p>\n                  <!--<a href=\"slack.html\"><img src=\"assets/img/add_to_slack.png\"/></a>-->\n                  <a class=\"add-to-slack\" href=\"slack.html\"><img src=\"assets/img/slack.svg\" width=\"32px\"/><span>&#160;&#160;&#160;Add to <strong>Slack</strong></span></a>\n                  <br/><br/>\n                  <a class=\"add-to-teams\"href=\"ms-teams.html\"><img src=\"assets/img/ms-teams.svg\" width=\"35px\"/><span>&#160;&#160;&#160;Add to <strong>Teams</strong></span></a>\n\n                  <!-- INFO: Some text, such positioning works -->\n                  &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\n                  &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\n                  &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\n                  &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\n                  &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\n                  &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\n                  &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\n                  &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\n                  &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\n                  &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\n                </p>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <section class=\"mt-128 justify-center\">\n          <div class=\"text-container\">\n            <h2 class=\"t\">{{ 'katie.title_synergy' | translate}}</h2>\n            <p class=\"mt-24\">{{ 'katie.text_synergy' | translate}}</p>\n          </div>\n        </section>\n        <section class=\"mt-128 justify-center\">\n          <div class=\"row-8\">\n            <!-- TODO: Discuss whether \"Interested?\" could be replaced by something else, like for example \"Looking forward to get in touch with you\"\n            <h2 class=\"dark-grey\">Interested?</h2>\n-->\n            <h2 class=\"mt-24\">contact@wyona.com</h2>\n          </div>\n        </section>\n\n        <section class=\"mt-128 justify-center\">\n          <div class=\"text-container\">\n            <p class=\"mt-24\">&#160;</p>\n          </div>\n        </section>\n\n      </section>\n    </div>\n  </div>\n</main>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiBaseUrl: '../api'\n};\n\n// apiBaseUrl: '../api'\n// apiBaseUrl: 'https://ukatie.com/api'\n// apiBaseUrl: 'http://127.0.0.1:7070/api'\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Error } from '../models/error';\nimport { User } from '../models/user';\nimport { DomainInsights } from '../models/domain_insights';\nimport { Webhook } from '../models/webhook';\nimport { WebhookRequest } from '../models/webhook-request';\nimport { FaqTopic } from '../models/faq_topic';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DomainService {\n\n  baseUrl = environment.apiBaseUrl;\n\n  insights: DomainInsights;\n  webhooks: Webhook[] = [];\n  webhookRequests: WebhookRequest[] = [];\n  members: User[] = [];\n  topics: FaqTopic[] = [];\n  faqLanguages: string[] = [];\n\n  /**\n   *\n   */\n  constructor(private httpClient: HttpClient) {\n    console.info(\"Loading Domain service ...\");\n  }\n\n  /**\n   * Add webhook\n   * @param domainId Domain Id, e.g. 'ROOT'\n   * @param payloadURL Payload URL\n   */\n  async addWebhook(domainId: string, payloadURL: string): Promise<any> {\n    //alert(\"DEBUG: Add webhook '\" + domainId + \" / \" + payloadURL + \"'\");\n    console.info(\"Add webhook '\" + domainId + \" / \" + payloadURL + \"'\");\n\n    var url = this.baseUrl + \"/v1/domain/\" + domainId + \"/webhook\";\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.post(url, {payloadURL}, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          //alert(\"DEBUG: Webhook added: \" + payloadURL);\n          console.info(\"Webhook added: \" + payloadURL);\n          resolve();\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured when trying to add webhook: \" + error.message + \", \" + error.code);\n          if (response.status === 403) {\n            alert(\"Access denied, please login!\");\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject();\n          }\n        });\n    });\n    //alert(\"DEBUG: Trying to add webhook ...\");\n    console.info(\"Trying to add webhook ...\");\n    return promise;\n  }\n\n  /**\n   * Delete webhook\n   * @param domainId Domain Id, e.g. 'ROOT'\n   * @param webhookId Webhook Id\n   */\n  async deleteWebhook(domainId: string, webhookId: string): Promise<any> {\n    //alert(\"DEBUG: Delete webhook '\" + domainId + \" / \" + webhookId + \"'\");\n    console.info(\"Delete webhook '\" + domainId + \" / \" + webhookId + \"'\");\n\n    var url = this.baseUrl + \"/v1/domain/\" + domainId + \"/webhooks/\" + webhookId;\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.delete(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          //alert(\"DEBUG: Webhook deleted: \" + webhookId);\n          console.info(\"Webhook deleted: \" + webhookId);\n          resolve();\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured when trying to delete webhook: \" + error.message + \", \" + error.code);\n          if (response.status === 403) {\n            alert(\"Access denied, please login!\");\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject();\n          }\n        });\n    });\n    //alert(\"DEBUG: Trying to delete webhook ...\");\n    console.info(\"Trying to delete webhook ...\");\n    return promise;\n  }\n\n  /**\n   * Get all requests of a particular webhook\n   * @param domainId Domain Id, e.g. 'ROOT'\n   * @param webhookId Webhook Id\n   */\n  async getWebhookRequests(domainId: string, webhookId: string): Promise<any> {\n    //alert(\"DEBUG: Get all webhook requests ...\");\n    console.info(\"Get all webhook requests ...\");\n\n    var url = this.baseUrl + \"/v1/domain/\" + domainId + \"/webhooks/\" + webhookId + \"/deliveries\";\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.get(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          this.webhookRequests = <WebhookRequest[]>response;\n          console.info(\"Total number of webhook requests: \" + this.webhookRequests.length);\n          resolve(this.webhookRequests);\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          if (response.status === 403) {\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.code + \", \" + error.message);\n            reject();\n          }\n        });\n    });\n    return promise;\n  }\n\n  /**\n   * Get all webhooks of a particular domain\n   * @param domainId Domain Id, e.g. 'ROOT'\n   */\n  async getWebhooks(domainId: string): Promise<any> {\n    //alert(\"DEBUG: Get all webhooks ...\");\n    console.info(\"Get all webhooks ...\");\n\n    var url = this.baseUrl + \"/v1/domain/\" + domainId + \"/webhooks\";\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.get(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          this.webhooks = <Webhook[]>response;\n          console.info(\"Total number of webhooks: \" + this.webhooks.length);\n          resolve(this.webhooks);\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          if (response.status === 403) {\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.code + \", \" + error.message);\n            reject();\n          }\n        });\n    });\n    return promise;\n  }\n\n  /**\n   * Get insights of a particular domain\n   * @param domainId Domain Id, e.g. 'ROOT'\n   */\n  async getInsights(domainId: string, lastNumberOfDays: number): Promise<any> {\n    //alert(\"DEBUG: Get domain insights ...\");\n    console.info(\"Get domain insights ...\");\n\n    var url = this.baseUrl + \"/v1/domain/\" + domainId + \"/insights\";\n    if (lastNumberOfDays > 0) {\n      url = this.baseUrl + \"/v1/domain/\" + domainId + \"/insights?last-number-of-days=\" + lastNumberOfDays;\n    }\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.get(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          this.insights = <DomainInsights>response;\n          console.info(\"Domain insights received successfully\");\n          resolve(this.insights);\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          if (response.status === 403) {\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.code + \", \" + error.message);\n            reject();\n          }\n        });\n    });\n    return promise;\n  }\n\n  /**\n   * Add FAQ for a particular language\n   */\n  async addFAQ(domainId: string, language: string, topics: FaqTopic[]): Promise<any> {\n    console.info(\"Add FAQ for language '\" + language + \"' ...\");\n\n    var url = this.baseUrl + \"/v2/faq/?context=\" + domainId + \"&language=\" + language;\n\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.post(url, { topics }, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          //this.TODO = <TODO>response;\n          //alert(\"DEBUG: FAQ added successfully\");\n          console.info(\"FAQ added successfully\");\n          resolve();\n          //resolve(this.TODO);\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured when trying to update user: \" + error.message + \", \" + error.code);\n          if (response.status === 403) {\n            alert(\"Access denied, please login!\");\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject();\n          }\n        });\n    });\n\n    //alert(\"DEBUG: Trying to add FAQ ...\");\n    console.info(\"Trying to add FAQ ...\");\n    return promise;\n  }\n\n  /**\n   * Reindex all QnAs of a particular domain\n   * @param id Domain Id, e.g. \"jmeter\"\n   * @param searchImpl Search implementation, e.g. \"MOCK\", \"SBERT_LUCENE\", ...\n   */\n  async reindex(id: string, searchImpl: string): Promise<any> {\n    console.info(\"DomainService#reindex(string, string): Reindex domain '\" + id + \"' with search implementation '\" + searchImpl + \"' ...\");\n\n    var url = this.baseUrl + \"/v1/domain/\" + id + \"/reindex?impl=\" + searchImpl;\n\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.get(url)\n        .toPromise()\n        .then(response => {\n          resolve()\n          })\n        .catch(response => {\n          //alert(\"Response status: \" + response.status);\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured: \" + error.message);\n          alert(\"An error occured: \" + error.message);\n          reject(error.message);\n        });\n    });\n    //alert(\"DEBUG: Continue ...\");\n    return promise;\n  }\n\n  /**\n   * Invite member\n   * @param id Domain Id, e.g. \"jmeter\"\n   * @param email E-Mail of person getting invited\n   */\n  async inviteMember(id: string, email: string): Promise<any> {\n    console.info(\"DomainService#inviteMember(string, string): Try to invite member '\" + email + \"' to domain '\" + id + \"' ...\");\n\n    var url = this.baseUrl + \"/v1/domain/\" + id + \"/invite-user?email=\" + email;\n\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.post(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          var registrationRequired = response['registration-required'];\n          if (registrationRequired === \"true\") {\n            console.info(\"User with email '\" + email + \"' is not registered yet.\");\n          } else {\n            console.info(\"User with email '\" + email + \"' is already registered.\");\n          }\n          resolve(registrationRequired)\n          })\n        .catch(response => {\n          //alert(\"Response status: \" + response.status);\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured: \" + error.message);\n          if (error.code === \"USER_ALREADY_MEMBER\") {\n            alert(\"WARNING: \" + error.message);\n            resolve();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject(error.message);\n          }\n        });\n    });\n    //alert(\"DEBUG: Continue ...\");\n    return promise;\n  }\n\n  /**\n   * Toggle whether a particular user is moderator of a particular domain\n   */\n  toggleUserIsModerator(domainId: string, username: string) {\n    console.info(\"Toggle whether user '\" + username + \"' is moderator of domain '\" + domainId + \"'\");\n\n    var url = this.baseUrl + \"/v1/domain/\" + domainId + \"/user/\" + username + \"/moderator\";\n\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.put(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          var isModerator = response['moderator'];\n          console.info(\"Member is moderator: \" + isModerator);\n          resolve(isModerator);\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured when trying to toggler whether user is moderator: \" + error.message + \", \" + error.code);\n          if (response.status === 403) {\n            alert(\"Access denied, please login!\");\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject();\n          }\n        });\n    });\n\n    console.info(\"Trying to toggle whether member is moderator ...\");\n    return promise;\n  }\n\n  /**\n   * Toggle whether a particular user is expert of a particular domain\n   */\n  toggleUserIsExpert(domainId: string, username: string) {\n    console.info(\"Toggle whether user '\" + username + \"' is expert of domain '\" + domainId + \"'\");\n\n    var url = this.baseUrl + \"/v1/domain/\" + domainId + \"/user/\" + username + \"/expert\";\n\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.put(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          var isExpert = response['expert'];\n          console.info(\"Member is expert: \" + isExpert);\n          resolve(isExpert);\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured when trying to toggler whether user is expert: \" + error.message + \", \" + error.code);\n          if (response.status === 403) {\n            alert(\"Access denied, please login!\");\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject();\n          }\n        });\n    });\n\n    console.info(\"Trying to toggle whether member is expert ...\");\n    return promise;\n  }\n\n  /**\n   * Toggle approval of answers of a particular domain\n   */\n  toggleApprovalOfAnswers(domainId: string) {\n    console.info(\"Toggle approval of answers of domain '\" + domainId + \"'\");\n\n    var url = this.baseUrl + \"/v1/domain/\" + domainId + \"/moderation\";\n\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.put(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          var answersMustBeApproved = response['moderation'];\n          //alert(\"DEBUG: Approval of answers has been toggled: \" + answersMustBeApproved);\n          console.info(\"Approval of answers has been toggled: \" + answersMustBeApproved);\n          resolve(answersMustBeApproved);\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured when trying to toggle approval of answers: \" + error.message + \", \" + error.code);\n          if (response.status === 403) {\n            alert(\"Access denied, please login!\");\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject();\n          }\n        });\n    });\n\n    console.info(\"Trying to toggle approval of answers ...\");\n    return promise;\n  }\n\n  /**\n   * Update domain name\n   * @param name Domain name\n   */\n  async updateDomainName(domainId: string, name: string) {\n    console.info(\"Update name of domain '\" + domainId + \"'\");\n\n    var url = this.baseUrl + \"/v1/domain/\" + domainId + \"/name\";\n\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.patch(url, {name}, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          //alert(\"DEBUG: Domain name has been updated successfully\");\n          console.info(\"Domain name has been updated successfully\");\n          resolve();\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured when trying to update domain name: \" + error.message + \", \" + error.code);\n          if (response.status === 403) {\n            alert(\"Access denied, please login!\");\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject();\n          }\n        });\n    });\n\n    console.info(\"Trying to update domain name ...\");\n    return promise;\n  }\n\n  /**\n   * Update \"match reply-to email\" addresss\n   * @param emails Array of emails, e.g. [\"users@httpd.apache.org\", \"java-user@lucene.apache.org\"]\n   */\n  async updateMatchReplyToEmails(domainId: string, emails: string[]) {\n    console.info(\"Update reply-to emails of domain '\" + domainId + \"'\");\n\n    var url = this.baseUrl + \"/v1/domain/\" + domainId + \"/match-reply-to-email\";\n\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.put(url, {emails}, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          //alert(\"DEBUG: Match reply-to emails have been updated successfully\");\n          console.info(\"Match reply-to emails have been updated successfully\");\n          resolve();\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured when trying to update reply-to emails: \" + error.message + \", \" + error.code);\n          if (response.status === 403) {\n            alert(\"Access denied, please login!\");\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject();\n          }\n        });\n    });\n\n    console.info(\"Trying to update reply-to emails ...\");\n    return promise;\n  }\n\n  /**\n   * Update IMAP configuration\n   * @param hostname Hostname, e.g. \"imap.gmail.com\"\n   * @param port Port, e.g. 993\n   */\n  async updateImapConfiguration(domainId: string, hostname: string, port: number, username: string, password: string) {\n    console.info(\"Update IMAP configuration of domain '\" + domainId + \"'\");\n\n    var url = this.baseUrl + \"/v1/domain/\" + domainId + \"/imap-configuration\";\n\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.put(url, {hostname, port, username, password}, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          //alert(\"DEBUG: IMAP configuration has been updated successfully\");\n          console.info(\"IMAP configuration has been updated successfully\");\n          resolve();\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured when trying to update IMAP configuration: \" + error.message + \", \" + error.code);\n          if (response.status === 403) {\n            alert(\"Access denied, please login!\");\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject();\n          }\n        });\n    });\n\n    console.info(\"Trying to update IMAP configuration ...\");\n    return promise;\n  }\n\n  /**\n   * Get all members of a particular domain\n   * @param domainId Domain Id, e.g. 'ROOT'\n   */\n  async getAllMembers(domainId: string): Promise<any> {\n    //alert(\"DEBUG: Get all members ...\");\n    console.info(\"Get all members ...\");\n\n    var url = this.baseUrl + \"/v1/users\";\n    if (domainId != null) {\n      url = url + \"?domainId=\" + domainId;\n    }\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.get(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          this.members = <User[]>response;\n          console.info(\"Total number of members: \" + this.members.length);\n          resolve(this.members);\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          if (response.status === 403) {\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.code + \", \" + error.message);\n            reject();\n          }\n        });\n    });\n    return promise;\n  }\n\n  /**\n   * Get FAQ of a particular domain\n   * @param domainId Domain Id, e.g. 'ROOT'\n   * @param language Language of FAQ, e.g. 'de'\n   * @param uuidOnly If true, then only return UUIDs of QnAs\n   */\n  async getFAQ(domainId: string, language: string, uuidOnly: boolean): Promise<any> {\n    //alert(\"DEBUG: Get FAQ ...\");\n    console.info(\"Get FAQ ...\");\n\n    var url = this.baseUrl + \"/v2/faq?uuid-only=\" + uuidOnly + \"&language=\" + language;\n    if (domainId != null) {\n      url = url + \"&context=\" + domainId;\n    }\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.get(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          this.topics = <FaqTopic[]>response;\n          console.info(\"Total number of topics: \" + this.topics.length);\n          resolve(this.topics);\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          if (response.status === 403) {\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.code + \", \" + error.message);\n            reject();\n          }\n        });\n    });\n    return promise;\n  }\n\n  /**\n   * Get languages of FAQ of a particular domain\n   * @param domainId Domain Id, e.g. 'ROOT'\n   */\n  async getFAQLanguages(domainId: string): Promise<any> {\n    //alert(\"DEBUG: Get FAQ languages...\");\n    console.info(\"Get FAQ languages...\");\n\n    var url = this.baseUrl + \"/v2/faq/languages\";\n    if (domainId != null) {\n      url = url + \"?context=\" + domainId;\n    }\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.get(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          this.faqLanguages = <string[]>response;\n          console.info(\"Total number of languages: \" + this.faqLanguages.length);\n          resolve(this.faqLanguages);\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          if (response.status === 403) {\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.code + \", \" + error.message);\n            reject();\n          }\n        });\n    });\n    return promise;\n  }\n\n  /**\n   * Add QnA to FAQ\n   */\n  addQnAtoFAQ(domainId: string, language: string, topicId: string, uuid: string) {\n    console.info(\"Add QnA '\" + uuid + \"' to FAQ of domain '\" + domainId + \"'.\");\n\n    var url = this.baseUrl + \"/v2/faq/qna?domainId=\" + domainId + \"&language=\" + language + \"&topicId=\" + topicId + \"&uuid=\" + uuid;\n\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.put(url, {}, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          //this.TODO = <TODO>response;\n          //alert(\"DEBUG: QnA added successfully\");\n          console.info(\"QnA added successfully\");\n          resolve();\n          //resolve(this.TODO);\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured when trying to add QnA to FAQ: \" + error.message + \", \" + error.code);\n          if (response.status === 403) {\n            alert(\"Access denied, please login!\");\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject();\n          }\n        });\n    });\n\n    //alert(\"DEBUG: Trying to add QnA to FAQ ...\");\n    console.info(\"Trying to add QnA to FAQ ...\");\n    return promise;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { Answer } from '../models/answer';\nimport { HttpClient } from '@angular/common/http';\nimport { Error } from '../models/error';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AskQuestionService {\n\n  baseUrl = environment.apiBaseUrl;\n\n  answer: Answer;\n  answers: Answer[] = [];\n\n  /**\n   *\n   */\n  constructor(private httpClient: HttpClient, private router: Router, private translate: TranslateService) {\n    console.info(\"Loading AskQuestion service ...\");\n  }\n\n  /**\n   * Get answers to question\n   * @param question Question\n   * @param email Email of user when answer was not helpful\n   * @param domainId Domain / Knowledge base Id\n   * @param questionerLang Language of user asking question\n   * @param limit Limit the number of returned answers\n   * @param offset From where to start returning answers\n   * @return array of answers and return empty array if there is no answer\n   */\n  askQuestionV2(question: string, email: string, domainId: string, questionerLang: string, limit: number, offset: number): Promise<any> {\n    //alert(\"Try to get answer for question '\" + question + \"' ...\");\n    console.info(\"AskQuestionService#askQuestionV2(): Try to get answer for question '\" + question + \"' and email '\" + email + \"' and domain Id '\" + domainId + \"' ...\");\n\n    var url = this.baseUrl + \"/v2/ask?question=\" + question + \"&limit=\" + limit + \"&offset=\" + offset;\n    if (email != null) {\n      //alert(\"Resubmit question including email '\" + email + \"' of user asking the question ...\");\n      url = url + \"&email=\" + email;\n    }\n    if (domainId != null) {\n      url = url + \"&domainId=\" + domainId;\n    }\n    if (questionerLang != null) {\n      url = url + \"&questionerLanguage=\" + questionerLang;\n    }\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.get(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          if (email != null) {\n            console.info(\"Question together with email of user '\" + email + \"' has been sent to expert successfully.\");\n            this.answers = [];\n          } else {\n            this.answers = <Answer[]>response;\n            console.info(\"AskQuestionService#askQuestionV2(): Number of answers: \" + this.answers.length);\n            if (this.answers.length == 0) {\n              console.info(\"No answer available for question '\" + question + \"'.\");\n              //alert(\"No answer available for question '\" + question + \"'.\");\n            }\n          }\n          resolve(this.answers);\n          })\n        .catch(response => {\n          if (response.status === 401) {\n            var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n            var message = null;\n            if (error.code === \"ANSWER_IS_PROTECTED\") {\n              message = this.translate.instant('katie.answer_protected');\n            } else {\n              message = \"Access denied! Error code: \" + error.code;\n            }\n            //alert(message);\n            this.router.navigate(['/login'], {queryParams: {'question': question, 'message': message}});\n            //reject();\n          } else if (response.status === 403) {\n            var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n            var message = null;\n            if (error.code === \"NOT_SUFFICIENT_PERMISSIONS_TO_READ_ANSWER\") {\n              message = \"You are signed in as '\" + error.properties['username'] + \"', but you don't have sufficient permissions to read this answer, please sign in with a different account.\";\n            } else {\n              message = \"Access denied! Error code: \" + error.code;\n            }\n            //alert(message);\n            this.router.navigate(['/login'], {queryParams: {'question': question, 'message': message}});\n            //reject();\n          } else if (response.status === 500) {\n            var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n            if (error.code === \"KNOWLEDGE_BASE_EMPTY\") {\n              console.info(\"AskQuestionService#askQuestionV2(): Knowledge base of domain '\" + domainId + \"' is empty!\");\n              reject(error.code);\n            } else {\n              console.error(\"AskQuestionService#askQuestionV2(): An error occured when trying to ask question: \" + error.code);\n            }\n          } else {\n            console.info(\"AskQuestionService#askQuestionV2(): Response status: \" + response.status);\n            console.error(\"AskQuestionService#askQuestionV2(): An error occured when trying to ask question: \" + response.error);\n            //alert(\"An error occured when trying to ask question: \" + response.error);\n            //reject();\n          }\n        });\n    });\n    return promise;\n  }\n\n  /**\n   * Get answer to question\n   * @param question Question\n   * @param email Email of user when answer was not helpful\n   * @param domainId Domain / Knowledge base Id\n   * @param questionerLang Language of user asking question\n   * @return answer (only one) and return \"empty\" answer if there is no answer\n   */\n  askQuestion(question: string, email: string, domainId: string, questionerLang: string): Promise<any> {\n    //alert(\"Try to get answer for question '\" + question + \"' ...\");\n    console.info(\"Try to get answer for question '\" + question + \"' and email '\" + email + \"' and domain Id '\" + domainId + \"' ...\");\n\n    var url = this.baseUrl + \"/v1/ask?question=\" + question;\n    if (email != null) {\n      //alert(\"Resubmit question including email '\" + email + \"' of user asking the question ...\");\n      url = url + \"&email=\" + email;\n    }\n    if (domainId != null) {\n      url = url + \"&domainId=\" + domainId;\n    }\n    if (questionerLang != null) {\n      url = url + \"&questionerLanguage=\" + questionerLang;\n    }\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.get(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          this.answer = <Answer>response;\n          //alert(\"Answer: \" + this.answer.answer);\n          console.info(\"AskQuestionService#askQuestion(): Answer: \" + this.answer.answer);\n          if (this.answer.answer == null) {\n            console.info(\"No answer available for question '\" + question + \"'.\");\n            //alert(\"No answer available for question '\" + question + \"'.\");\n          }\n          resolve(this.answer);\n          })\n        .catch(response => {\n          if (response.status === 401) {\n            var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n            var message = null;\n            if (error.code === \"ANSWER_IS_PROTECTED\") {\n              message = this.translate.instant('katie.answer_protected');\n            } else {\n              message = \"Access denied! Error code: \" + error.code;\n            }\n            //alert(message);\n            this.router.navigate(['/login'], {queryParams: {'question': question, 'message': message}});\n            //reject();\n          } else if (response.status === 403) {\n            var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n            var message = null;\n            if (error.code === \"NOT_SUFFICIENT_PERMISSIONS_TO_READ_ANSWER\") {\n              message = \"You are signed in as '\" + error.properties['username'] + \"', but you don't have sufficient permissions to read this answer, please sign in with a different account.\";\n            } else {\n              message = \"Access denied! Error code: \" + error.code;\n            }\n            //alert(message);\n            this.router.navigate(['/login'], {queryParams: {'question': question, 'message': message}});\n            //reject();\n          } else {\n            console.info(\"Response status: \" + response.status);\n            var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n            console.error(\"An error occured when trying to ask question: \" + error.message + \", \" + error.code);\n            alert(\"An error occured when trying to ask question: \" + error.message + \", \" + error.code);\n            //resolve(new Answer()); // INFO: Return empty answer\n            //reject();\n          }\n        });\n    });\n    return promise;\n  }\n\n  /**\n   * Submit question to expert (when user is signed in)\n   */\n  submitQuestionToExpert(question: string, domainId: string): Promise<any> {\n    //alert(\"Submit question '\" + question + \"' to expert ...\");\n\n    var url = this.baseUrl + \"/v1/submitQuestionToExpert?question=\" + question;\n    if (domainId !=  null) {\n      url = url + \"&domainId=\" + domainId;\n    }\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.get(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          this.answer = <Answer>response;\n          //alert(\"Answer: \" + this.answer.answer);\n          console.info(\"AskQuestionService#submitQuestionToExpert(): Question submitted successfully: \" + this.answer.submittedQuestion);\n          resolve(this.answer);\n          })\n        .catch(response => {\n          if (response.status === 403) {\n            var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n            var message = \"Access denied! Error code: \" + error.code;\n            //alert(message);\n            reject();\n          } else {\n            console.info(\"Response status: \" + response.status);\n            var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n            console.info(\"An error occured when trying to submit question to expert: \" + error.message + \", \" + error.code);\n            alert(\"An error occured when trying to submit question to expert: \" + error.message + \", \" + error.code);\n            //reject();\n          }\n        });\n    });\n    return promise;\n  }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { Context } from '../models/context';\nimport { ConfigurationService } from \"../services/configuration.service\";\nimport { DomainService } from \"../services/domain.service\";\nimport { ActivatedRoute } from '@angular/router';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'app-domain-settings',\n  templateUrl: './domain-settings.component.html',\n  styleUrls: ['./domain-settings.component.css']\n})\nexport class DomainSettingsComponent implements OnInit {\n\n  domainId: string;\n  domain: Context;\n\n  constructor(private configurationService: ConfigurationService, private route: ActivatedRoute, private domainService: DomainService, @Inject(DOCUMENT) private document) { }\n\n  ngOnInit(): void {\n    this.domainId = this.route.snapshot.paramMap.get(\"id\");\n    this.getDomain();\n  }\n\n  /**\n   * Get domain\n   */\n  getDomain(): void {\n    this.configurationService.getContext(this.domainId).then(response => {\n      this.domain = <Context>response;\n      console.info(\"Domain '\" + this.domain.id + \"' has been loaded.\");\n    });\n  }\n\n  /**\n   *\n   */\n  toggleEditDomainName() {\n    //alert(\"DEBUG: Toggle edit domain name.\");\n    if (!this.document.getElementById('domainname').isContentEditable) {\n      //alert(\"DEBUG: Enable editing of domain name\");\n      this.document.getElementById('editBtn').innerHTML = \"<img src='assets/img/icon/check_circle_outline_black_24dp.svg' title='Finish editing domain name'/>\";\n\n      this.document.getElementById('domainname').contentEditable = \"true\";\n    } else {\n      var domainName = this.document.getElementById('domainname').innerHTML;\n      //alert(\"DEBUG: Save updated domain name: \" + domainName);\n      this.domainService.updateDomainName(this.domainId, domainName).then(response => {\n        //alert(\"DEBUG: Domain name has been updated.\");\n        console.info(\"Domain name has been updated successfully.\");\n      });\n\n      this.document.getElementById('editBtn').innerHTML = \"<img src='assets/img/icon/edit_black_24dp.svg' title='Edit domain name, for example to fix typos'/>\";\n\n      this.document.getElementById('domainname').contentEditable = \"false\";\n    }\n  }\n\n  /**\n   * @param hostname Hostname including port, e.g. imap.gmail.com:993\n   */\n  addImapConfiguration(hostname: string, port: number, username: string, password: string, emailReplyTo: string): void {\n    alert(\"DEBUG: Add IMAP configuration '\" + hostname + \"' ...\");\n\n    this.domainService.updateImapConfiguration(this.domainId, hostname, port, username, password).then(response => {\n      console.info(\"IMAP configuration updated successfully\");\n\n      var emails: string[] = [emailReplyTo];\n      this.domainService.updateMatchReplyToEmails(this.domainId, emails).then(response => {\n        console.info(\"Match reply-to emails updated successfully\");\n\n        this.document.getElementById('addImapOverlay').classList.toggle('open-overlay');\n        this.getDomain();\n      });\n    });\n  }\n\n  /**\n   *\n   */\n  reindex(searchImpl: string): void {\n    //alert(\"DEBUG: Reindex using search implementation '\" + searchImpl + \"' ...\");\n    console.info(\"Reindex using search implementation '\" + searchImpl + \"' ...\");\n    this.document.getElementById('reindexOverlay').classList.toggle('open-overlay');\n\n    this.domainService.reindex(this.domainId, searchImpl).then(response => {\n      console.info(\"All QnAs have been reindexed.\");\n      this.getDomain();\n    });\n  }\n\n  /**\n   *\n   */\n  toggleModeration() {\n      //alert(\"DEBUG: Toggle moderation ...\");\n      this.domainService.toggleApprovalOfAnswers(this.domainId).then(response => {\n        var answersMustBeApproved = response;\n        //alert(\"DEBUG: Moderation toggled successfully.\");\n        console.info(\"Moderation toggled successfully: \" + answersMustBeApproved);\n\n        // INFO: Display current values\n        this.getDomain();\n        //this.document.getElementById('answersMustBeApproved').innerHTML = answersMustBeApproved;\n      });\n  }\n\n  /**\n   * Toggle contenteditable to edit hostname\n   */\n  toggleEditHostname() {\n    if (!this.document.getElementById('hostname').isContentEditable) {\n      //alert(\"DEBUG: Enable editing of hostname\");\n      this.document.getElementById('editBtn').innerHTML = \"Save Hostname\";\n      this.document.getElementById('editBtn').style.backgroundColor = '#f5b942';\n\n      this.document.getElementById('hostname').contentEditable = \"true\";\n    } else {\n      var updatedHostname = this.document.getElementById('hostname').innerHTML;\n      //alert(\"DEBUG: Save updated hostname: \" + updatedHostname);\n      this.configurationService.updateMessageBodyHostname(this.domainId, updatedHostname).then(response => {\n        //alert(\"DEBUG: Hostname has been updated successfully.\");\n        console.info(\"Hostname has been updated successfully.\");\n      });\n\n      this.document.getElementById('editBtn').innerHTML = \"Edit Hostname\";\n      this.document.getElementById('editBtn').style.backgroundColor = '#F96';\n\n      this.document.getElementById('hostname').contentEditable = \"false\";\n    }\n  }\n\n}\n","<div class=\"sub-header\">\n  <p class=\"font-weight-600\" *ngIf=\"domain != null\"><a href=\"/#/dashboard\">Dashboard</a> / <a href=\"/#/domain/{{domainId}}\">{{domain.name}}</a></p>\n</div>\n\n<main class=\"align-center\">\n  <app-domain-navigation [domainId]=\"domainId\" [pageId]=\"'settings'\"></app-domain-navigation>\n  <div class=\"content p-24 justify-center\">\n\n    <div id=\"settings-navigation\" style=\"float: left; margin-right: 30px; padding: 20px; background-color: var(--white-grey);\">\n      <ul>\n        <li>General</li>\n        <li>Index Configuration</li>\n        <li>Mail Configuration</li>\n        <li>IMAP Configuration</li>\n        <li><a href=\"/#/domain/{{domainId}}/settings/webhooks\">Webhooks</a></li>\n      </ul>\n    </div>\n\n    <div class=\"container\">\n<h2>{{ 'katie.settings' | translate }}</h2>\n<br/>\n<h3>General</h3>\n<br/>\n<p class=\"ml-24 mid-grey\" *ngIf=\"domain != null\">Domain name: <span contenteditable=\"false\" id=\"domainname\">{{ domain.name }}</span>&#160;&#160;<button id=\"editBtn\" (click)=\"toggleEditDomainName()\"><img src=\"assets/img/icon/edit_black_24dp.svg\" title=\"Edit domain name, for example to fix typos\"/></button></p>\n<p class=\"ml-24 mid-grey\" *ngIf=\"domain != null\">{{ 'katie.answers_must_be_approved' | translate }}: <span id=\"answersMustBeApproved\">{{ domain.answersMustBeApprovedByModerator }}</span>&#160;&#160;<img *ngIf=\"domain.answersMustBeApprovedByModerator\" class=\"toggle_icon\" src=\"assets/img/toggle-on-solid.svg\" (click)=\"toggleModeration()\"/><img *ngIf=\"!domain.answersMustBeApprovedByModerator\" class=\"toggle_icon\" src=\"assets/img/toggle-off-solid.svg\" (click)=\"toggleModeration()\"/></p>\n<p class=\"ml-24 mid-grey\" *ngIf=\"domain != null\">Answers are protected by default: {{ domain.answersGenerallyProtected }}</p> <!-- Toggle Switch -->\n<br/>\n\n<h3>Index Configuration</h3>\n<br/>\n<p class=\"ml-24 mid-grey\" *ngIf=\"domain != null\">Search Implementation: {{ domain.detectDuplicatedQuestionImpl }}</p>\n        <p>\n          <br/>\n          <button (click)=\"reindexOverlay.classList.toggle('open-overlay')\" class=\"fw-600 bg-blue white solid-button\">Reindex</button>\n        </p>\n\n        <div class=\"close-overlay overlay\" #reindexOverlay id=\"reindexOverlay\">\n          <div class=\"resubmit-form\">\n            <h2>{{ 'katie.reindex' | translate }}</h2>\n            <p class=\"mt-24\">{{ 'katie.select_search_implementation' | translate }}</p>\n            <select #search_impl class=\"form-field mt-48\" id=\"search_impl\">\n              <option value=\"MOCK\">Lucene</option>\n              <option value=\"SBERT_LUCENE\">SentenceBERT-Lucene</option>\n              <option value=\"SENTENCE_BERT\">SentenceBERT</option>\n              <option value=\"ELASTICSEARCH\">Elasticsearch</option>\n              <option value=\"KNOWLEDGE_GRAPH\">Knowledge Graph</option>\n            </select>\n            <div class=\"space-between align-center mt-48\">\n              <button type=\"button\" name=\"close\" class=\"text-button blue mr-24\" (click)=\"reindexOverlay.classList.toggle('open-overlay')\">{{ 'katie.cancel' | translate }}</button>\n              <button class=\"fw-600 solid-button bg-blue white\" (click)=\"reindex(search_impl.value)\">Reindex</button>\n            </div>\n          </div>\n        </div>\n<br/>\n\n<h3>Mail Configuration</h3>\n<br/>\n<p>When Katie is sending notifications by email, for example when a user has submitted a question to be answered by an expert, then the following values are used</p>\n<br/>\n<p *ngIf=\"domain != null\"><span class=\"ml-24 mid-grey\">E-Mail subject tag:&#160;</span>{{ domain.mailSubjectTag }}</p>\n<p *ngIf=\"domain != null\"><span class=\"ml-24 mid-grey\">{{ 'katie.email_sender_address' | translate }}:&#160;</span>{{ domain.mailSenderEmail }} <a href=\"https://ukatie.com/#/domain/ROOT/qna/14d63b6d-234a-4130-91dd-66e6396882c3\" target=\"_blank\"><img src=\"assets/img/icon/info_black_24dp.svg\" style=\"vertical-align: bottom;\"/></a></p>\n<!-- INFO: https://code.tutsplus.com/tutorials/create-an-inline-text-editor-with-the-contenteditable-attribute--cms-25655 https://codepen.io/Shokeen/pen/XXggZr -->\n<p class=\"ml-24 mid-grey\" *ngIf=\"domain != null\">E-Mail body hostname: <span contenteditable=\"false\" id=\"hostname\">{{ domain.mailBodyHost }}</span>&#160;&#160;<button class=\"edit\" id=\"editBtn\" type=\"button\" (click)=\"toggleEditHostname()\">Edit Hostname</button></p>\n\n<h3>IMAP Configuration</h3>\n<br/>\n<p>Enable Katie to access emails by IMAP in order to answer emails which contain questions</p>\n<br/>\n<p class=\"ml-24 mid-grey\" *ngIf=\"domain != null && domain.imapConfiguration != null\">IMAP configuration: {{domain.imapConfiguration.hostname}}:{{domain.imapConfiguration.port}}, {{domain.imapConfiguration.username}}</p>\n<p class=\"ml-24 mid-grey\" *ngIf=\"domain != null && domain.matchReplyTo != null\">Match reply-to: {{domain.matchReplyTo}}</p>\n        <p *ngIf=\"domain != null && domain.imapConfiguration === null\">\n          <br/>\n          <button (click)=\"addImapOverlay.classList.toggle('open-overlay')\" class=\"fw-600 bg-blue white solid-button\">{{ 'katie.add_imap_config' | translate }}</button>\n        </p>\n\n        <div class=\"close-overlay overlay\" #addImapOverlay id=\"addImapOverlay\">\n          <div class=\"resubmit-form\">\n            <h2>{{ 'katie.add_imap_config' | translate }}</h2>\n            <p class=\"mt-24\">{{ 'katie.add_imap_info' | translate }}</p>\n            <input #imap_hostname id=\"imap_hostname\" class=\"form-field mt-24\" type=\"text\" placeholder=\"Hostname, e.g. imap.gmail.com\"/>\n            <input #imap_port id=\"imap_port\" class=\"form-field mt-24\" type=\"text\" placeholder=\"Port, e.g. 993\"/>\n            <input #imap_username id=\"imap_username\" class=\"form-field mt-24\" type=\"text\" placeholder=\"{{ 'katie.username' | translate }}\"/>\n            <input #imap_password id=\"imap_password\" class=\"form-field mt-24\" type=\"password\" placeholder=\"{{ 'katie.password' | translate }}\"/>\n            <input #imap_reply_to id=\"imap_reply_to\" class=\"form-field mt-24\" type=\"text\" placeholder=\"Match email, e.g. users@httpd.apache.org\"/>\n            <div class=\"space-between align-center mt-48\">\n              <button type=\"button\" name=\"close\" class=\"text-button blue mr-24\" (click)=\"addImapOverlay.classList.toggle('open-overlay')\">{{ 'katie.cancel' | translate }}</button>\n              <button class=\"fw-600 solid-button bg-blue white\" (click)=\"addImapConfiguration(imap_hostname.value, imap_port.value, imap_username.value, imap_password.value, imap_reply_to.value)\">{{ 'katie.add' | translate }}</button>\n            </div>\n          </div>\n        </div>\n\n    </div>\n  </div>\n</main>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { AskQuestionService } from \"../services/ask-question.service\";\nimport { AuthenticationService } from \"../services/authentication.service\";\nimport { Answer } from \"../models/answer\";\nimport { Username } from '../models/username';\nimport { Inject }  from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AesencryptDecryptService } from '../services/aesencrypt-decrypt.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-ask-question',\n  templateUrl: './ask-question.component.html',\n  styleUrls: ['./ask-question.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AskQuestionComponent implements OnInit {\n\n  answer: Answer;\n  answerReceived: boolean;\n  username: Username;\n  // INFO: Question submitted as URL query string\n  question: string;\n  // INFO: Domain Id submitted as URL query string\n  domainId: string;\n\n  constructor(private askQuestionService: AskQuestionService, @Inject(DOCUMENT) private document, private router: Router, private route: ActivatedRoute, private authenticationService: AuthenticationService, private aesEncryptDecryptService: AesencryptDecryptService, private translateService: TranslateService) {\n    console.info(\"AskQuestionComponent: Loading AskQuestion component ...\");\n  }\n\n  /**\n   *\n   */\n  ngOnInit(): void {\n    // INFO: Init empty answer\n    this.answer = new Answer();\n    this.answerReceived = false;\n\n    this.route\n      .queryParams\n      .subscribe(params => {\n        this.question = params['q'] || null;\n        this.domainId = params['domain-id'] || null;\n\n        if (this.question != null) {\n          console.info(\"AskQuestionComponent#ngOnInit(): Question as query parameter: \" + this.question);\n          //alert(\"DEBUG: Question as query parameter: \" + this.question);\n\n          this.setQuestion(this.question);\n\n          this.askQuestion(this.question, null, false);\n        }\n      });\n\n    this.getUsername();\n  }\n\n  /**\n   * Set question as input value\n   */\n  private setQuestion(question: string): void {\n    console.debug(\"AskQuestionComponent#setQuestion(): Set question: \" + question);\n    this.document.getElementById('question').value = question;\n  }\n\n  /**\n   * Submit question using a query string parameter\n   */\n  submitQuestion(question: string): void {\n\n    if (question.length === 0) {\n      alert(\"WARNING: Please enter a question!\");\n      return;\n    }\n\n    //this.document.getElementById('result').value = \"Please be patient ...\";\n    if (this.answer != null) {\n      this.answer.answer = null; // INFO: Reset previous answer\n    }\n\n    //alert(\"DEBUG: Submit question: \" + question);\n    var timestamp = Date.now();\n    this.router.navigate(['/ask'], {queryParams: {'q': question,'ts':timestamp}});\n  }\n\n  /**\n   * Get answer from backend\n   * @param question Question of user\n   * @param email E-Mail address of user in case answer was not helpful\n   * @param toggleOverlay Toggle overlay when true and do not toggle when false\n   */\n  askQuestion(question: string, email: string, toggleOverlay: boolean): void {\n\n    if (question.length === 0) {\n      alert(\"WARNING: Please enter a question!\");\n      return;\n    }\n\n    //alert(\"DEBUG: Submit question: \" + question);\n    this.answerReceived = false;\n\n    var language = null;\n    if (email != null) {\n      language = this.translateService.currentLang;\n    }\n\n    this.askQuestionService.askQuestion(question, email, this.domainId, language).then(response => {\n      this.answer = <Answer>response;\n      this.answerReceived = true;\n      //alert(\"DEBUG: Answer received: \" + this.answer.answer);\n\n      // INFO: When question was submitted to expert and user is not signed in, whereas also see method below submitQuestionToExpert(string)\n      if (this.answer.email != null && toggleOverlay) {\n        this.document.getElementById('overlaySendToExpert').classList.toggle('open-overlay');\n        //alert(\"INFO: Question '\" + question + \"' resubmitted successfully, whereas we will try to answer your question as soon as possible and send you an email to '\" + email + \"'.\");\n      }\n    });\n  }\n\n  /**\n   * Submit question to expert (when user is signed in)\n   * @param question Question of user\n   */\n  submitQuestionToExpert(question: string): void {\n\n    if (question.length === 0) {\n      alert(\"WARNING: Please enter a question!\");\n      return;\n    }\n\n    //alert(\"Submit question to expert: \" + question);\n    this.askQuestionService.submitQuestionToExpert(question, this.domainId).then(response => {\n      this.answer = <Answer>response;\n    });\n  }\n\n  /**\n   * Decrypt encrypted answer\n   * @param password Password to decrypt answer\n   */\n  decryptAnswer(password: string): void {\n    alert(\"Decrypted answer: \" + this.aesEncryptDecryptService.decrypt(this.answer.answer, password));\n    this.document.getElementById('secretKey').value = \"\";\n    this.document.getElementById('overlayDecrypt').classList.toggle('open-overlay');\n  }\n\n  /**\n   * Get username of signed in user\n   */\n  getUsername(): void {\n    this.authenticationService.getUsername().then(response => {\n      this.username = <Username>response;\n\n      if (this.username !=  null) {\n        //alert(\"Username: \" + this.username.username);\n        console.info(\"Username: \" + this.username.username);\n      } else {\n        console.debug(\"AskQuestionComponent#getUsername(): User not signed in!\");\n      }\n    });\n  }\n\n  /**\n   *\n   */\n  togglePw() {\n    var passwordType = <HTMLInputElement>document.getElementById(\"secretKey\");\n    var y = <HTMLInputElement>document.getElementById(\"eye_icon\");\n    if (passwordType.type === \"password\") {\n      passwordType.type = \"text\";\n      y.src = \"assets/img/eye_icon_strike.svg\";\n    } else {\n      passwordType.type = \"password\";\n      y.src = \"assets/img/eye_icon.svg\";\n    }\n  }\n\n}\n","<main>\n\n  <div class=\"content p-24 justify-center\">\n    <div class=\"container\">\n      <app-ask-katie [domainId]=\"'ROOT'\"></app-ask-katie>\n    </div>\n  </div>\n\n</main>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IamService } from \"../services/iam.service\";\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  passwordSubmitted: boolean = false;\n  token: string = null;\n\n  constructor(private route: ActivatedRoute, private iamService: IamService) { }\n\n  ngOnInit(): void {\n    this.route\n      .queryParams\n      .subscribe(params => {\n        this.token = params['token'] || null;\n      });\n  }\n\n  /**\n   * Send new password to server in order reset password\n   * @param password New password\n   */\n  submitPassword(password: string): void {\n    console.info(\"Send password to server in order to reset password ...\");\n    this.iamService.resetPassword(password, this.token).then(response => {\n      this.passwordSubmitted = true;\n    });\n  }\n\n}\n","<main>\n  <div id=\"forgot-password-container\">\n    <a href=\"/\"><img src=\"assets/img/logo.svg\" alt=\"logo\"/></a>\n\n    <h2 class=\"mt-24\">{{ 'katie.reset_password' | translate }}</h2>\n\n    <div *ngIf=\"!passwordSubmitted\">\n      <p class=\"mt-16\">\n        {{ 'katie.enter_new_password' | translate }}\n      </p>\n\n      <form>\n        <input #username id=\"username\" class=\"form-field mt-48\" type=\"password\" placeholder=\"{{ 'katie.new_password' | translate }}\" (keydown.enter)=\"submitPassword(username.value)\"/>\n      </form>\n\n      <section class=\"mt-48\">\n        <button (click)=\"submitPassword(username.value)\" class=\"fw-600 bg-blue white solid-button\" type=\"submit\">{{ 'katie.next' | translate }}</button>\n      </section>\n    </div>\n\n    <div *ngIf=\"passwordSubmitted\">\n      <p class=\"mt-16\">\n        {{ 'katie.reset_password_notification' | translate }}\n      </p>\n\n      <section class=\"mt-48\">\n        <button [routerLink]=\"['/login']\" class=\"fw-600 bg-blue white solid-button\">{{ 'katie.sign_in' | translate }}</button>\n      </section>\n    </div>\n  </div>\n</main>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from \"../services/authentication.service\";\nimport { User } from '../models/user';\nimport { IamService } from \"../services/iam.service\";\n\n@Component({\n  selector: 'app-iam-update-profile',\n  templateUrl: './iam-update-profile.component.html',\n  styleUrls: ['./iam-update-profile.component.css']\n})\nexport class IamUpdateProfileComponent implements OnInit {\n\n  user: User;\n\n  constructor(private authenticationService: AuthenticationService, private iamService: IamService) { }\n\n  ngOnInit(): void {\n    this.getUser();\n  }\n\n  /**\n   * Get user object of signed in user\n   */\n  getUser(): void {\n    this.authenticationService.getUser().then(response => {\n      this.user = <User>response;\n\n      if (this.user !=  null) {\n        //alert(\"DEBUG: IamUpdateProfileComponent#getUser(): Username: \" + this.user.username);\n        console.info(\"Username: \" + this.user.username);\n      } else {\n        console.debug(\"IamUpdateProfileComponent#getUser(): User not signed in!\");\n      }\n    });\n  }\n\n  /**\n   * Update user data\n   * @param firstname First name of user\n   * @param lastname Last name of user\n   * @param email E-Mail of user\n   * @param language Language of user, e.g. \"de\" or \"en\"\n   */\n  updateProfile(firstname: string, lastname: string, email: string, language: string) {\n    console.info(\"Update user with id '\" + this.user.id + \"' ...\");\n\n    var updatedUser: User = {id: this.user.id, username: null, role: null, email: email, firstname: firstname, lastname: lastname, isExpert: null, isModerator: null, password: null, language: language, myKatieId: null};\n\n    this.iamService.updateUser(updatedUser).then(response => {\n      alert(\"INFO: User has been updated successfully.\");\n      console.info(\"User has been updated successfully.\");\n    });\n  }\n\n}\n","<div class=\"sub-header\" *ngIf=\"user != null\">\n  <p class=\"font-weight-600\">Update Profile</p>\n</div>\n\n<main class=\"align-center\">\n\n  <div class=\"content p-24 justify-center\">\n    <div class=\"container\" *ngIf=\"user != null\">\n      <table>\n        <tr><td>{{ 'katie.iam_username' | translate }}:</td><td>{{user.username}}</td></tr>\n        <tr><td>{{ 'katie.iam_first_name' | translate }}:</td><td><input class=\"form-field mt-12\" type=\"text\" size=\"50\" #_firstName id=\"firstName\" name=\"firstName\" value=\"{{user.firstname}}\"/></td></tr>\n        <tr><td>{{ 'katie.iam_last_name' | translate }}:</td><td><input class=\"form-field mt-12\" type=\"text\" size=\"50\" #_lastName id=\"lastName\" name=\"lastName\" value=\"{{user.lastname}}\"/></td></tr>\n        <tr><td>E-Mail:</td><td><input class=\"form-field mt-12\" type=\"text\" size=\"50\" #_email id=\"email\" name=\"email\" value=\"{{user.email}}\"/></td></tr>\n        <tr>\n          <td>{{ 'katie.language' | translate }}:</td>\n          <td>\n            <select #_language class=\"form-field mt-24\" id=\"language\" name=\"language\">\n              <option value=\"en\" selected=\"selected\" *ngIf=\"user.language === 'en'\">{{ 'katie.language_en' | translate }}</option>\n              <option value=\"en\" *ngIf=\"user.language != 'en'\">{{ 'katie.language_en' | translate }}</option>\n\n              <option value=\"de\" selected=\"selected\" *ngIf=\"user.language === 'de'\">{{ 'katie.language_de' | translate }}</option>\n              <option value=\"de\" *ngIf=\"user.language != 'de'\">{{ 'katie.language_de' | translate }}</option>\n\n              <option value=\"pt\" selected=\"selected\" *ngIf=\"user.language === 'pt'\">{{ 'katie.language_pt' | translate }}</option>\n              <option value=\"pt\" *ngIf=\"user.language != 'pt'\">{{ 'katie.language_pt' | translate }}</option>\n\n              <option value=\"fr\" selected=\"selected\" *ngIf=\"user.language === 'fr'\">{{ 'katie.language_fr' | translate }}</option>\n              <option value=\"fr\" *ngIf=\"user.language != 'fr'\">{{ 'katie.language_fr' | translate }}</option>\n            </select>\n          </td>\n        </tr>\n      </table>\n      <br/>\n      <button class=\"blue text-button mt-48 mr-24\" type=\"button\" [routerLink]=\"['/dashboard']\">Back to Dashboard</button>\n      <button class=\"fw-600 bg-blue white solid-button mt-24\" (click)=\"updateProfile(_firstName.value, _lastName.value, _email.value, _language.value)\" type=\"button\">Update Profile</button>\n    </div>\n  </div>\n</main>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { Context } from '../models/context';\nimport { FaqTopic } from '../models/faq_topic';\nimport { ActivatedRoute } from '@angular/router';\nimport { ConfigurationService } from \"../services/configuration.service\";\nimport { DomainService } from \"../services/domain.service\";\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'app-domain-faq',\n  templateUrl: './domain-faq.component.html',\n  styleUrls: ['./domain-faq.component.css']\n})\nexport class DomainFaqComponent implements OnInit {\n\n  domain: Context;\n  domainId: string;\n  faqLanguages: string[] = [];\n  selectableFAQLanguages: string[] = [];\n\n  constructor(private configurationService: ConfigurationService, private route: ActivatedRoute, private domainService: DomainService, @Inject(DOCUMENT) private document) { }\n\n  ngOnInit(): void {\n    this.domainId = this.route.snapshot.paramMap.get(\"id\");\n\n    this.getDomain();\n    this.getFAQLanguages();\n  }\n\n  /**\n   *\n   */\n  getDomain(): void {\n    this.configurationService.getContext(this.domainId).then(response => {\n      this.domain = <Context>response;\n      console.info(\"Domain '\" + this.domain.id + \"' has been loaded.\");\n    });\n  }\n\n  /**\n   *\n   */\n  getFAQLanguages() {\n    console.info(\"Get FAQ languages of domain '\" + this.domainId + \"' ...\");\n    this.domainService.getFAQLanguages(this.domainId).then(response => {\n      this.faqLanguages = <string[]>response;\n      console.info(\"Number of FAQ languages: \" + this.faqLanguages.length);\n\n      this.getSelectableFAQLanguages();\n    });\n  }\n\n  /**\n   *\n   */\n  getSelectableFAQLanguages() {\n    const supportedLanguages = ['en','de','it','fr','pt','se']; // TODO: Get list from server\n\n    this.selectableFAQLanguages.length = 0;\n    for (var lang of supportedLanguages) {\n      console.info(\"Add '\" + lang + \"' to selectable languages.\");\n      if (this.isSelectable(lang)) {\n        this.selectableFAQLanguages.push(lang);\n      }\n    }\n  }\n\n  /**\n   * @return true when language is still selectable and false otherwise\n   */\n  isSelectable(language: string): boolean {\n    for (var lang of this.faqLanguages) {\n      if (language === lang) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   *\n   */\n  addFaq(language: string, topic1Title: string, topic2Title: string, topic3Title: string): void {\n    //alert(\"DEBUG: Add FAQ...\");\n\n    var topics: FaqTopic[] = [];\n\n    if (topic1Title == null || (topic1Title != null && topic1Title.length == 0)) {\n      alert(\"WARNING: Please enter at least one topic title!\");\n      return;\n    }\n\n    var topic1 = new FaqTopic();\n    topic1.title = topic1Title;\n    topics.push(topic1);\n\n    if (topic2Title != null && topic2Title.length > 0) {\n      var topic2 = new FaqTopic();\n      topic2.title = topic2Title;\n      topics.push(topic2);\n    }\n\n    if (topic3Title != null && topic3Title.length > 0) {\n      var topic3 = new FaqTopic();\n      topic3.title = topic3Title;\n      topics.push(topic3);\n    }\n\n    this.domainService.addFAQ(this.domainId, language, topics).then(response => {\n      console.info(\"FAQ added.\");\n      this.document.getElementById('addFaqOverlay').classList.toggle('open-overlay');\n      this.getFAQLanguages();\n    });\n  }\n\n}\n","<div class=\"sub-header\">\n  <p class=\"font-weight-600\" *ngIf=\"domain != null\"><a href=\"/#/dashboard\">Dashboard</a> / <a href=\"/#/domain/{{domainId}}\">{{domain.name}}</a></p>\n</div>\n\n<main class=\"align-center\">\n  <app-domain-navigation [domainId]=\"domainId\" [pageId]=\"'faq'\"></app-domain-navigation>\n  <div class=\"content p-24 justify-center\">\n    <div class=\"container\">\n\n<h2>FAQ</h2>\n<p class=\"ml-24 mid-grey\" *ngIf=\"faqLanguages.length == 0\">No FAQ yet.</p>\n\n<div class=\"ml-24 mid-grey\">\n<ul *ngFor=\"let language of faqLanguages\">\n  <li><a href=\"/#/faq/{{domainId}}/{{language}}\">{{ 'katie.language_' + language | translate }}</a></li>\n</ul>\n</div>\n\n        <br/>\n        <p>\n          <button (click)=\"addFaqOverlay.classList.toggle('open-overlay')\" class=\"fw-600 bg-blue white solid-button\">{{ 'katie.add_faq' | translate }}</button>\n        </p>\n\n        <div class=\"close-overlay overlay\" #addFaqOverlay id=\"addFaqOverlay\">\n          <div class=\"resubmit-form\">\n            <h2>{{ 'katie.add_faq' | translate }}</h2>\n            <p class=\"mt-24\">{{ 'katie.add_faq_instruction' | translate }}</p>\n            <select #language class=\"form-field mt-48\" id=\"answers_protected_by_default\">\n              <option *ngFor=\"let lang of selectableFAQLanguages\" value=\"{{lang}}\">{{ 'katie.language_' + lang | translate }}</option>\n            </select>\n            <input #topic1 id=\"topic1\" class=\"form-field mt-24\" type=\"text\" placeholder=\"Topic\"/>\n            <input #topic2 id=\"topic2\" class=\"form-field mt-24\" type=\"text\" placeholder=\"Topic\"/>\n            <input #topic3 id=\"topic3\" class=\"form-field mt-24\" type=\"text\" placeholder=\"Topic\"/>\n            <div class=\"space-between align-center mt-48\">\n              <button type=\"button\" name=\"close\" class=\"text-button blue mr-24\" (click)=\"addFaqOverlay.classList.toggle('open-overlay')\">{{ 'katie.cancel' | translate }}</button>\n              <button class=\"fw-600 solid-button bg-blue white\" (click)=\"addFaq(language.value, topic1.value, topic2.value, topic3.value)\">{{ 'katie.add' | translate }}</button>\n            </div>\n          </div>\n        </div>\n\n    </div>\n  </div>\n</main>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-domain-navigation',\n  templateUrl: './domain-navigation.component.html',\n  styleUrls: ['./domain-navigation.component.css']\n})\nexport class DomainNavigationComponent implements OnInit {\n\n  @Input()\n  domainId: string;\n\n  @Input()\n  pageId: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"domain-navigation\">\n  <p class=\"font-weight-600\">\n      <!--<img src=\"assets/img/question_mark_circle.svg\" width=\"20px\" alt=\"\" class=\"nav-item-icon\"/>-->\n      <img src=\"assets/img/search.svg\" width=\"20px\" alt=\"\" class=\"nav-item-icon\"/>\n        <span class=\"nav-item-text\">\n          <a *ngIf=\"pageId != 'ask'\" href=\"/#/domain/{{domainId}}\">{{ 'katie.ask_katie' | translate }}</a>\n          <span *ngIf=\"pageId === 'ask'\">{{ 'katie.ask_katie' | translate }}</span>\n        </span>\n      <img src=\"assets/img/icon/qna.svg\" width=\"20px\" alt=\"\" class=\"nav-item-icon\"/>\n        <span class=\"nav-item-text\">\n          <a *ngIf=\"pageId != 'qna'\" href=\"/#/domain/{{domainId}}/qna\">{{ 'katie.questions_and_answers' | translate }}</a>\n          <span *ngIf=\"pageId === 'qna'\">{{ 'katie.questions_and_answers' | translate }}</span>\n        </span>\n      <img src=\"assets/img/icon/faq.svg\" width=\"20px\" alt=\"\" class=\"nav-item-icon\"/>\n        <span class=\"nav-item-text\">\n          <a *ngIf=\"pageId != 'faq'\" href=\"/#/domain/{{domainId}}/faq\">FAQ</a>\n          <span *ngIf=\"pageId === 'faq'\">FAQ</span>\n        </span>\n      <img src=\"assets/img/icon/members.svg\" width=\"20px\" alt=\"\" class=\"nav-item-icon\"/>\n        <span class=\"nav-item-text\">\n          <a *ngIf=\"pageId != 'members'\" href=\"/#/domain/{{domainId}}/members\">{{ 'katie.team_members' | translate }}</a>\n          <span *ngIf=\"pageId === 'members'\">{{ 'katie.team_members' | translate }}</span>\n        </span>\n      <img src=\"assets/img/icon/analytics-graph-bar.svg\" width=\"20px\" alt=\"\" class=\"nav-item-icon\"/>\n        <span class=\"nav-item-text\">\n          <a *ngIf=\"pageId != 'insights'\" href=\"/#/domain/{{domainId}}/insights\">{{ 'katie.insights' | translate }}</a>\n          <span *ngIf=\"pageId === 'insights'\">{{ 'katie.insights' | translate }}</span>\n        </span>\n      <img src=\"assets/img/icon/settings.svg\" width=\"20px\" alt=\"\" class=\"nav-item-icon\"/>\n        <span class=\"nav-item-text\">\n          <a *ngIf=\"pageId != 'settings'\" href=\"/#/domain/{{domainId}}/settings\">{{ 'katie.settings' | translate }}</a>\n          <span *ngIf=\"pageId === 'settings'\">{{ 'katie.settings' | translate }}</span>\n        </span>\n  </p>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { UtilService } from \"../services/util.service\";\n\n@Pipe({\n  name: 'linkify'\n})\nexport class LinkifyPipe implements PipeTransform {\n\n  /**\n   *\n   */\n  constructor(private utilService: UtilService) {}\n\n  /**\n   *\n   */\n  public transform(value: string, ...args: unknown[]): unknown {\n    if (value != null) {\n      console.info(\"DEBUG: Value: \" + value);\n      console.info(\"DEBUG: Number of arguments: \" + args.length);\n      return this.utilService.linkify(value);\n    } else {\n      //console.info(\"DEBUG: No text to linkify provided.\");\n      return null;\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Error } from '../models/error';\nimport { Context } from '../models/context';\nimport { DomainDisplayInformation } from '../models/domain_display_info';\nimport { DomainId } from '../models/domain_id';\nimport { KatieVersion } from '../models/katie_version';\nimport { ServerConfiguration } from '../models/server_configuration';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigurationService {\n\n  baseUrl = environment.apiBaseUrl;\n\n  context: Context;\n\n  constructor(private httpClient: HttpClient, private router: Router, private translate: TranslateService) {\n    console.info(\"ConfigurationService: Loading Configuration service ...\");\n  }\n\n  /**\n   * Add new domain\n   * @param name Domain name, e.g. \"FAQ of Wyona\"\n   * @param answersProtected When true, then answers are protected/private by default. When false, then answers are public.\n   */\n  async addDomain(name: string, answersGenerallyProtected: boolean): Promise<any> {\n    console.info(\"ConfigurationService#addDomain(...): Try to add domain with name '\" + name + \"' (Answers are private by default: \" + answersGenerallyProtected + \") ...\");\n\n    var mailSubjectTag = name;\n\n    var url = this.baseUrl + \"/v1/configuration/domain?name=\" + name + \"&answersGenerallyProtected=\" + answersGenerallyProtected + \"&mailSubjectTag=\" + mailSubjectTag;\n\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.post(url, {}, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          var domainId = <DomainId>response;\n          console.info(\"New Domain Id: \" + domainId.domain_id);\n          resolve(domainId.domain_id)\n          })\n        .catch(response => {\n          alert(\"Response status: \" + response.status);\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured: \" + error.message);\n          if (error.code === \"TODO\") {\n            alert(\"WARNING: \" + \"TODO\");\n            resolve();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject(error.message);\n          }\n        });\n    });\n    //alert(\"DEBUG: Continue ...\");\n    return promise;\n  }\n\n  /**\n   * Get configuration of a particular domain\n   * @param id Domain id\n   * @return domain configuration\n   */\n  async getContext(id: string): Promise<any> {\n    console.info(\"ConfigurationService#getContext(...): Try to get configuration of domain with id '\" + id + \"' ...\");\n\n    var url = this.baseUrl + \"/v1/configuration/context/\" + id;\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.get(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          this.context = <Context>response;\n          //alert(\"Context: \" + this.context.id);\n          console.info(\"Context: \" + this.context.id);\n          resolve(this.context);\n          })\n        .catch(response => {\n          console.debug(\"ConfigurationService#getContext(): Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          if (response.status === 403) {\n            console.info(\"ConfigurationService#getContext(): Access denied, please login!\");\n            // TODO: Get domain name via not protected interface and replace id by name\n            var msg = this.translate.instant('katie.domain_protected', { domain_id:id });\n            this.router.navigate(['/login'], {queryParams: {'message': msg}});\n            resolve(null);\n          } else {\n            alert(\"An error occured: \" + error.code + \", \" + error.message);\n            reject();\n          }\n        });\n    });\n    return promise;\n  }\n\n  /**\n   * Get public display information of a particular domain\n   * @param id Domain id\n   * @return public display information\n   */\n  async getDomainDisplayInformation(id: string): Promise<any> {\n    console.info(\"ConfigurationService#getDomainDisplayInformation(...): Try to get public display info of domain with id '\" + id + \"' ...\");\n\n    var url = this.baseUrl + \"/v1/configuration/domain/\" + id + \"/display-information\";\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.get(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          var displayInfo = <DomainDisplayInformation>response;\n          //alert(\"DEBUG: Domain name: \" + displayInfo.name);\n          console.info(\"Domain name: \" + displayInfo.name);\n          resolve(displayInfo);\n          })\n        .catch(response => {\n          console.debug(\"ConfigurationService#getContext(): Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          alert(\"An error occured: \" + error.code + \", \" + error.message);\n          reject();\n        });\n    });\n    return promise;\n  }\n\n  /**\n   * Get list of all domains\n   * @return list of all domains\n   */\n  async getDomains(): Promise<any> {\n    console.info(\"ConfigurationService#getDomains(...): Get list of all domains ...\");\n\n    var url = this.baseUrl + \"/v1/configuration/context\";\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.get(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          var domains = <Context[]>response;\n          console.info(\"Total number of domains: \" + domains.length);\n          resolve(domains);\n          })\n        .catch(response => {\n          console.debug(\"ConfigurationService#getContext(): Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          if (response.status === 403) {\n            console.info(\"ConfigurationService#getContext(): User not authenticated yet, therefore no list of domains available.\");\n            resolve(null);\n          } else {\n            alert(\"An error occured: \" + error.code + \", \" + error.message);\n            reject();\n          }\n        });\n    });\n    return promise;\n  }\n\n  /**\n   * Get MyKatie domain for signed in user\n   * @return MyKatie domain of signed in user\n   */\n  async getMyKatieDomain(): Promise<any> {\n    console.info(\"ConfigurationService#getMyKatieDomain(): Get MyKatie domain ...\");\n\n    var url = this.baseUrl + \"/v1/configuration/my-katie-domain\";\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.get(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          var domain = <Context>response;\n          console.info(\"MyKatie domain Id: \" + domain.id);\n          resolve(domain);\n          })\n        .catch(response => {\n          console.debug(\"ConfigurationService#getMyKatieDomain(): Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          if (response.status === 403) {\n            console.info(\"ConfigurationService#getMyKatieDomain(): User not authenticated!\");\n            resolve(null);\n          } else if (response.status === 404) {\n            console.info(\"ConfigurationService#getMyKatieDomain(): No MyKatie domain Id configured for signed in user!\");\n            resolve(null);\n          } else {\n            alert(\"An error occured: \" + error.code + \", \" + error.message);\n            reject();\n          }\n        });\n    });\n    return promise;\n  }\n\n  /**\n   * Get version/environment of Katie server\n   * @return version/environment\n   */\n  async getVersion(): Promise<any> {\n    console.info(\"ConfigurationService#getVersion(): Get version/environment of Katie server ...\");\n\n    var url = this.baseUrl + \"/v1/configuration/version\";\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.get(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          var katieVersion = <KatieVersion>response;\n          console.info(\"Version: \" + katieVersion.version);\n          resolve(katieVersion);\n          })\n        .catch(response => {\n          console.debug(\"ConfigurationService#getVersion(): Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          alert(\"An error occured: \" + error.code + \", \" + error.message);\n          reject();\n        });\n    });\n    return promise;\n  }\n\n  /**\n   * Get server configuration of Katie\n   * @return server configuration\n   */\n  async getServerConfiguration(): Promise<any> {\n    console.info(\"ConfigurationService#getServerConfiguration(): Get server configuration of Katie ...\");\n\n    var url = this.baseUrl + \"/v1/configuration\";\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.get(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          var serverConfig = <ServerConfiguration>response;\n          console.info(\"Version: \" + serverConfig.version);\n          resolve(serverConfig);\n          })\n        .catch(response => {\n          console.debug(\"ConfigurationService#getServerConfiguration(): Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          alert(\"An error occured: \" + error.code + \", \" + error.message);\n          reject();\n        });\n    });\n    return promise;\n  }\n\n  /**\n   * Update message / mail body hostname\n   */\n  updateMessageBodyHostname(domainId: string, hostname: string) {\n    console.info(\"Update message / mail body hostname of domain '\" + domainId + \"': \" + hostname);\n\n    var url = this.baseUrl + \"/v1/configuration/domain/\" + domainId + \"/message-body-hostname\";\n\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.put(url, { hostname }, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          var _domainId = response['domain_id'];\n          //alert(\"DEBUG: Message body hostname updated successfully\");\n          console.info(\"Message body hostname of domain '\" + _domainId + \"' updated successfully.\");\n          resolve();\n          //resolve(this.TODO);\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured when trying to update hostname: \" + error.message + \", \" + error.code);\n          if (response.status === 403) {\n            alert(\"Access denied, please login!\");\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject();\n          }\n        });\n    });\n\n    //alert(\"DEBUG: Trying to update hostname ...\");\n    console.info(\"Trying to update hostname ...\");\n    return promise;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as CryptoJS from 'crypto-js';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AesencryptDecryptService {\n\n  constructor() { }\n\n  /**\n   * @param text Plain text\n   * @return encrypted text\n   */\n  encrypt(text: string, secretKey: string): string {\n    return CryptoJS.AES.encrypt(text, secretKey.trim()).toString();\n  }\n\n  /**\n   * @param textToDecrypt Encrypted text\n   * @return decrypted text\n   */\n  decrypt(textToDecrypt: string, secretKey: string): string {\n    return CryptoJS.AES.decrypt(textToDecrypt, secretKey.trim()).toString(CryptoJS.enc.Utf8);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Context } from '../models/context';\nimport { DomainInsights } from '../models/domain_insights';\nimport { ConfigurationService } from \"../services/configuration.service\";\nimport { DomainService } from \"../services/domain.service\";\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-domain-insights',\n  templateUrl: './domain-insights.component.html',\n  styleUrls: ['./domain-insights.component.css']\n})\nexport class DomainInsightsComponent implements OnInit {\n\n  domainId: string;\n\n  lastNumberOfDays: number = 30;\n\n  domain: Context;\n  insights: DomainInsights = new DomainInsights();\n\n  constructor(private configurationService: ConfigurationService, private route: ActivatedRoute, private domainService: DomainService) { }\n\n  ngOnInit(): void {\n    this.domainId = this.route.snapshot.paramMap.get(\"id\");\n    this.getDomain();\n    this.getDomainInsights();\n  }\n\n  /**\n   *\n   */\n  selectTimePeriod(lastDays: number): void {\n    this.lastNumberOfDays = lastDays;\n    //alert(\"DEBUG: Change time period: \" + this.lastNumberOfDays);\n    this.getDomainInsights();\n  }\n\n  /**\n   *\n   */\n  getDomainInsights(): void {\n    this.domainService.getInsights(this.domainId, this.lastNumberOfDays).then(response => {\n      this.insights = <DomainInsights>response;\n      console.info(\"Insights of domain '\" + this.domain.id + \"' have been loaded.\");\n    });\n  }\n\n  /**\n   * Get domain\n   */\n  getDomain(): void {\n    this.configurationService.getContext(this.domainId).then(response => {\n      this.domain = <Context>response;\n      console.info(\"Domain '\" + this.domain.id + \"' has been loaded.\");\n    });\n  }\n\n}\n","<div class=\"sub-header\">\n  <p class=\"font-weight-600\" *ngIf=\"domain != null\"><a href=\"/#/dashboard\">Dashboard</a> / <a href=\"/#/domain/{{domainId}}\">{{domain.name}}</a></p>\n</div>\n\n<main class=\"align-center\">\n  <app-domain-navigation [domainId]=\"domainId\" [pageId]=\"'insights'\"></app-domain-navigation>\n  <div class=\"content p-24 justify-center\">\n    <div class=\"container\">\n\n<h2>{{ 'katie.insights' | translate }}</h2>\n<select class=\"form-field mt-48\" (change)=\"selectTimePeriod(time_period.value)\" id=\"time_period\" #time_period>\n  <option value=\"30\">{{ 'katie.last_30_days' | translate }}</option>\n  <option value=\"60\">{{ 'katie.last_60_days' | translate }}</option>\n  <option value=\"90\">{{ 'katie.last_90_days' | translate }}</option>\n  <option value=\"-1\">{{ 'katie.all_time' | translate }}</option>\n</select>\n<br/>\n<br/>\n<h3>{{ 'katie.summary' | translate }}</h3>\n<br/>\n<p>Number of asked questions: {{insights.numberOfAskedQuestions}}</p>\n<br/>\n<p>Number of answered questions: {{insights.numberOfAnsweredQuestions}}</p>\n<br/>\n<p>Number of received messages: {{insights.numberOfReceivedMessages}}</p>\n<br/>\n<div *ngIf=\"insights.faqPageviews.length > 0\">\n  <p>FAQ Pageviews:</p>\n  <br/>\n  <ul>\n    <li *ngFor=\"let lp of insights.faqPageviews\">{{lp.pageviews}} ({{lp.language}})</li>\n  </ul>\n</div>\n<br/><br/>\n<p>Please send feature requests to <a href=\"mailto:contact@wyona.com?subject=Katie Feature Request\">contact@wyona.com</a>, thanks!</p>\n    </div>\n  </div>\n</main>\n","import { LanguagePageviews } from \"../models/language_pageviews\";\n\n/**\n * Domain insights\n */\nexport class DomainInsights {\n  public faqPageviews: LanguagePageviews[];\n  public numberOfAskedQuestions: number;\n  public numberOfAnsweredQuestions: number;\n  public numberOfReceivedMessages: number;\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { QuestionsService } from \"../services/questions.service\";\nimport { QuestionAnswer } from '../models/question_answer';\n\ndeclare var tinymce: any;\n\n@Component({\n  selector: 'app-improve-trained-qna',\n  templateUrl: './improve-trained-qna.component.html',\n  styleUrls: ['./improve-trained-qna.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ImproveTrainedQnaComponent implements OnInit {\n\n  tinymce_content: string;\n\n  domainId: string;\n  uuid: string;\n  questionAnswer: QuestionAnswer;\n  subQuestion: string;\n  jwtToken: string = null;\n\n  /**\n   *\n   */\n  constructor(private route: ActivatedRoute, private questionsService: QuestionsService, private router: Router) { }\n\n  /**\n   *\n   */\n  ngOnInit(): void {\n    //tinymce.init({selector: \"#tinymce4answer\"});\n\n    this.route\n      .queryParams\n      .subscribe(params => {\n        this.subQuestion = params['q'] || null;\n        this.jwtToken = params['token'] || null;\n      });\n\n    this.domainId = this.route.snapshot.paramMap.get(\"domainid\");\n    this.uuid = this.route.snapshot.paramMap.get(\"uuid\");\n    this.getTrainedAnswerQuestion(this.domainId, this.uuid, this.jwtToken);\n  }\n\n  /**\n   *\n   */\n  getTrainedAnswerQuestion(domainId: string, uuid: string, jwtToken: string): void {\n    console.info(\"Get trained question/answer '\" + domainId + \"/\" + uuid + \"' ...\");\n    this.questionsService.getTrainedQuestionAnswer(domainId, uuid, jwtToken, true).then(response => {\n      this.questionAnswer = <QuestionAnswer>response;\n    });\n  }\n\n  /**\n   *\n   */\n  addQnA(question: string): void {\n    var answer = this.tinymce_content;\n\n    // INFO: Because of a race condition we have to remove tinymce manually, whereas see https://stackoverflow.com/questions/33278834/getting-ns-error-unexpected-while-using-tinymce-in-mozilla and https://ittone.ma/ittone/javascript-import-tinymce-explicitly-in-angular-tinymce-angular/\n    try {\n      tinymce.remove(\"#tinymce4answer\");\n    } catch(e) {\n      alert(\"ERROR: \" + e);\n    }\n\n    console.info(\"Add QnA: \" + question + \" | \" + answer);\n\n    this.questionsService.addQnA(question, answer, this.domainId, this.jwtToken).then(response => {\n      console.info(\"New QnA has been saved.\");\n      this.router.navigate(['/trained-questions-answers/' + this.domainId]);\n    });\n  }\n\n}\n","<div class=\"sub-header\">\n  <p class=\"font-weight-600\">Improve or correct QnA</p>\n</div>\n\n<main class=\"align-center\">\n\n  <div class=\"content p-24 justify-center\">\n    <div class=\"container\">\n      <div>\n      <p>Submitted question: <em>{{subQuestion}}</em></p>\n      <br/>\n      <p *ngIf=\"questionAnswer != null\">Katie's Answer:\n      <br/>\n      <span class=\"answer\" [innerHTML]=\"questionAnswer.answer | linkify\"></span>\n      </p>\n      <br/>\n      <p *ngIf=\"questionAnswer != null\">Original Question associated with Katie's Answer: <em>{{questionAnswer.originalquestion}}</em></p>\n      </div>\n      <br/><br/>\n      <div>\n      <p>There are currently two options in order to improve or correct Katie's answer:</p>\n      <br/>\n      <p>1) Submitted question and the original question are actually the same question, but the answer itself is not correct or could be improved. Please improve or correct answer by clicking on the pencil icon <a href=\"/#/trained-questions-answers/{{domainId}}/{{uuid}}/edit\"><img width=\"20px\" id=\"pencil_icon\" src=\"assets/img/black_pencil.svg\"/></a></p>\n      <br/>\n      <p>2) Katie misunderstood the submitted question, respectively the submitted question and the original question are not the same. Therefore train Katie with a new QnA:</p>\n      <br/>\n      <p><input type=\"text\" size=\"50\" #_question id=\"question\" name=\"question\" value=\"{{subQuestion}}\" class=\"form-field mt-24\"/></p>\n      <br/>\n<editor id=\"tinymce4answer\" outputFormat=\"html\"\n   [(ngModel)]=\"tinymce_content\"\n   [init]=\"{\n     base_url: '/tinymce',\n     suffix: '.min',\n     height: 300,\n     entity_encoding: 'raw',\n     menubar: false,\n     plugins: [\n       'advlist autolink lists link image charmap print preview anchor',\n       'searchreplace visualblocks code fullscreen',\n       'insertdatetime media table paste code help wordcount'\n     ],\n     toolbar:\n       'undo redo | formatselect | bold italic backcolor | link | \\\n       bullist numlist outdent indent | code | help'\n   }\"\n ></editor>\n      <br/>\n      <button class=\"fw-600 bg-blue white solid-button mt-24\" (click)=\"addQnA(_question.value)\" type=\"button\">Add QnA</button>\n      </div>\n    </div>\n  </div>\n</main>\n","/**\n *\n */\nexport class Answer {\n  public uuid: string;\n  public submittedQuestion: string;\n  public answer: string;\n  public dateAnswerModified: number;\n  public answerClientSideEncryptionAlgorithm: string;\n  public email: string;\n  public originalQuestion: string;\n  public dateOriginalQuestion: number;\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthenticationService } from \"../services/authentication.service\";\nimport { User } from '../models/user';\nimport { Context } from '../models/context';\nimport { ServerConfiguration } from '../models/server_configuration';\nimport { ConfigurationService } from \"../services/configuration.service\";\nimport { IamService } from \"../services/iam.service\";\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  user: User;\n  domains: Context[] = [];\n  serverConfig: ServerConfiguration;\n\n  /**\n   *\n   */\n  constructor(private router: Router, private route: ActivatedRoute, private authenticationService: AuthenticationService, private configurationService: ConfigurationService, private iamService: IamService, @Inject(DOCUMENT) private document) { }\n\n  /**\n   *\n   */\n  ngOnInit(): void {\n    this.getDomains();\n    this.getUser();\n  }\n\n  /**\n   * Get all domains associated with signed in user\n   */\n  getServerConfiguration(): void {\n    console.info(\"Get server configuration ...\");\n\n    this.configurationService.getServerConfiguration().then(response => {\n      this.serverConfig = <ServerConfiguration>response;\n    });\n  }\n\n  /**\n   * Get all domains associated with signed in user\n   */\n  getDomains(): void {\n    console.info(\"Get all domains ...\");\n\n    this.configurationService.getDomains().then(response => {\n      this.domains = <Context[]>response;\n    });\n  }\n\n  /**\n   * Add user\n   * @param language Two-letter language code, e.g. \"en\" or \"de\"\n   * @param createMyKatie When true, then create a personal MyKatie domain for this new user\n   */\n  addUser(email: string, username: string, password: string, firstname: string, lastname: string, role: string, language: string, createMyKatie: boolean): void {\n    //alert(\"DEBUG: Create MyKatie: \" + createMyKatie);\n\n    if (email == null || (email != null && email.length == 0)) {\n      alert(\"WARNING: Please enter a valid email address!\");\n      return;\n    }\n\n    if (password == null || (password != null && password.length == 0)) {\n      alert(\"WARNING: Please enter a password according to the requiremnts!\");\n      return;\n    }\n\n    if (username == null || (username != null && username.length == 0)) {\n      username = email;\n    }\n    //alert(\"DEBUG: Add user '\" + username + \"' ...\");\n\n    this.iamService.addUser(email, username, password, firstname, lastname, role, language, createMyKatie).then(response => {\n      alert(\"User has been added successfully.\");\n      this.document.getElementById('addUserOverlay').classList.toggle('open-overlay');\n    });\n  }\n\n  /**\n   * Get user object of signed in user\n   */\n  getUser(): void {\n    this.authenticationService.getUser().then(response => {\n      this.user = <User>response;\n\n      if (this.user !=  null) {\n        //alert(\"DashboardComponent.getUser(): Username: \" + this.user.username);\n        console.info(\"Username: \" + this.user.username);\n        if (this.user.role === \"ADMIN\") {\n          this.getServerConfiguration();\n        }\n      } else {\n        console.debug(\"AskQuestionComponent#getUser(): User not signed in!\");\n      }\n    });\n  }\n\n}\n","<div class=\"sub-header\">\n  <p class=\"font-weight-600\">{{ 'katie.dashboard' | translate }}</p>\n</div>\n\n<main class=\"align-center\">\n\n  <div class=\"content p-24 justify-center\">\n    <div class=\"container\">\n      <h2>Domains</h2>\n\n      <div id=\"introduction\">\n        <p *ngIf=\"domains != null && domains.length > 0\">Please find below a list of all domains <a href=\"https://ukatie.com/#/read-answer?domain-id=ROOT&uuid=8918143c-18f7-46dc-ad71-858f98825cc3\" target=\"_blank\"><img src=\"assets/img/icon/info_black_24dp.svg\" style=\"vertical-align: bottom;\"/></a> you have access to:</p>\n        <p *ngIf=\"domains != null && domains.length === 0\"><strong>INFO: </strong><em>You are not a member of any domains <a href=\"https://ukatie.com/#/read-answer?domain-id=ROOT&uuid=8918143c-18f7-46dc-ad71-858f98825cc3\" target=\"_blank\"><img src=\"assets/img/icon/info_black_24dp.svg\" style=\"vertical-align: bottom;\"/></a> yet.</em></p>\n      </div>\n\n      <ul id=\"domain-list\">\n        <!-- TODO: Add switch to reverse order: <li *ngFor=\"let domain of domains.reverse()\"><p class=\"ml-24 mid-grey text-button\" [routerLink]=\"['/domain/' + domain.id]\">{{ domain.name }}</p></li>-->\n        <li *ngFor=\"let domain of domains\" class=\"domain-name\"><p class=\"ml-24 mid-grey text-button\" [routerLink]=\"['/domain/' + domain.id]\">{{ domain.name }}<!-- ({{ domain.id }})--></p></li>\n      </ul>\n\n      <div *ngIf=\"user != null && user.role === 'ADMIN'\">\n        <br/>\n        <p>\n          <button class=\"fw-600 bg-blue white solid-button\" [routerLink]=\"['/add-domain']\">{{ 'katie.add_domain' | translate }}</button>\n        </p>\n      </div>\n\n      <div *ngIf=\"user != null && user.role === 'ADMIN'\">\n        <br/><br/>\n        <h2>Questions and Answers of all Domains</h2>\n        <p class=\"ml-24 mid-grey text-button\" [routerLink]=\"['/resubmitted-questions']\">Resubmitted Questions</p>\n        <p class=\"ml-24 mid-grey text-button\" [routerLink]=\"['/asked-questions']\">Asked Questions</p>\n\n        <br/><br/>\n        <h2>{{ 'katie.user_management' | translate }}</h2>\n\n        <p class=\"ml-24 mid-grey text-button\" [routerLink]=\"['/iam']\">{{ 'katie.all_users' | translate }}</p>\n        <br/>\n        <p>\n          <button (click)=\"addUserOverlay.classList.toggle('open-overlay')\" class=\"fw-600 bg-blue white solid-button\">{{ 'katie.add_user' | translate }}</button>\n        </p>\n\n            <div class=\"close-overlay overlay\" #addUserOverlay id=\"addUserOverlay\">\n              <div class=\"resubmit-form\">\n                <h2>{{ 'katie.add_user' | translate }}</h2>\n                <!--<p class=\"mt-24\">{{ 'katie.add_user_instruction' | translate }}</p>-->\n                <input #email id=\"email\" class=\"form-field mt-24\" type=\"email\" placeholder=\"E-Mail\"/>\n                <!--<input #username id=\"username\" class=\"form-field mt-24\" type=\"text\" placeholder=\"{{ 'katie.iam_username' | translate }} (optional)\"/>-->\n                <input #password id=\"password\" class=\"form-field mt-24\" type=\"password\" placeholder=\"{{ 'katie.password' | translate }}\"/>\n                <input #firstname id=\"firstname\" class=\"form-field mt-24\" type=\"text\" placeholder=\"{{ 'katie.iam_first_name' | translate }}\"/>\n                <input #lastname id=\"lastname\" class=\"form-field mt-24\" type=\"text\" placeholder=\"{{ 'katie.iam_last_name' | translate }}\"/>\n                <select #role class=\"form-field mt-24\" id=\"role\">\n                  <option value=\"USER\">USER</option>\n                  <option value=\"ADMIN\">ADMIN</option>\n                </select>\n                <select #language class=\"form-field mt-24\" id=\"language\">\n                  <option value=\"en\">{{ 'katie.language_en' | translate }}</option>\n                  <option value=\"de\">{{ 'katie.language_de' | translate }}</option>\n                  <option value=\"pt\">{{ 'katie.language_pt' | translate }}</option>\n                  <option value=\"fr\">{{ 'katie.language_fr' | translate }}</option>\n                </select>\n                <div class=\"form-field mt-24\">\n                  <div style=\"float: left; margin-right: 10px;\"><input type=\"checkbox\" #createMyKatie id=\"createMyKatie\" name=\"createMyKatie\" checked=\"checked\"/></div>\n                  <label for=\"createMyKatie\">{{ 'katie.create_mykatie' | translate }}</label>\n                </div>\n                <div class=\"space-between align-center mt-48\">\n                  <button type=\"button\" name=\"close\" class=\"text-button blue mr-24\" (click)=\"addUserOverlay.classList.toggle('open-overlay')\">{{ 'katie.cancel' | translate }}</button>\n                  <button class=\"fw-600 solid-button bg-blue white\" (click)=\"addUser(email.value, null, password.value, firstname.value, lastname.value, role.value, language.value, createMyKatie.checked)\">{{ 'katie.add' | translate }}</button>\n                  <!--<button class=\"fw-600 solid-button bg-blue white\" (click)=\"addUser(email.value, username.value, password.value, firstname.value, lastname.value, role.value, language.value)\">{{ 'katie.add' | translate }}</button>-->\n                </div>\n              </div>\n            </div>\n\n        <div>\n        <br/><br/>\n        <h2>{{ 'katie.outgoing_mail_server_config' | translate }}</h2>\n\n        <ul *ngIf=\"serverConfig != null\">\n          <li><p class=\"ml-24 mid-grey\">Hostname: {{ serverConfig.emailSenderConfig.host }}</p></li>\n          <li><p class=\"ml-24 mid-grey\">Port: {{ serverConfig.emailSenderConfig.port }}</p></li>\n          <li><p class=\"ml-24 mid-grey\">{{ 'katie.username' | translate }}: {{ serverConfig.emailSenderConfig.username }}</p></li>\n          <li><p class=\"ml-24 mid-grey\">STARTTLS: {{ serverConfig.emailSenderConfig.starttls }}</p></li>\n        </ul>\n        </div>\n\n        <div>\n        <br/><br/>\n        <h2>{{ 'katie.ner' | translate }}</h2>\n\n        <ul *ngIf=\"serverConfig != null\">\n          <li><p class=\"ml-24 mid-grey\">NER Implementation: {{ serverConfig.nerimplementation }}</p></li>\n        </ul>\n        </div>\n\n      </div>\n    </div>\n  </div>\n</main>\n","import { Component, OnInit, Input, Inject, ViewEncapsulation } from '@angular/core';\nimport { AskQuestionService } from \"../../services/ask-question.service\";\nimport { Answer } from \"../../models/answer\";\nimport { TranslateService } from '@ngx-translate/core';\nimport { DOCUMENT } from '@angular/common';\nimport { AuthenticationService } from \"../../services/authentication.service\";\nimport { Username } from '../../models/username';\nimport { ActivatedRoute } from '@angular/router';\nimport { AesencryptDecryptService } from '../../services/aesencrypt-decrypt.service';\n\n@Component({\n  selector: 'app-ask-katie',\n  templateUrl: './ask-katie.component.html',\n  styleUrls: ['./ask-katie.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AskKatieComponent implements OnInit {\n\n  @Input()\n  domainId: string;\n\n  answerReceived: boolean;\n  answer: Answer;\n  answers: Answer[] = [];\n  seeMoreAnswersClicked: boolean = false;\n\n  username: Username;\n\n  errorCode: string = null;\n\n  constructor(private askQuestionService: AskQuestionService, private translateService: TranslateService, @Inject(DOCUMENT) private document, private authenticationService: AuthenticationService, private route: ActivatedRoute, private aesEncryptDecryptService: AesencryptDecryptService) { }\n\n  ngOnInit(): void {\n    // INFO: Init empty answer\n    this.answer = null; //new Answer();\n    this.answerReceived = false;\n\n    this.getUsername();\n\n    this.route\n      .queryParams\n      .subscribe(params => {\n        var question = params['q'] || null;\n        //this.domainId = params['domain-id'] || null;\n\n        if (question != null) {\n          console.info(\"AskKatieComponent#ngOnInit(): Question as query parameter: \" + question);\n          //alert(\"DEBUG: Question as query parameter: \" + question);\n\n          this.setQuestion(question);\n\n          this.askQuestion(question, null, false);\n        }\n      });\n  }\n\n  /**\n   * Set question as input value\n   */\n  private setQuestion(question: string): void {\n    console.debug(\"AskKatieComponent#setQuestion(): Set question: \" + question);\n    this.document.getElementById('question').value = question;\n  }\n\n  /**\n   * Get answer from backend\n   * @param question Question of user\n   * @param email E-Mail address of user in case answer was not helpful\n   * @param toggleOverlay Toggle overlay when true and do not toggle when false\n   */\n  askQuestion(question: string, email: string, toggleOverlay: boolean): void {\n    this.seeMoreAnswersClicked = false;\n\n    if (question.length === 0) {\n      alert(\"WARNING: Please enter a question!\");\n      return;\n    }\n\n    //alert(\"DEBUG: Submit question: \" + question);\n    this.answerReceived = false;\n\n    var language = null;\n    if (email != null) {\n      language = this.translateService.currentLang;\n    }\n\n    this.askQuestionService.askQuestionV2(question, email, this.domainId, language, 2, 0).then(response => {\n      this.answers = <Answer[]>response;\n      //alert(\"DEBUG: Answers received: \" + this.answers.length);\n      this.answerReceived = true;\n\n      if (this.answers.length == 0) {\n        this.answer = new Answer();\n      } else {\n        this.answer = this.answers[0];\n      }\n\n      // INFO: When question was submitted to expert and user is not signed in, whereas also see method below submitQuestionToExpert(string)\n      if (email != null && toggleOverlay) {\n        this.answer[\"email\"] = email;\n        this.answer[\"submittedQuestion\"] = question;\n        this.document.getElementById('overlaySendToExpert').classList.toggle('open-overlay');\n        //alert(\"INFO: Question '\" + question + \"' resubmitted successfully, whereas we will try to answer your question as soon as possible and send you an email to '\" + email + \"'.\");\n      }\n\n    })\n    .catch(response => {\n      this.errorCode = <string>response;\n      if (this.errorCode === \"KNOWLEDGE_BASE_EMPTY\") {\n        //alert(\"DEBUG: No answer available, because knowledge base is empty. Please add QnAs first :-)\");\n      } else {\n        alert(\"ERROR: \" + this.errorCode);\n      }\n\n      this.answerReceived = true;\n      this.answer = null;\n      // TODO: Display errors inside HTML\n    });\n\n/*\n    this.askQuestionService.askQuestion(question, email, this.domainId, language).then(response => {\n      this.answer = <Answer>response;\n      this.answerReceived = true;\n      //alert(\"DEBUG: Answer received: \" + this.answer.answer);\n\n      // INFO: When question was submitted to expert and user is not signed in, whereas also see method below submitQuestionToExpert(string)\n      if (this.answer.email != null && toggleOverlay) {\n        this.document.getElementById('overlaySendToExpert').classList.toggle('open-overlay');\n        //alert(\"INFO: Question '\" + question + \"' resubmitted successfully, whereas we will try to answer your question as soon as possible and send you an email to '\" + email + \"'.\");\n      }\n\n    });\n*/\n  }\n\n  /**\n   * Get and display more answers\n   */\n  seeMoreAnswers(): void {\n    var question = this.document.getElementById('question').value;\n    //alert(\"DEBUG: See more answers to question '\" + question + \"' ...\");\n\n    this.askQuestionService.askQuestionV2(question, null, this.domainId, null, 9, 1).then(response => {\n      this.answers = <Answer[]>response;\n      //alert(\"DEBUG: Number of more answers received: \" + this.answers.length);\n      this.seeMoreAnswersClicked = true;\n    })\n    .catch(response => {\n      this.errorCode = <string>response;\n      if (this.errorCode === \"KNOWLEDGE_BASE_EMPTY\") {\n        //alert(\"DEBUG: No answer available, because knowledge base is empty. Please add QnAs first :-)\");\n      } else {\n        alert(\"ERROR: \" + this.errorCode);\n      }\n\n      // TODO: Display errors inside HTML\n    });\n  }\n\n  /**\n   * Submit question to expert (when user is signed in)\n   * @param question Question of user\n   */\n  submitQuestionToExpert(question: string): void {\n\n    if (question.length === 0) {\n      alert(\"WARNING: Please enter a question!\");\n      return;\n    }\n\n    //alert(\"Submit question to expert: \" + question);\n    this.askQuestionService.submitQuestionToExpert(question, this.domainId).then(response => {\n      this.answer = <Answer>response;\n    });\n  }\n\n  /**\n   * Get username of signed in user\n   */\n  getUsername(): void {\n    this.authenticationService.getUsername().then(response => {\n      this.username = <Username>response;\n\n      if (this.username !=  null) {\n        //alert(\"Username: \" + this.username.username);\n        console.info(\"Username: \" + this.username.username);\n      } else {\n        console.debug(\"AskKatieComponent#getUsername(): User not signed in!\");\n      }\n    });\n  }\n\n  /**\n   * Decrypt encrypted answer\n   * @param password Password to decrypt answer\n   */\n  decryptAnswer(password: string): void {\n    alert(\"Decrypted answer: \" + this.aesEncryptDecryptService.decrypt(this.answer.answer, password));\n    this.document.getElementById('secretKey').value = \"\";\n    this.document.getElementById('overlayDecrypt').classList.toggle('open-overlay');\n  }\n\n  /**\n   *\n   */\n  togglePw() {\n    var passwordType = <HTMLInputElement>document.getElementById(\"secretKey\");\n    var y = <HTMLInputElement>document.getElementById(\"eye_icon\");\n    if (passwordType.type === \"password\") {\n      passwordType.type = \"text\";\n      y.src = \"assets/img/eye_icon_strike.svg\";\n    } else {\n      passwordType.type = \"password\";\n      y.src = \"assets/img/eye_icon.svg\";\n    }\n  }\n\n}\n","<div id=\"ask-katie\">\n  <div class=\"min-padding justify-center\">\n    <div class=\"mt-48 container\">\n      <div id=\"input-form\">\n        <input id=\"question\" #question type=\"text\" size=\"50\" (keydown.enter)=\"askQuestion(question.value, null, false)\" placeholder=\"{{ 'katie.ask_question' | translate }} ...\"/>\n        <button id=\"input-button\" (click)=\"askQuestion(question.value, null, false)\">\n          <img src=\"assets/img/arrow_button.svg\" alt=\"Arrow button\">\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"min-padding justify-center\" *ngIf=\"answer != null && answer.email == null\">\n    <section class=\"mt-48 container\">\n      <div id=\"result\" *ngIf=\"answer != null && answer.answer != null\">\n        <div id=\"answer\" [innerHTML]=\"answer.answer | linkify\"></div> <!-- INFO: In order to have CSS applied, encapsulation has to be set -->\n<!-- INFO: Consider content as safe re XSS (https://angular.io/guide/security#preventing-cross-site-scripting-xss). For example use as answer <answer>Test XSS <b onmouseover=\"alert('KABOOM!')\">click me!</b></answer>\n        <div id=\"answer\" [innerHTML]=\"answer.answer | safecontent: 'html'\"></div>\n-->\n\n        <p *ngIf=\"answer.answerClientSideEncryptionAlgorithm != null && answer.answerClientSideEncryptionAlgorithm === 'aes-256'\" id=\"decrypt\">\n          Answer is encrypted, <button class=\"text-button blue mt-48\" (click)=\"overlayDecrypt.classList.toggle('open-overlay')\">decrypt answer ...</button>\n        </p>\n        <p *ngIf=\"answer.answerClientSideEncryptionAlgorithm != null && answer.answerClientSideEncryptionAlgorithm != 'aes-256'\">\n          Answer is encrypted, but encryption algorithm '{{ answer.answerClientSideEncryptionAlgorithm }}' is not supported!\n        </p>\n\n        <p *ngIf=\"answer.originalQuestion != null\" id=\"original-question\">\n          <em>{{ 'katie.original_question' | translate }}:</em>&#160;<a href=\"/#/domain/{{ domainId }}/qna/{{answer.uuid}}\" target=\"_blank\">\"{{ answer.originalQuestion }}\"</a>\n          <span *ngIf=\"answer.dateOriginalQuestion >= 0\"><br/><em>{{ 'katie.answered_date' | translate }}:</em>&#160;{{ answer.dateOriginalQuestion | epochHumanReadable }}</span>\n          <span *ngIf=\"answer.dateAnswerModified >= 0\"><br/><em>{{ 'katie.last_modified' | translate }}:</em>&#160;{{ answer.dateAnswerModified | epochHumanReadable }}</span>\n        </p>\n\n          <!-- TODO <button (click)=\"source.classList.toggle('opened-dd')\" type=\"button\" name=\"access controll button\" class=\"mid-grey minion text-button mt-24\">Source</button>-->\n          <ul #source class=\"closed-dd p-24 dd-content mt-24\">\n            <!-- TODO <p class=\"mid-grey\">Answer (by {{ respondent }})</p>-->\n          </ul>\n      </div>\n\n      <div id=\"no-result\" *ngIf=\"answer != null && answer.answer == null && answerReceived == true\">\n          <p>{{ 'katie.no_answer_available' | translate }}<br/><button *ngIf=\"username === null\" class=\"text-button blue mt-48\" (click)=\"overlaySendToExpert.classList.toggle('open-overlay')\">{{ 'katie.send_to_expert' | translate }}</button><button *ngIf=\"username != null\" class=\"text-button blue mt-48\" (click)=\"submitQuestionToExpert(question.value)\">{{ 'katie.send_to_expert' | translate }}</button></p>\n      </div>\n\n      <div *ngIf=\"answerReceived == true && answer != null && answer.answer != null\">\n        <p *ngIf=\"answers.length > 1 && !seeMoreAnswersClicked\" class=\"mt-48\">\n          <button class=\"text-button blue\" (click)=\"seeMoreAnswers()\">{{ 'katie.see_more_answers' | translate }} ...</button>\n        </p>\n\n        <div *ngIf=\"seeMoreAnswersClicked\">\n          <div *ngFor=\"let _answer of answers\" class=\"mt-48\">\n            <hr/>\n            <div [innerHTML]=\"_answer.answer | linkify\" class=\"mt-48\"></div>\n\n            <p *ngIf=\"_answer.originalQuestion != null\" id=\"original-question\">\n              <em>{{ 'katie.original_question' | translate }}:</em>&#160;<a href=\"/#/domain/{{ domainId }}/qna/{{_answer.uuid}}\" target=\"_blank\">\"{{ _answer.originalQuestion }}\"</a>\n              <span *ngIf=\"_answer.dateOriginalQuestion >= 0\"><br/><em>{{ 'katie.answered_date' | translate }}:</em>&#160;{{ _answer.dateOriginalQuestion | epochHumanReadable }}</span>\n              <span *ngIf=\"_answer.dateAnswerModified >= 0\"><br/><em>{{ 'katie.last_modified' | translate }}:</em>&#160;{{ _answer.dateAnswerModified | epochHumanReadable }}</span>\n            </p>\n          </div>\n        </div>\n\n        <hr class=\"mt-48\"/>\n\n        {{ 'katie.answer_not_helpful' | translate }} <button *ngIf=\"username === null\" class=\"text-button blue mt-48\" (click)=\"overlaySendToExpert.classList.toggle('open-overlay')\">{{ 'katie.send_to_expert' | translate }}</button><button *ngIf=\"username != null\" class=\"text-button blue mt-48\" (click)=\"submitQuestionToExpert(question.value)\">{{ 'katie.send_to_expert' | translate }}</button>\n      </div>\n    </section>\n  </div>\n\n  <div *ngIf=\"answer == null && answerReceived == true\" class=\"min-padding justify-center\">\n    <section class=\"mt-48 container\">\n    <p *ngIf=\"errorCode == 'KNOWLEDGE_BASE_EMPTY'\">{{ 'katie.knowledge_base_empty' | translate }} <a href=\"/#/trained-questions-answers/{{domainId}}/add\">{{ 'katie.please_add_qna' | translate }}</a></p>\n    <p *ngIf=\"errorCode != 'KNOWLEDGE_BASE_EMPTY'\">An Error occured: {{errorCode}}</p>\n    </section>\n  </div>\n\n  <div class=\"min-padding justify-center\" *ngIf=\"answer != null && answer.email != null\">\n    <section id=\"email-submitted-feedback\" class=\"container mt-48\">\n      <h3>{{ 'katie.thanks_for_resubmitting_question' | translate }}</h3>\n      <p class=\"mt-24\">{{ 'katie.will_try_to_answer_your_question' | translate }} <strong>'{{ answer.submittedQuestion }}'</strong> {{ 'katie.as_soon_as_possible_and_will_send_you_an_email' | translate }} <strong>'{{ answer.email }}'</strong>.</p>\n    </section>\n  </div>\n\n  <div class=\"close-overlay overlay\" #overlaySendToExpert id=\"overlaySendToExpert\">\n    <div class=\"resubmit-form\">\n      <h2>{{ 'katie.answer_not_helpful' | translate }}</h2>\n      <p class=\"mt-24\">{{ 'katie.please_enter_email' | translate }}</p>\n      <input #email id=\"email\" class=\"form-field mt-24\" type=\"text\" placeholder=\"Email\" (keydown.enter)=\"askQuestion(question.value, email.value, true)\" />\n      <div class=\"mt-24 flex\">\n        <img class=\"mr-8\" src=\"assets/img/icon/lock_icon.svg\" alt=\"Icon of a lock\">\n        <p class=\"minion\">{{ 'katie.handle_your_date_with_care' | translate }}</p>\n      </div>\n      <div class=\"space-between align-center mt-48\">\n        <button type=\"button\" name=\"close\" class=\"text-button blue mr-24\" (click)=\"overlaySendToExpert.classList.toggle('open-overlay')\">{{ 'katie.cancel' | translate }}</button>\n        <button class=\"fw-600 solid-button bg-blue white\" (click)=\"askQuestion(question.value, email.value, true)\">Submit</button>\n      </div>\n      </div>\n  </div>\n\n  <div class=\"close-overlay overlay\" #overlayDecrypt id=\"overlayDecrypt\">\n      <div class=\"resubmit-form\">\n        <h2>Decrypt answer</h2>\n        <p class=\"mt-24\">Please enter password in order to decrypt answer.</p>\n        <div class=\"icon-form-field mt-24\">\n          <input #secretKey id=\"secretKey\" type=\"password\" placeholder=\"{{ 'katie.password' | translate }}\" (keydown.enter)=\"decryptAnswer(secretKey.value)\" />\n          <div role=\"button\" (click)=togglePw() class=\"align-center mr-16\">\n            <img width=\"24px\" height=\"21px\" id=\"eye_icon\" src=\"assets/img/eye_icon.svg\">\n          </div>\n        </div>\n        <div class=\"space-between align-center mt-48\">\n          <button type=\"button\" name=\"close\" class=\"text-button blue mr-24\" (click)=\"overlayDecrypt.classList.toggle('open-overlay')\">{{ 'katie.cancel' | translate }}</button>\n          <button class=\"fw-600 solid-button bg-blue white\" (click)=\"decryptAnswer(secretKey.value)\">Decrypt</button>\n        </div>\n      </div>\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Context } from '../models/context';\nimport { ActivatedRoute } from '@angular/router';\nimport { ConfigurationService } from \"../services/configuration.service\";\n\n@Component({\n  selector: 'app-domain-ask',\n  templateUrl: './domain-ask.component.html',\n  styleUrls: ['./domain-ask.component.css']\n})\nexport class DomainAskComponent implements OnInit {\n\n  domainId: string;\n  domain: Context;\n\n  constructor(private configurationService: ConfigurationService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.domainId = this.route.snapshot.paramMap.get(\"id\");\n    this.getDomain();\n  }\n\n  /**\n   *\n   */\n  getDomain(): void {\n    this.configurationService.getContext(this.domainId).then(response => {\n      this.domain = <Context>response;\n      console.info(\"Domain '\" + this.domain.id + \"' has been loaded.\");\n    });\n  }\n\n}\n","<div class=\"sub-header\">\n  <p class=\"font-weight-600\" *ngIf=\"domain != null\"><a href=\"/#/dashboard\">Dashboard</a> / <a href=\"/#/domain/{{domainId}}\">{{domain.name}}</a></p>\n</div>\n\n<main class=\"align-center\">\n  <app-domain-navigation [domainId]=\"domainId\" [pageId]=\"'ask'\"></app-domain-navigation>\n\n  <div class=\"content p-24 justify-center\">\n    <div class=\"container\">\n      <h2>{{ 'katie.ask_katie' | translate }}</h2>\n      <app-ask-katie [domainId]=\"domainId\"></app-ask-katie>\n    </div>\n  </div>\n</main>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { QuestionAnswer } from '../models/question_answer';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { QuestionsService } from \"../services/questions.service\";\nimport { Context } from '../models/context';\nimport { ConfigurationService } from \"../services/configuration.service\";\n\n@Component({\n  selector: 'app-trained-questions-answers',\n  templateUrl: './trained-questions-answers.component.html',\n  styleUrls: ['./trained-questions-answers.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TrainedQuestionsAnswersComponent implements OnInit {\n\n  domainId: string;\n  domain: Context;\n\n  qAnswers: QuestionAnswer[] = [];\n\n  /**\n   *\n   */\n  constructor(private route: ActivatedRoute, private questionsService: QuestionsService, private configurationService: ConfigurationService) { }\n\n  /**\n   *\n   */\n  ngOnInit(): void {\n    this.domainId = this.route.snapshot.paramMap.get(\"domainid\");\n    console.info(\"Domain Id: \" + this.domainId);\n    this.getDomain();\n\n    this.getTrainedQuestionsAnswers();\n  }\n\n  /**\n   *\n   */\n  getDomain(): void {\n    this.configurationService.getContext(this.domainId).then(response => {\n      this.domain = <Context>response;\n      console.info(\"Domain '\" + this.domain.id + \"' has been loaded.\");\n    });\n  }\n\n  /**\n   *\n   */\n  deleteQnA(uuid: string): void {\n    //alert(\"DEBUG: Delete QnA '\" + this.domainId + \"/\" + uuid + \"' ...\");\n    this.questionsService.deleteTrainedQnA(this.domainId, uuid).then(response => {\n      //alert(\"DEBUG: Trained QnA '\" + uuid + \"' has been deleted.\");\n      console.info(\"Trained QnA '\" + uuid + \"' has been deleted.\");\n\n      // INFO: Reload trained QnAs\n      this.getTrainedQuestionsAnswers();\n    });\n  }\n\n  /**\n   * Get trained questions/answers\n   */\n  getTrainedQuestionsAnswers(): void {\n    console.info(\"Domain Id: \" + this.domainId);\n    this.questionsService.getTrainedQuestionsAnswers(this.domainId, null, null).then(response => {\n      this.qAnswers = <QuestionAnswer[]>response;\n      //alert(\"DEBUG: Number of trained questions/answers: \" + this.qAnswers.length);\n      if (this.qAnswers !=  null) {\n        console.info(\"Number of trained questions/answers: \" + this.qAnswers.length);\n      } else {\n        console.info(\"No trained questions/answers available!\");\n      }\n    });\n  }\n}\n","<div class=\"sub-header\">\n  <p *ngIf=\"domain != null\" class=\"font-weight-600\">{{ 'katie.questions_and_answers' | translate }} (<a href=\"/#/domain/{{domainId}}/qna\">{{ domain.name }}</a>)</p>\n</div>\n\n<main class=\"align-center\">\n  <div class=\"content justify-center flex min-padding\">\n\n<!-- TODO: Implement left hand side navigation\n    <nav class=\"side-nav mt-64\">\n      <div class=\"active sidenav-item\">\n        <img src=\"assets/img/inbox_icon.svg\" alt=\"\">\n        <a class=\"ml-24\" href=\"#\">Inbox</a>\n      </div>\n      <div class=\"sidenav-item\">\n        <a href=\"#\">Open</a>\n      </div>\n      <div class=\"sidenav-item\">\n        <a href=\"\">Archive</a>\n      </div>\n    </nav>\n-->\n\n    <div class=\"large mt-24\">\n\n<!-- TODO: Implement filter\n      <section class=\"toolbar space-between\">\n        <input type=\"checkbox\" name=\"\" value=\"\">\n        <button type=\"button\" name=\"filter\" class=\"icon\">\n          <img src=\"assets/img/filter_icon.svg\" alt=\"icon of a filter\">\n        </button>\n      </section>\n-->\n\n      <h2>Trained Questions and Answers</h2>\n      <br/>&#160;<br/>\n      <p class=\"mt-24 mb-24\" *ngIf=\"qAnswers.length === 0 && domainId != null\">\n        No trained questions/answers for domain '<em>{{ domainId }}</em>'.\n      </p>\n      <p class=\"mt-24 mb-24\" *ngIf=\"qAnswers.length === 0 && domainId === null\">\n        No trained questions/answers.\n      </p>\n      <ul>\n        <!-- TODO: Add switch to reverse order: <li *ngFor=\"let question of qAnswers.reverse()\">-->\n        <li *ngFor=\"let question of qAnswers\">\n          <table>\n            <tr>\n              <td valign=\"top\"><strong>Q:</strong></td>\n              <td><span>{{ question.originalquestion }}</span></td>\n            </tr>\n            <tr>\n              <td valign=\"top\"><span class=\"answer\"><p><strong>A:</strong></p></span></td>\n              <td valign=\"top\"><span class=\"answer\" [innerHTML]=\"question.answer | linkify\"></span></td>\n            </tr>\n          </table>\n          <p class=\"mid-grey\">Created: {{ question.dateOriginalQuestion | epochHumanReadable }} | <a href=\"/#/trained-questions-answers/{{ domainId }}/{{ question.uuid }}/edit\"><img width=\"20px\" id=\"pencil_icon\" src=\"assets/img/black_pencil.svg\"/></a>&#160;&#160;&#160;&#160;&#160;&#160;<a (click)=\"deleteQnA(question.uuid)\"><img width=\"25px\" id=\"trash_icon\" src=\"assets/img/icon/delete_black_24dp.svg\"/></a></p>\n          <!-- TODO: <p class=\"mid-grey\">Last modified: {{ question.dateLastModified | epochHumanReadable }}</p>-->\n          <br/>&#160;<br/>\n        </li>\n      </ul>\n    </div>\n  </div>\n</main>\n","import { FaqQuestion } from '../models/faq_question';\n\n/**\n *\n */\nexport class FaqTopic {\n  public id: string;\n  public title: string;\n  public questions: FaqQuestion[];\n\n  public moreQnAs: number;\n}\n","import { Component } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { TranslateService } from '@ngx-translate/core';\nimport { PlatformLocation } from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n/**\n *\n */\nexport class AppComponent {\n  title = 'admin-backend';\n\n  /**\n   *\n   */\n  public constructor(private titleService: Title, private translate: TranslateService, private pLocation: PlatformLocation) {\n    var browserLanguage = navigator.language;\n    //alert(\"DEBUG: Browser language: \" + browserLanguage);\n    // INFO: See <button id=\"button_lang_en\" class=\"mild-opacity\" inside src/app/home/home.component.html\n    if (browserLanguage.indexOf(\"de\") === 0) {\n      translate.setDefaultLang('de');\n    } else if (browserLanguage.indexOf(\"pt\") === 0) {\n      translate.setDefaultLang('pt');\n    } else if (browserLanguage.indexOf(\"fr\") === 0) {\n      translate.setDefaultLang('fr');\n    } else {\n      translate.setDefaultLang('en');\n    }\n  }\n\n  /**\n   *\n   */\n  ngOnInit(): void {\n    this.setTitle(\"Katie\");\n  }\n\n  /**\n   * @return true when header should be displayed and false otherwise\n   */\n  showHeader(): boolean {\n    var currentRoute = this.pLocation.hash;\n    //alert(\"DEBUG: Current route: \" + currentRoute);\n    if (currentRoute.indexOf(\"login\") === 2 || currentRoute.indexOf(\"forgot-password\") === 2 || currentRoute.indexOf(\"reset-password\") === 2 || currentRoute.indexOf(\"add-domain\") === 2) { // INFO: Do not show header in the case of the \"login\" or \"forgot password\" screen\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   *\n   */\n  public setTitle(newTitle: string) {\n    this.titleService.setTitle(newTitle);\n  }\n\n  /**\n   * Change language of translation\n   */\n  useLanguage(language: string) {\n    this.translate.use(language);\n  }\n}\n","<div class=\"background-img\">\n\n<!--<div class=\"fixed-background-img\"></div>-->\n\n<!-- Header (logo, Login, etc.) -->\n<app-header *ngIf=\"showHeader()\"></app-header>\n\n<!-- Routed components go here -->\n<div>\n  <router-outlet></router-outlet>\n</div>\n\n<app-footer></app-footer>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from '../models/user';\nimport { IamService } from \"../services/iam.service\";\n\n@Component({\n  selector: 'app-iam-update-user',\n  templateUrl: './iam-update-user.component.html',\n  styleUrls: ['./iam-update-user.component.css']\n})\nexport class IamUpdateUserComponent implements OnInit {\n\n  userid: string;\n  user: User;\n\n  /**\n   *\n   */\n  constructor(private route: ActivatedRoute, private router: Router, private iamService: IamService) { }\n\n  /**\n   *\n   */\n  ngOnInit(): void {\n    this.userid = this.route.snapshot.paramMap.get(\"userid\");\n    this.getUser();\n  }\n\n  /**\n   * Get user data\n   */\n  getUser() {\n    this.iamService.getUser(this.userid).then(response => {\n      this.user = <User>response;\n    });\n  }\n\n  /**\n   * Update user data\n   * @param firstname First name of user\n   * @param lastname Last name of user\n   * @param password Password of user changed by ADMIN\n   * @param confirmedPassword Confirmed password of user changed by ADMIN\n   * @param language Language of user, e.g. \"de\" or \"en\"\n   */\n  updateUser(firstname: string, lastname: string, email: string, password: string, confirmedPassword: string, language: string) {\n    console.info(\"Update user with id '\" + this.userid + \"' ...\");\n    if (password != null && password.length > 0 && password != confirmedPassword) {\n      alert(\"WARN: Password and confirmed password do not match!\");\n      return;\n    }\n\n    var updatedUser: User = {id: this.userid, username: null, role: null, email: email, firstname: firstname, lastname: lastname, isExpert: null, isModerator: null, password: password, language: language, myKatieId: null};\n    this.iamService.updateUser(updatedUser).then(response => {\n      alert(\"INFO: User has been updated successfully.\");\n      console.info(\"User has been updated successfully.\");\n    });\n  }\n\n}\n","<div class=\"sub-header\" *ngIf=\"user != null\">\n  <p class=\"font-weight-600\">Update User</p>\n</div>\n\n<main class=\"align-center\">\n\n  <div class=\"content p-24 justify-center\">\n    <div class=\"container\" *ngIf=\"user != null\">\n      <table>\n        <tr><td>{{ 'katie.iam_username' | translate }}:</td><td>{{user.username}}</td></tr>\n        <tr><td>{{ 'katie.iam_first_name' | translate }}:</td><td><input class=\"form-field mt-12\" type=\"text\" size=\"50\" #_firstName id=\"firstName\" name=\"firstName\" value=\"{{user.firstname}}\"/></td></tr>\n        <tr><td>{{ 'katie.iam_last_name' | translate }}:</td><td><input class=\"form-field mt-12\" type=\"text\" size=\"50\" #_lastName id=\"lastName\" name=\"lastName\" value=\"{{user.lastname}}\"/></td></tr>\n        <tr><td>E-Mail:</td><td><input class=\"form-field mt-12\" type=\"text\" size=\"50\" #_email id=\"email\" name=\"email\" value=\"{{user.email}}\"/></td></tr>\n        <tr>\n          <td>{{ 'katie.language' | translate }}:</td>\n          <td>\n            <select #_language class=\"form-field mt-24\" id=\"language\" name=\"language\">\n              <option value=\"en\" selected=\"selected\" *ngIf=\"user.language === 'en'\">{{ 'katie.language_en' | translate }}</option>\n              <option value=\"en\" *ngIf=\"user.language != 'en'\">{{ 'katie.language_en' | translate }}</option>\n\n              <option value=\"de\" selected=\"selected\" *ngIf=\"user.language === 'de'\">{{ 'katie.language_de' | translate }}</option>\n              <option value=\"de\" *ngIf=\"user.language != 'de'\">{{ 'katie.language_de' | translate }}</option>\n\n              <option value=\"pt\" selected=\"selected\" *ngIf=\"user.language === 'pt'\">{{ 'katie.language_pt' | translate }}</option>\n              <option value=\"pt\" *ngIf=\"user.language != 'pt'\">{{ 'katie.language_pt' | translate }}</option>\n            </select>\n          </td>\n        </tr>\n        <tr><td>{{ 'katie.password' | translate }}:</td><td><input class=\"form-field mt-12\" type=\"password\" size=\"50\" #_password id=\"password\" name=\"password\" value=\"\"/></td></tr>\n        <tr><td>Confirmed Password:</td><td><input class=\"form-field mt-12\" type=\"password\" size=\"50\" #_confirmedpassword id=\"confirmedpassword\" name=\"confirmedpassword\" value=\"\"/></td></tr>\n      </table>\n      <br/>\n      <button class=\"fw-600 bg-blue white solid-button mt-24\" (click)=\"updateUser(_firstName.value, _lastName.value, _email.value, _password.value, _confirmedpassword.value, _language.value)\" type=\"button\">Update User</button>\n    </div>\n  </div>\n</main>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { QuestionsService } from \"../services/questions.service\";\nimport { QuestionAnswer } from '../models/question_answer';\n\n@Component({\n  selector: 'app-rate-answer',\n  templateUrl: './rate-answer.component.html',\n  styleUrls: ['./rate-answer.component.css']\n})\nexport class RateQuestionComponent implements OnInit {\n\n  domainId: string;\n  uuid: string;\n  rating: string;\n\n  constructor(private router: Router, private route: ActivatedRoute, private questionsService: QuestionsService) { }\n\n  ngOnInit(): void {\n    this.route\n      .queryParams\n      .subscribe(params => {\n        this.domainId = params['domain-id'] || 'NO_DOMAIN_ID_QUERY_PARAMETER';\n        this.uuid = params['uuid'] || 'NO_UUID_QUERY_PARAMETER';\n        //alert(\"Query parameter: \" + this.uuid);\n        console.info(\"Query parameter: \" + this.uuid);\n        this.rating = params['rating'] || 'NO_RATING_QUERY_PARAMETER';\n      });\n    this.rateAnswer(this.domainId, this.uuid, this.rating);\n  }\n\n  /**\n   *\n   */\n  rateAnswer(domainId: string, uuid: string, rating: string): void {\n    //alert(\"Rate answer of question '\" + domainId + \"/\" + uuid + \"': \" + rating);\n\n    this.questionsService.rateAnswer(domainId, uuid, rating).then(response => {\n      var qna = <QuestionAnswer>response;\n      if (qna !=  null) {\n        alert(\"Thank you for rating the Answer '\" + qna.answer + \"' of your question '\" + qna.originalquestion + \"'.\");\n      } else {\n        console.info(\"No question available for UUID '\" + uuid + \"'!\");\n      }\n    });\n  }\n}\n","<main>\n<h2>Rate answer</h2>\n\n<p>UUID: {{ uuid }}</p>\n<p>Rating: {{ rating }}</p>\n\n<a href=\"\">Ask another question ...</a>\n</main>\n","import { Component, OnInit } from '@angular/core';\nimport { IamService } from \"../services/iam.service\";\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  usernameSubmitted: boolean = false;\n\n  constructor(private iamService: IamService) { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * Send username to server in order reset password\n   * @param username Username (or email)\n   */\n  submitUsername(username: string): void {\n    console.info(\"Send '\" + username + \"' to server in order to reset password ...\");\n    this.iamService.submitUsername(username).then(response => {\n      this.usernameSubmitted = true;\n    });\n  }\n\n  /**\n   */\n  tryAgain(): void {\n    this.usernameSubmitted = false;\n  }\n}\n","<main>\n  <div id=\"forgot-password-container\">\n    <a href=\"/\"><img src=\"assets/img/logo.svg\" alt=\"logo\"/></a>\n\n    <h2 class=\"mt-24\">{{ 'katie.forgot_password' | translate }}</h2>\n\n    <div *ngIf=\"!usernameSubmitted\">\n      <p class=\"mt-16\">\n        {{ 'katie.enter_email' | translate }}\n      </p>\n\n      <form>\n        <input #username id=\"username\" class=\"form-field mt-48\" type=\"email\" placeholder=\"{{ 'katie.username' | translate }}\" (keydown.enter)=\"submitUsername(username.value)\"/>\n      </form>\n\n      <section class=\"mt-48\">\n        <button (click)=\"submitUsername(username.value)\" class=\"fw-600 bg-blue white solid-button\" type=\"submit\">{{ 'katie.next' | translate }}</button>\n      </section>\n    </div>\n\n    <div *ngIf=\"usernameSubmitted\">\n      <p class=\"mt-16\">\n        {{ 'katie.forgot_password_notification_sent' | translate }}\n      </p>\n\n      <section class=\"mt-48\">\n        <button type=\"button\" class=\"blue text-button\" (click)=\"tryAgain()\">{{ 'katie.resend_username' | translate }}</button>\n      </section>\n    </div>\n  </div>\n</main>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { AnswerResubmittedQuestionComponent } from './answer-resubmitted-question/answer-resubmitted-question.component';\nimport { ResubmittedQuestionsComponent } from './resubmitted-questions/resubmitted-questions.component';\nimport { LoginComponent } from './login/login.component';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { AskQuestionComponent } from './ask-question/ask-question.component';\nimport { RateQuestionComponent } from './rate-answer/rate-answer.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { DisplayAnswerOfResubmittedQuestionComponent } from './display-answer-of-resubmitted-question/display-answer-of-resubmitted-question.component';\nimport { HomeComponent } from './home/home.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { DomainComponent } from './domain/domain.component';\nimport { AskedQuestionsComponent } from './asked-questions/asked-questions.component';\nimport { TrainedQuestionsAnswersComponent } from './trained-questions-answers/trained-questions-answers.component';\nimport { TrainedQuestionAnswerComponent } from './trained-question-answer/trained-question-answer.component';\nimport { ApproveAnswerComponent } from './approve-answer/approve-answer.component';\nimport { IamComponent } from './iam/iam.component';\nimport { HeaderComponent } from './shared/header/header.component';\nimport { FooterComponent } from './shared/footer/footer.component';\nimport { DataSharingService } from './services/data-sharing.service';\nimport { SafecontentPipe } from './pipes/safecontent.pipe';\nimport { ImproveTrainedQnaComponent } from './improve-trained-qna/improve-trained-qna.component';\nimport { AddQnaComponent } from './add-qna/add-qna.component';\nimport { FaqComponent } from './faq/faq.component';\nimport { IamUpdateUserComponent } from './iam-update-user/iam-update-user.component';\nimport { LinkifyPipe } from './pipes/linkify.pipe';\nimport { EpochHumanReadablePipe } from './pipes/epoch-human-readable.pipe';\nimport { EditorModule, TINYMCE_SCRIPT_SRC } from '@tinymce/tinymce-angular';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { AddDomainComponent } from './add-domain/add-domain.component';\nimport { IamUpdateProfileComponent } from './iam-update-profile/iam-update-profile.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { ViewQnaComponent } from './view-qna/view-qna.component';\nimport { DomainFaqComponent } from './domain-faq/domain-faq.component';\nimport { DomainMembersComponent } from './domain-members/domain-members.component';\nimport { DomainSettingsComponent } from './domain-settings/domain-settings.component';\nimport { DomainNavigationComponent } from './shared/domain-navigation/domain-navigation.component';\nimport { DomainInsightsComponent } from './domain-insights/domain-insights.component';\nimport { DomainWebhooksComponent } from './domain-webhooks/domain-webhooks.component';\nimport { DomainWebhookDeliveriesComponent } from './domain-webhook-deliveries/domain-webhook-deliveries.component';\nimport { MyKatieComponent } from './my-katie/my-katie.component';\nimport { DomainAskComponent } from './domain-ask/domain-ask.component';\nimport { AskKatieComponent } from './shared/ask-katie/ask-katie.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AnswerResubmittedQuestionComponent,\n    ResubmittedQuestionsComponent,\n    LoginComponent,\n    AskQuestionComponent,\n    RateQuestionComponent,\n    LogoutComponent,\n    DisplayAnswerOfResubmittedQuestionComponent,\n    HomeComponent,\n    DashboardComponent,\n    DomainComponent,\n    AskedQuestionsComponent,\n    TrainedQuestionsAnswersComponent,\n    TrainedQuestionAnswerComponent,\n    ApproveAnswerComponent,\n    IamComponent,\n    HeaderComponent,\n    SafecontentPipe,\n    ImproveTrainedQnaComponent,\n    AddQnaComponent,\n    FaqComponent,\n    FooterComponent,\n    IamUpdateUserComponent,\n    LinkifyPipe,\n    EpochHumanReadablePipe,\n    ForgotPasswordComponent,\n    AddDomainComponent,\n    IamUpdateProfileComponent,\n    ResetPasswordComponent,\n    ViewQnaComponent,\n    DomainFaqComponent,\n    DomainMembersComponent,\n    DomainSettingsComponent,\n    DomainNavigationComponent,\n    DomainInsightsComponent,\n    DomainWebhooksComponent,\n    DomainWebhookDeliveriesComponent,\n    MyKatieComponent,\n    DomainAskComponent,\n    AskKatieComponent\n  ],\n  imports: [\n    BrowserModule,\n    EditorModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient]\n            }\n    })\n  ],\n  providers: [DataSharingService, { provide: TINYMCE_SCRIPT_SRC, useValue: 'tinymce/tinymce.min.js' }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n// required for AOT compilation\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http);\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { QuestionsService } from \"../services/questions.service\";\nimport { ResubmittedQuestion } from '../models/resubmitted_question';\nimport { QuestionAnswer } from '../models/question_answer';\nimport { AuthenticationService } from \"../services/authentication.service\";\nimport { ConfigurationService } from \"../services/configuration.service\";\nimport { Context } from '../models/context';\nimport { AesencryptDecryptService } from '../services/aesencrypt-decrypt.service';\n\nimport { Inject }  from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\ndeclare var tinymce: any;\n\n@Component({\n  selector: 'app-trained-question-answer',\n  templateUrl: './trained-question-answer.component.html',\n  styleUrls: ['./trained-question-answer.component.css']\n})\nexport class TrainedQuestionAnswerComponent implements OnInit {\n\n  tinymce_content: string;\n\n  domainId: string;\n\n  uuid: string;\n  questionAnswer: QuestionAnswer;\n\n  question: string;\n  status: string;\n  trained: boolean;\n  answer: string;\n  answerClientSideEncrypted: boolean;\n  answerClientSideEncryptedAlgorithm: string;\n  email: string;\n  answerLinkType: string;\n  fcmtoken: string;\n  slackChannelId: string;\n  emailFrom: string;\n  remoteAddress: string;\n  respondent: string;\n  rating: string;\n  feedback: string;\n  //timestampResubmitted: int;\n\n  context: Context;\n\n  ownershipRadio: string;\n  qaOwnership: string;\n\n  /**\n   *\n   */\n  constructor(private router: Router, private route: ActivatedRoute, private questionsService: QuestionsService, private authenticationService: AuthenticationService, private configurationService: ConfigurationService, private aesEncryptDecryptService: AesencryptDecryptService, @Inject(DOCUMENT) private document) { }\n\n  /**\n   *\n   */\n  ngOnInit(): void {\n    //tinymce.init({selector: \"#tinymce4answer\"});\n\n    this.ownershipRadio = \"iam_source\"; // Initially checked\n\n    this.domainId = this.route.snapshot.paramMap.get(\"domainid\");\n    //alert(\"DEBUG: Domain Id: \" + this.domainId);\n    this.uuid = this.route.snapshot.paramMap.get(\"uuid\");\n\n    this.getTrainedAnswerQuestion(this.domainId, this.uuid);\n  }\n\n  /**\n   *\n   */\n  toggleEditQuestion() {\n    //alert(\"DEBUG: Toggle edit question.\");\n    if (!this.document.getElementById('question').isContentEditable) {\n      //alert(\"DEBUG: Enable editing of question\");\n      this.document.getElementById('editBtn').innerHTML = \"<img src='assets/img/icon/check_circle_outline_black_24dp.svg' title='Finish editing question'/>\";\n\n      this.document.getElementById('question').contentEditable = \"true\";\n    } else {\n      var updatedQuestion = this.document.getElementById('question').innerHTML;\n      //alert(\"DEBUG: Save updated question: \" + updatedQuestion);\n      this.questionsService.updateQuestionOfTrainedQnA(this.domainId, this.uuid, updatedQuestion).then(response => {\n        //alert(\"DEBUG: Question has been saved.\");\n        console.info(\"Question with UUID '\" + this.uuid + \"' has been updated successfully.\");\n      });\n\n      this.document.getElementById('editBtn').innerHTML = \"<img src='assets/img/icon/edit_black_24dp.svg' title='Edit question, for example to fix typos'/>\";\n\n      this.document.getElementById('question').contentEditable = \"false\";\n    }\n  }\n\n  /**\n   * Encrypt answer\n   * @param password Secret key in order to encrypt answer\n   */\n  encryptAnswer(password: string): void {\n      var unencryptedAnswer = this.document.getElementById('answer').value;\n      if (unencryptedAnswer != null && unencryptedAnswer.length > 0 && password != null && password.length > 0) {\n        alert(\"DEBUG: Encrypt answer '\" + unencryptedAnswer + \"' ...\");\n        this.answer = this.aesEncryptDecryptService.encrypt(unencryptedAnswer, password);\n        this.answerClientSideEncrypted = true;\n        alert(\"DEBUG: Encrypted answer: \" + this.answer);\n        this.document.getElementById('answer').value = this.answer;\n        // TODO: Hide textarea\n        this.document.getElementById('encryptOverlay').classList.toggle('open-overlay');\n      } else {\n        alert(\"Cannot encrypt answer, because either no answer or no password  provided yet!\");\n        this.answer = null;\n      }\n  }\n\n  /**\n   * Decrypt answer\n   * @param password Secret key in order to decrypt answer\n   */\n  decryptAnswer(password: string): void {\n      var encryptedAnswer = this.document.getElementById('answer').value;\n      alert(\"DEBUG: Decrypt answer: \" + encryptedAnswer);\n      if (encryptedAnswer != null && encryptedAnswer.length > 0 && password != null && password.length > 0) {\n        alert(\"DEBUG: Decrypt answer '\" + encryptedAnswer + \"' ...\");\n        this.answer = this.aesEncryptDecryptService.decrypt(encryptedAnswer, password);\n        this.answerClientSideEncrypted = false;\n        alert(\"DEBUG: Decrypted answer: \" + this.answer);\n        this.document.getElementById('answer').value = this.answer;\n        this.document.getElementById('decryptOverlay').classList.toggle('open-overlay');\n      } else {\n        alert(\"Cannot decrypt answer, because either no encrypted answer or no password  provided yet!\");\n        this.answer = null;\n      }\n  }\n\n  /**\n   * Decrypt saved answer\n   * @param password Secret key in order to decrypt answer\n   */\n  decryptSavedAnswer(password: string): void {\n      var encryptedAnswer = this.answer;\n      alert(\"DEBUG: Try to decrypt answer: \" + encryptedAnswer);\n      if (encryptedAnswer != null && encryptedAnswer.length > 0 && password != null && password.length > 0) {\n        alert(\"DEBUG: Decrypt answer '\" + encryptedAnswer + \"' ...\");\n        var decryptedAnswer = this.aesEncryptDecryptService.decrypt(encryptedAnswer, password);\n        alert(\"DEBUG: Decrypted answer: \" + decryptedAnswer);\n        this.document.getElementById('decryptAnswerOverlay').classList.toggle('open-overlay');\n/*\n        this.answer = this.aesEncryptDecryptService.decrypt(encryptedAnswer, password);\n        this.answerClientSideEncrypted = false;\n        alert(\"DEBUG: Decrypted answer: \" + this.answer);\n        this.document.getElementById('answer').value = this.answer;\n*/\n      } else {\n        alert(\"Cannot decrypt answer, because either no encrypted answer or no password  provided yet!\");\n      }\n  }\n\n  /**\n   *\n   */\n  getTrainedAnswerQuestion(domainId: string, uuid: string): void {\n    console.info(\"Get trained question/answer '\" + domainId + \"/\" + uuid + \"' ...\");\n    this.questionsService.getTrainedQuestionAnswer(domainId, uuid, null, true).then(response => {\n      this.questionAnswer = <QuestionAnswer>response;\n\n      this.question = this.questionAnswer.originalquestion;\n      this.answer = this.questionAnswer.answer;\n      this.tinymce_content = this.questionAnswer.answer;\n      //alert(\"DEBUG: Original question of trained question/answer was submitted by: \" + this.questionAnswer.email);\n      //alert(\"DEBUG: Trained question/answer is public: \" + this.questionAnswer.isPublic);\n\n      this.qaOwnership = this.questionAnswer.ownership;\n\n/*\n      this.getContextConfigurationAndResetOwnership(domainId);\n\n      this.answerClientSideEncryptedAlgorithm = this.reQuestion.answerClientSideEncryptedAlgorithm;\n      if (this.answerClientSideEncryptedAlgorithm != null) {\n        //alert(\"DEBUG: Client side encryption algorithm: \" + this.answerClientSideEncryptedAlgorithm);\n      } else {\n        //alert(\"DEBUG: Answer not encrypted\");\n      }\n\n      this.email = this.reQuestion.email;\n      //alert(\"DEBUG: Email: \" + this.email);\n\n      this.answerLinkType = this.reQuestion.answerLinkType;\n      this.fcmtoken = this.reQuestion.fcmtoken;\n      this.slackChannelId = this.reQuestion.slackChannelId;\n      this.emailFrom = this.reQuestion.emailFrom;\n      this.remoteAddress = this.reQuestion.remoteAddress;\n      this.respondent = this.reQuestion.respondentUserId;\n      this.rating = this.reQuestion.rating;\n      this.feedback = this.reQuestion.feedback;\n      //this.timestampResubmitted = this.reQuestion.timestampResubmitted;\n      if (this.reQuestion !=  null) {\n        //alert(\"Question: \" + this.reQuestion.question);\n        console.info(\"Question: \" + this.reQuestion.question);\n      } else {\n        console.info(\"No question available for UUID '\" + uuid + \"'!\");\n      }\n*/\n    });\n  }\n\n  /**\n   *\n   */\n  train(uuid: string): void {\n    alert(\"Train AskKatie with answer of resubmitted question with UUID '\" + uuid);\n    console.info(\"Train AskKatie with answer of resubmitted question with UUID '\" + uuid);\n\n    this.questionsService.train(uuid).then(response => {\n      //alert(\"DEBUG: AskKatie trained.\");\n      console.info(\"AskKatie trained.\");\n      //this.reQuestion = <ResubmittedQuestion>response;\n    });\n  }\n\n  /**\n   * Delete resubmitted question\n   * @param uuid UUID of resubmitted question\n   */\n  deleteResubmittedQuestion(uuid: string): void {\n    //alert(\"DEBUG: Delete resubmitted question '\" + uuid + \"'\");\n    console.info(\"Delete resubmitted question '\" + uuid + \"'\");\n\n    this.questionsService.deleteResubmittedQuestion(uuid).then(response => {\n      //alert(\"DEBUG: Resubmitted question '\" + uuid + \"' has been deleted.\");\n      console.info(\"Resubmitted question '\" + uuid + \"' has been deleted.\");\n      this.router.navigate(['/resubmitted-questions/' + this.domainId]);\n    });\n  }\n\n  /**\n   * Update question/answer\n   * @param answer Updated answer\n   */\n  updateQuestionAnswer(): void {\n  //updateQuestionAnswer(answer: string): void {\n    //alert(\"DEBUG: Selected ownership: \" + this.ownershipRadio);\n    console.info(\"Selected ownership: \" + this.ownershipRadio);\n\n    var answer = this.tinymce_content;\n\n    // INFO: Because of a race condition we have to remove tinymce manually, whereas see https://stackoverflow.com/questions/33278834/getting-ns-error-unexpected-while-using-tinymce-in-mozilla and https://ittone.ma/ittone/javascript-import-tinymce-explicitly-in-angular-tinymce-angular/\n    try {\n      tinymce.remove(\"#tinymce4answer\");\n    } catch(e) {\n      alert(\"ERROR: \" + e);\n    }\n\n\n    if (answer === null || answer.length === 0) {\n      alert(\"WARN: No answer provided, please make sure to enter an answer before submitting!\");\n      return; \n    }\n \n    //alert(\"DEBUG: Update trained question/answer '\" + this.uuid + \"': \" + answer);\n    console.info(\"Update trained question/answer '\" + this.uuid + \"': \" + answer);\n\n    this.questionsService.updateTrainedQuestionAnswer(this.domainId, this.uuid, answer, this.ownershipRadio).then(response => {\n      //alert(\"DEBUG: Answer of trained question/answer has been updated.\");\n      console.info(\"Answer with UUID '\" + this.uuid + \"' has been saved.\");\n\n      //alert(\"DEBUG: Redirect ...\");\n      console.info(\"Redirect ...\");\n      // TODO: Reload current page, instead redirecting to overview\n      //this.router.navigate(['/answer-question'], {queryParams: {'uuid': this.uuid }});\n      this.router.navigate(['/trained-questions-answers/' + this.domainId]);\n    });\n  }\n\n  /**\n   *\n   */\n  getContextConfigurationAndResetOwnership(domainId: string): void {\n    console.info(\"Get domain '\" + domainId + \"' ...\");\n\n\n    this.configurationService.getContext(domainId).then(response => {\n    this.context = <Context>response;\n\n      if (this.context !=  null) {\n        console.info(\"Answers of context '\" + this.context.id + \"' generally protected: \" + this.context.answersGenerallyProtected);\n        if (this.context.answersGenerallyProtected === true) {\n          this.ownershipRadio = \"iam_context\";\n        } else {\n          this.ownershipRadio = \"iam_public\";\n        }\n      } else {\n        console.info(\"Something went wrong!\");\n      }\n    });\n  }\n\n}\n","<div class=\"sub-header\">\n  <p class=\"font-weight-600\">Questions and Answers</p>\n</div>\n\n<main class=\"align-center\">\n  <div class=\"min-padding mt-24 justify-center\">\n    <div class=\"large\">\n      <section class=\"toolbar\">\n        <button type=\"button\" name=\"back_button\" class=\"icon\">\n          <img src=\"assets/img/icon/arrow_back.svg\" alt=\"backwards button\" [routerLink]=\"['/trained-questions-answers/' + domainId]\">\n        </button>\n        <div class=\"flex\">\n<!-- TODO: Implement deleting trained question\n          <button type=\"button\" name=\"delete\" class=\"icon ml-48 mr-12\">\n            <img src=\"assets/img/bin.svg\" (click)=\"deleteResubmittedQuestion(uuid)\" alt=\"icon of a bin\">\n          </button>\n-->\n<!-- TODO: Implement \"Assign to me\"\n          <button type=\"button\" name=\"assign\" class=\"icon mr-12\">\n            <img src=\"assets/img/human_icon.svg\" alt=\"icon of a human\">\n          </button>\n-->\n          <button *ngIf=\"status === 'answer-pending'\" (click)=\"access_controll.classList.toggle('opened-dd')\" type=\"button\" name=\"access control button\" class=\"icon\">\n            <img src=\"assets/img/icon/lock_icon.svg\" alt=\"\">\n          </button>\n          <ul #access_controll class=\"closed-dd p-24 dd-content mt-48 transform-translateX50\">\n            <li class=\"flex align-center\">\n              <input type=\"radio\" name=\"ownership\" [(ngModel)]=\"ownershipRadio\" [value]=\"'iam_source'\" id=\"source\"/>\n              &#160;&#160;\n              <img src=\"assets/img/icon/lock_icon.svg\" alt=\"\">\n              <div class=\"ml-8 text-align-left\">\n                <p>Private</p>\n                <p class=\"minion\">Only you and questioner have access</p>\n              </div>\n            </li>\n            <li class=\"flex align-center mt-24\">\n              <input type=\"radio\" name=\"ownership\" [(ngModel)]=\"ownershipRadio\" [value]=\"'iam_context'\" id=\"context\"/>\n              &#160;&#160;\n              <img src=\"assets/img/icon/apartment.svg\" alt=\"\">\n              <div class=\"ml-8 text-align-left\">\n                <p>Organisation / Corporate / Domain</p>\n                <p class=\"minion\">Everyone within the organisation has access</p>\n              </div>\n            </li>\n            <li class=\"flex align-center mt-24\">\n              <input type=\"radio\" name=\"ownership\" [(ngModel)]=\"ownershipRadio\" [value]=\"'iam_public'\" id=\"public\"/>\n              &#160;&#160;\n              <img src=\"assets/img/icon/world.svg\" alt=\"\">\n              <div class=\"ml-8 text-align-left\">\n                <p>Public</p>\n                <p class=\"minion\">Everyone has access</p>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </section>\n      <div class=\"mr-12 ml-12\">\n        <section class=\"mt-48 mb-48\">\n          <div class=\"\">\n            <h2 class=\"mt-8\"><span contenteditable=\"false\" id=\"question\">{{ question }}</span>&#160;&#160;<button id=\"editBtn\" (click)=\"toggleEditQuestion()\"><img src=\"assets/img/icon/edit_black_24dp.svg\" title=\"Edit question, for example to fix typos\"/></button></h2>\n            <div class=\"mt-24\" *ngIf=\"status != 'answer-pending'\">\n              <!--<h3 class=\"mid-grey\">Originally answered by TODO{{ respondent }}</h3>-->\n              <section class=\"mt-48\">\n<editor id=\"tinymce4answer\" outputFormat=\"html\"\n   [(ngModel)]=\"tinymce_content\"\n   [init]=\"{\n     base_url: '/tinymce',\n     suffix: '.min',\n     height: 300,\n     entity_encoding: 'raw',\n     menubar: false,\n     plugins: [\n       'advlist autolink lists link image charmap print preview anchor',\n       'searchreplace visualblocks code fullscreen',\n       'insertdatetime media table paste code help wordcount'\n     ],\n     toolbar:\n       'undo redo | formatselect | bold italic backcolor | link | \\\n       bullist numlist outdent indent | code | help'\n   }\"\n ></editor>\n                <br/>\n                <button class=\"fw-600 bg-blue white solid-button mt-24\" (click)=\"updateQuestionAnswer()\" type=\"button\">{{ 'katie.update_answer' | translate }}</button>\n                <!--<button class=\"fw-600 bg-blue white solid-button mt-24\" (click)=\"updateQuestionAnswer(_answer.value)\" type=\"button\">{{ 'katie.update_answer' | translate }}</button>-->\n              </section>\n            </div>\n            <br />\n            <button *ngIf=\"answerClientSideEncryptedAlgorithm != null\" (click)=\"decryptAnswerOverlay.classList.toggle('open-overlay')\">Decrypt answer ...</button>\n\n            <div class=\"close-overlay overlay\" #decryptAnswerOverlay id=\"decryptAnswerOverlay\">\n              <div class=\"resubmit-form\">\n                <h2>Decrypt encrypted answer</h2>\n                <p class=\"mt-24\">Please enter a password in order to decrypt answer using client side encryption <a href=\"https://cryptojs.gitbook.io/docs/#the-cipher-algorithms\" target=\"_blank\">(info)</a></p>\n                <input #passwordDecryptAnswer id=\"passwordDecryptAnswer\" class=\"form-field mt-24\" type=\"password\" placeholder=\"Password\" (keydown.enter)=\"decryptSavedAnswer(passwordDecryptAnswer.value)\" />\n                <div class=\"space-between align-center mt-48\">\n                  <button type=\"button\" name=\"close\" class=\"text-button blue mr-24\" (click)=\"decryptAnswerOverlay.classList.toggle('open-overlay')\">Cancel</button>\n                  <button class=\"fw-600 solid-button bg-blue white\" (click)=\"decryptSavedAnswer(passwordDecryptAnswer.value)\">Decrypt</button>\n                </div>\n              </div>\n            </div>\n\n            <br /><br />\n\n            <!-- TODO: Implement \"More information\" as overlay -->\n            <button (click)=\"meta_info.classList.toggle('opened-dd')\" type=\"button\" name=\"meta-info button\" class=\"blue text-button mt-24\">More information</button>\n          </div>\n          <section #meta_info class=\"closed-dd\">\n            <div class=\"mt-24\">\n              <h3 class=\"mid-grey\">Domain Id</h3>\n              <p class=\"mt-8\">{{ domainId }}</p>\n            </div>\n            <div class=\"mt-24\" *ngIf=\"status != 'answer-pending'\">\n              <h3 class=\"mid-grey\">Ownership</h3>\n              <p class=\"mt-8\" *ngIf=\"qaOwnership != null\">{{qaOwnership}}</p>\n              <p class=\"mt-8\" *ngIf=\"qaOwnership === null\">WARNING: No ownerhip set</p>\n            </div>\n            <div class=\"mt-24\" *ngIf=\"trained === false && status != 'answer-pending'\">\n              <button class=\"fw-600 bg-blue white solid-button mt-24\" (click)=\"train(uuid)\" type=\"button\">Train Katie with answer</button>\n            </div>\n            <div class=\"mt-24\" *ngIf=\"trained === true\">\n              <h3 class=\"mid-grey\">AI trained</h3>\n              <p class=\"mt-8\">{{ trained }}</p>\n            </div>\n            <div class=\"mt-24\" *ngIf=\"email != null\">\n              <h3 class=\"mid-grey\">Asked by user with email</h3>\n              <p class=\"mt-8\">{{ email }} (Remote address: {{ remoteAddress }})</p>\n            </div>\n            <div class=\"mt-24\" *ngIf=\"answerLinkType != null\">\n              <h3 class=\"mid-grey\">Link type:</h3>\n              <p>{{ answerLinkType }}</p>\n            </div>\n            <div class=\"mt-24\" *ngIf=\"fcmtoken != null\">\n              <h3 class=\"mid-grey\">FCM token</h3>\n              <p>{{ fcmtoken }} (Remote address: {{ remoteAddress }})</p>\n            </div>\n            <div class=\"mt-24\" *ngIf=\"slackChannelId != null\">\n              <h3 class=\"mid-grey\">Slack channel Id</h3>\n              <p>{{ slackChannelId }}</p>\n            </div>\n            <div class=\"mt-24\" *ngIf=\"emailFrom != null\">\n              <h3 class=\"mid-grey\">E-mail from address</h3>\n              <p>{{ emailFrom }}</p>\n            </div>\n            <div *ngIf=\"status === 'answer-rated'\">\n              <h3 class=\"mid-grey mt-24\">Rating</h3>\n              <p class=\"mt-8\">{{ rating }}</p>\n            </div>\n            <div *ngIf=\"status === 'answer-rated'\">\n              <h3 class=\"mid-grey mt-24\">Feedback</h3>\n              <p class=\"mt-8\">{{ feedback }}</p>\n            </div>\n            <div class=\"mt-24\">\n              <h3 class=\"mid-grey\">UUID</h3>\n              <p class=\"mt-8\">{{ uuid }}</p>\n            </div>\n          </section>\n        </section>\n      </div>\n    </div>\n  </div>\n</main>\n","import { Component, OnInit } from '@angular/core';\nimport { QuestionsService } from \"../services/questions.service\";\nimport { ResubmittedQuestion } from '../models/resubmitted_question';\nimport { AuthenticationService } from \"../services/authentication.service\";\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Context } from '../models/context';\nimport { ConfigurationService } from \"../services/configuration.service\";\n\n@Component({\n  selector: 'app-resubmitted-questions',\n  templateUrl: './resubmitted-questions.component.html',\n  styleUrls: ['./resubmitted-questions.component.css']\n})\nexport class ResubmittedQuestionsComponent implements OnInit {\n\n  domainId: string;\n  domain: Context;\n\n  questions: ResubmittedQuestion[] = [];\n  pendingQuestions: ResubmittedQuestion[] = [];\n\n  constructor(private questionsService: QuestionsService, private authenticationService: AuthenticationService, private route: ActivatedRoute, private router: Router, private configurationService: ConfigurationService) { }\n\n  /**\n   *\n   */\n  ngOnInit(): void {\n    this.domainId = this.route.snapshot.paramMap.get(\"domainid\") || null;\n    if (this.domainId != null) {\n      this.getDomain();\n    }\n\n    this.getPendingResubmittedQuestions();\n\n    this.getAllResubmittedQuestions(20, 0);\n  }\n\n  /**\n   *\n   */\n  getDomain(): void {\n    this.configurationService.getContext(this.domainId).then(response => {\n      this.domain = <Context>response;\n      console.info(\"Domain '\" + this.domain.id + \"' has been loaded.\");\n    });\n  }\n\n  /**\n   * Get all resubmitted questions\n   */\n  getAllResubmittedQuestions(limit: number, offset: number): void {\n    var status = null; // INFO: Don't set status in order to get all resubmitted questions\n    console.info(\"Domain Id: \" + this.domainId);\n    this.questionsService.getResubmittedQuestions(status, this.domainId, limit, offset).then(response => {\n      this.questions = <ResubmittedQuestion[]>response;\n      //alert(\"Number of questions: \" + this.questions.length);\n      if (this.questions !=  null) {\n        console.info(\"Number of questions: \" + this.questions.length);\n      } else {\n        console.info(\"No questions available!\");\n      }\n    });\n\n/*\n    this.questions = [\n      { 'uuid': '0b6a346e-d5ea-4d4a-bb2f-053f70abe84d', 'question':'What is the highest mountain of the world?', 'email':'TODO', 'status':'TODO' },\n      { 'uuid': '0b6a346e-d5ea-4d4a-bb2f-053f70abe84d', 'question':'TODO', 'email':'TODO', 'status':'TODO' }\n    ];\n*/\n  }\n\n  /**\n   * Get resubmitted questions, which have not been answered yet\n   */\n  getPendingResubmittedQuestions(): void {\n    //var status = \"answer-rated\";\n    var status = \"answer-pending\";\n    if (this.domainId != null) {\n      console.info(\"Get resubmitted questions of domain Id '\" + this.domainId + \"' with status '\" + status + \"' ...\");\n    } else {\n      console.info(\"Get resubmitted questions of all domains with status '\" + status + \"' ...\");\n    }\n    this.questionsService.getResubmittedQuestions(status, this.domainId, 10, 0).then(response => {\n      this.pendingQuestions = <ResubmittedQuestion[]>response;\n      //alert(\"Number of pending questions: \" + this.pendingQuestions.length);\n      if (this.pendingQuestions !=  null) {\n        console.info(\"Number of pending questions: \" + this.pendingQuestions.length);\n      } else {\n        console.info(\"No pending questions available!\");\n      }\n    });\n  }\n\n}\n","<div *ngIf=\"domainId != null\" class=\"sub-header\">\n  <p class=\"font-weight-600\">{{ 'katie.questions_and_answers' | translate }} (<a href=\"/#/domain/{{domainId}}/qna\">{{ domain.name }}</a>)</p>\n</div>\n<div *ngIf=\"domainId === null\" class=\"sub-header\">\n  <p class=\"font-weight-600\">{{ 'katie.questions_and_answers' | translate }}</p>\n</div>\n\n<main class=\"align-center\">\n\n  <div class=\"content justify-center flex min-padding\">\n\n<!-- TODO: Implement left hand side navigation\n    <nav class=\"side-nav mt-64\">\n      <div class=\"active sidenav-item\">\n        <img src=\"assets/img/inbox_icon.svg\" alt=\"\">\n        <a class=\"ml-24\" href=\"#\">Inbox</a>\n      </div>\n      <div class=\"sidenav-item\">\n        <a href=\"#\">Open</a>\n      </div>\n      <div class=\"sidenav-item\">\n        <a href=\"\">Archive</a>\n      </div>\n    </nav>\n-->\n\n    <div class=\"large mt-24\">\n\n<!-- TODO: Implement filter\n      <section class=\"toolbar space-between\">\n        <input type=\"checkbox\" name=\"\" value=\"\">\n        <button type=\"button\" name=\"filter\" class=\"icon\">\n          <img src=\"assets/img/filter_icon.svg\" alt=\"icon of a filter\">\n        </button>\n      </section>\n-->\n\n      <h2 id=\"title-pending-questions\">Pending questions</h2>\n      <p class=\"mt-24 mb-24\" *ngIf=\"pendingQuestions.length === 0 && domainId != null\">\n        No pending questions for domain '<em>{{ domain.name }}</em>'.\n      </p>\n      <p class=\"mt-24 mb-24\" *ngIf=\"pendingQuestions.length === 0 && domainId === null\">\n        No pending questions.\n      </p>\n      <ul>\n        <li [routerLink]=\"['/answer-question']\" [queryParams]=\"{uuid: question.uuid}\" class=\"open-question question\" *ngFor=\"let question of pendingQuestions\">\n          <div class=\"flex align-center\">\n            <input type=\"checkbox\" name=\"\" value=\"\">\n            <p class=\"text-button ml-12\">{{ question.question }}</p>\n          </div>\n          <p class=\"mid-grey\">{{ question.timestampResubmitted | epochHumanReadable }}</p>\n        </li>\n      </ul>\n\n      <h2 id=\"title-all-questions\">All questions</h2>\n      <ul>\n        <li [routerLink]=\"['/answer-question']\" [queryParams]=\"{uuid: question.uuid}\" class=\"question\" *ngFor=\"let question of questions\">\n          <div class=\"flex align-center\">\n            <input type=\"checkbox\" name=\"\" value=\"\">\n            <a class=\"ml-12\">{{ question.question }}</a>\n          </div>\n          <p class=\"mid-grey\">{{ 'katie.' + question.status | translate }} / {{ 'katie.trained_' + question.trained | translate }} | {{ question.timestampResubmitted | epochHumanReadable }}</p>\n        </li>\n      </ul>\n    </div>\n  </div>\n</main>\n","import { Component, OnInit } from '@angular/core';\nimport { ConfigurationService } from \"../services/configuration.service\";\n\n@Component({\n  selector: 'app-add-domain',\n  templateUrl: './add-domain.component.html',\n  styleUrls: ['./add-domain.component.css']\n})\nexport class AddDomainComponent implements OnInit {\n\n  domainCreated: boolean = false;\n  newDomainId: string;\n\n  constructor(private configurationService: ConfigurationService) { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   *\n   */\n  addDomain(name: string, answersProtectedByDefault: boolean): void {\n    console.info(\"Add domain: \" + name + \" (Answers protected by default: \" + answersProtectedByDefault + \")\");\n    this.configurationService.addDomain(name, answersProtectedByDefault).then(response => {\n      this.domainCreated = true;\n      this.newDomainId = response;\n      console.info(\"New domain created: \" + this.newDomainId);\n    });\n  }\n}\n","<main>\n  <div id=\"add-domain-container\">\n    <a href=\"/#/dashboard\"><img src=\"assets/img/logo.svg\" alt=\"logo\"/></a>\n\n    <h2 class=\"mt-24\">{{ 'katie.add_domain' | translate }}</h2>\n\n    <div *ngIf=\"!domainCreated\">\n      <form>\n        <p class=\"mt-16\">\n          {{ 'katie.add_domain_intro1' | translate }}\n        </p>\n        <input #domain_name id=\"domain_name\" class=\"form-field mt-48\" type=\"text\" placeholder=\"{{ 'katie.domain_name' | translate }}\"/>\n\n        <br/>\n        <br/>\n        <br/>\n\n        <p class=\"mt-16\">\n          {{ 'katie.add_domain_intro2' | translate }}\n        </p>\n        <select class=\"form-field mt-48\" id=\"answers_protected_by_default\" #answers_protected_by_default>\n          <option value=\"false\">{{ 'katie.public' | translate }}</option>\n          <option value=\"true\">{{ 'katie.private' | translate }}</option>\n        </select>\n      </form>\n\n      <section class=\"mt-48\">\n        <button type=\"button\" name=\"close\" class=\"text-button blue mr-24\" [routerLink]=\"['/dashboard']\">{{ 'katie.cancel' | translate }}</button>\n        <button (click)=\"addDomain(domain_name.value, answers_protected_by_default.value)\" class=\"fw-600 bg-blue white solid-button\" type=\"submit\">{{ 'katie.add' | translate }}</button>\n      </section>\n    </div>\n\n    <div *ngIf=\"domainCreated\">\n      <p class=\"mt-16\">\n        {{ 'katie.domain_created_successfully' | translate }}\n      </p>\n\n      <section class=\"mt-48\">\n        <button type=\"button\" class=\"blue text-button\" [routerLink]=\"['/domain/' + newDomainId]\">{{ 'katie.go_to_new_domain' | translate }}</button>\n      </section>\n      <section class=\"mt-48\">\n        <button type=\"button\" class=\"blue text-button\" [routerLink]=\"['/dashboard']\">{{ 'katie.back_to_dashboard' | translate }}</button>\n      </section>\n    </div>\n  </div>\n</main>\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\n\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Error } from '../models/error';\n\nimport { Message } from '../models/message';\nimport { Username } from '../models/username';\nimport { UserDetails } from '../models/userdetails';\nimport { User } from '../models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  baseUrl = environment.apiBaseUrl;\n\n  message: Message;\n  username: Username;\n  userDetails: UserDetails;\n  user: User;\n\n  /**\n   *\n   */\n  constructor(private httpClient: HttpClient) {\n    console.info(\"AuthenticationService: Loading Authentication service ...\");\n    console.info(\"API base URL: \" + this.baseUrl);\n  }\n\n  /**\n   * @param token JWT token\n   */\n  doLoginUsingJWT(token: string): Promise<any> {\n    //alert('Login using JWT ...');\n    console.info(\"Login using JWT ...\");\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization':  'Bearer ' + token\n      })\n    };\n\n    let body = {};\n\n    var url = this.baseUrl + \"/v1/auth/login\";\n    console.info(\"POST \" + url);\n\n    let promise = new Promise((resolve, reject) => {\n      //alert(\"DEBUG: Login using JWT token ...\");\n      this.httpClient.post(url, body, httpOptions)\n        .toPromise()\n        .then(response => {\n          this.userDetails = <UserDetails>response;\n          //alert(\"DEBUG: Username: \" + this.userDetails.username);\n          console.info(\"DEBUG: Username: \" + this.userDetails.username);\n          resolve(this.userDetails)\n          })\n        .catch(response => {\n          alert(\"AuthenticationService.doLoginUsingJWT(): Login failed: Response status \" + response.status);\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured: \" + error.message);\n          if (error.code === \"TODO\") {\n            alert(\"WARNING: \" + \"TODO\");\n            resolve();\n          } else {\n            alert(\"AuthenticationService.doLoginUsingJWT(): An error occured: \" + error.message);\n            reject(error.message);\n          }\n        });\n    });\n    //alert(\"DEBUG: Continue login ...\");\n    return promise;\n  }\n\n  /**\n   *\n   */\n  doLogin(email: string, password: string): Promise<any> {\n    //alert('Login ...');\n    console.info(\"Login ...\");\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n\n    var url = this.baseUrl + \"/v1/auth/login?rememberMe=true\";\n    console.info(\"POST \" + url);\n\n/*\n    this.httpClient.post<any>(url, { email, password }, httpOptions).subscribe(response => {\n      console.log(response);\n      alert(\"Response: \" + response);\n      },\n      err => console.log(err)\n    );\n*/\n\n    let promise = new Promise((resolve, reject) => {\n      //alert(\"TODO\");\n      //this.httpClient.post(url, \"{\\\"email\\\": \\\"\" + email + \"\\\", \\\"password\\\": \\\"\" + password + \"\\\"}\", httpOptions)\n      this.httpClient.post(url, { email, password }, httpOptions)\n        .toPromise()\n        .then(response => {\n          this.userDetails = <UserDetails>response;\n          //alert(\"DEBUG: Username: \" + this.userDetails.username);\n          console.info(\"Username: \" + this.userDetails.username);\n          resolve(this.userDetails)\n          })\n        .catch(response => {\n          alert(\"Login failed: \" + response.status);\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured: \" + error.message);\n          if (error.code === \"TODO\") {\n            alert(\"WARNING: \" + \"TODO\");\n            resolve();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject(error.message);\n          }\n        });\n    });\n    //alert(\"DEBUG: Continue login ...\");\n    return promise;\n  }\n\n  /**\n   *\n   */\n  doLogout(): Promise<any> {\n    //alert('DEBUG: Logout ...');\n    console.info(\"Logout ...\");\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n\n    var url = this.baseUrl + \"/v1/auth/logout\";\n    console.info(\"GET \" + url);\n\n    let promise = new Promise((resolve, reject) => {\n      //alert(\"TODO\");\n      this.httpClient.get(url, httpOptions)\n        .toPromise()\n        .then(response => {\n          this.message = <Message>response;\n          //alert(\"Message: \" + this.message.message);\n          console.info(\"Message: \" + this.message.message);\n          resolve(this.message)\n          })\n        .catch(response => {\n          alert(\"Logout failed: \" + response.status);\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured: \" + error.message);\n          if (error.code === \"TODO\") {\n            alert(\"WARNING: \" + \"TODO\");\n            resolve();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject(error.message);\n          }\n        });\n    });\n    //alert(\"Continue logout ...\");\n    console.info(\"Continue logout ...\");\n    return promise;\n  }\n\n  /**\n   * @return username of successfully authenticated user or null otherwise\n   */\n  async getUsername(): Promise<any> {\n    console.info(\"AuthenticationService#getUsername(): Try to get username ...\");\n\n    var url = this.baseUrl + \"/v1/auth/username\";\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.get(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          this.username = <Username>response;\n          //alert(\"Username: \" + this.username.username);\n          console.info(\"Username: \" + this.username.username);\n          resolve(this.username);\n          })\n        .catch(response => {\n          console.debug(\"AuthenticationService#getUsername(): Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          if (response.status === 403) {\n            console.info(\"AuthenticationService#getUsername(): User not authenticated yet, therefore username not available.\");\n            resolve(null);\n          } else {\n            alert(\"An error occured: \" + error.code + \", \" + error.message);\n            reject();\n          }\n        });\n    });\n    return promise;\n  }\n\n  /**\n   * @return user object of successfully authenticated user or null otherwise\n   */\n  async getUser(): Promise<any> {\n    console.info(\"AuthenticationService#getUser(): Try to get user object ...\");\n\n    var url = this.baseUrl + \"/v1/auth/user\";\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.get(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          this.user = <User>response;\n          //alert(\"Username: \" + this.user.username);\n          console.info(\"Username: \" + this.user.username + \", E-Mail: \" + this.user.email);\n          resolve(this.user);\n          })\n        .catch(response => {\n          console.debug(\"AuthenticationService#getUser(): Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          if (response.status === 403) {\n            console.info(\"AuthenticationService#getUser(): User not authenticated yet, therefore user object not available.\");\n            resolve(null);\n          } else {\n            alert(\"An error occured: \" + error.code + \", \" + error.message);\n            reject();\n          }\n        });\n    });\n    return promise;\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { QuestionAnswer } from '../models/question_answer';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { QuestionsService } from \"../services/questions.service\";\nimport { Context } from '../models/context';\nimport { ConfigurationService } from \"../services/configuration.service\";\n\n@Component({\n  selector: 'app-view-qna',\n  templateUrl: './view-qna.component.html',\n  styleUrls: ['./view-qna.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ViewQnaComponent implements OnInit {\n\n  domainId: string;\n  domain: Context;\n  qnaUuid: string;\n  qna: QuestionAnswer;\n\n  constructor(private route: ActivatedRoute, private questionsService: QuestionsService, private configurationService: ConfigurationService) { }\n\n  /**\n   *\n   */\n  ngOnInit(): void {\n    this.domainId = this.route.snapshot.paramMap.get(\"id\");\n    this.getDomain();\n    this.qnaUuid = this.route.snapshot.paramMap.get(\"uuid\");\n\n    this.getQnA();\n  }\n\n  /**\n   *\n   */\n  getDomain(): void {\n    this.configurationService.getContext(this.domainId).then(response => {\n      this.domain = <Context>response;\n      console.info(\"Domain '\" + this.domain.id + \"' has been loaded.\");\n    });\n  }\n\n  /**\n   *\n   */\n  getQnA(): void {\n    this.questionsService.getTrainedQuestionAnswer(this.domainId, this.qnaUuid, null, true).then(response => {\n      this.qna = <QuestionAnswer>response;\n    });\n  }\n}\n","<div class=\"sub-header\">\n  <p class=\"font-weight-600\">{{ 'katie.questions_and_answers' | translate }} (<a href=\"/#/domain/{{domainId}}/qna\">{{ domain.name }}</a>)</p>\n</div>\n\n<main class=\"align-center\">\n  <div class=\"content justify-center flex min-padding\">\n    <div class=\"large mt-24\">\n\n    <h3>{{ 'katie.question' | translate }}</h3>\n    <p class=\"mt-24 mb-24\">\n    {{qna.originalquestion}}\n    </p>\n\n    <h3>{{ 'katie.answer' | translate }}</h3>\n    <p class=\"mt-24 mb-24\">\n      <span class=\"answer\" [innerHTML]=\"qna.answer | linkify\"></span>\n    </p>\n\n    <h3>Rating:</h3>\n    <p class=\"mt-24 mb-24\">\n    {{qna.rating}}\n    </p>\n\n    <h3>Created:</h3>\n    <p class=\"mt-24 mb-24\">\n    {{ qna.dateOriginalQuestion | epochHumanReadable }}\n    </p>\n\n    <p><a href=\"/#/trained-questions-answers/{{ domainId }}/{{ qnaUuid }}/edit\"><img width=\"20px\" id=\"pencil_icon\" src=\"assets/img/black_pencil.svg\"/></a></p>\n\n    </div>\n  </div>\n</main>\n","import { Component, OnInit, Inject, ViewEncapsulation } from '@angular/core';\nimport { DomainService } from \"../services/domain.service\";\nimport { FaqTopic } from \"../models/faq_topic\";\nimport { FaqQuestion } from \"../models/faq_question\";\nimport { ActivatedRoute } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DOCUMENT } from '@angular/common';\nimport { AuthenticationService } from \"../services/authentication.service\";\nimport { QuestionsService } from \"../services/questions.service\";\nimport { UtilService } from \"../services/util.service\";\nimport { QuestionAnswer } from '../models/question_answer';\nimport { Username } from '../models/username';\nimport { DomainDisplayInformation } from '../models/domain_display_info';\nimport { AskQuestionService } from \"../services/ask-question.service\";\nimport { Answer } from \"../models/answer\";\nimport { ConfigurationService } from \"../services/configuration.service\";\n\n@Component({\n  selector: 'app-faq',\n  templateUrl: './faq.component.html',\n  styleUrls: ['./faq.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class FaqComponent implements OnInit {\n\n  limitTopics: number = 10;\n  // TODO: offsetTopics\n  moreTopics: number = 0;\n\n  limitQnAs: number = 10;\n\n  domainId: string;\n  language: string;\n  topics: FaqTopic[] = [];\n  pageOfTopics: FaqTopic[] = [];\n\n  answerReceived: boolean;\n  answer: Answer;\n  username: Username;\n\n  domainInfo: DomainDisplayInformation = null;\n\n  /**\n   *\n   */\n  constructor(private domainService: DomainService, private route: ActivatedRoute, private askQuestionService: AskQuestionService, private translateService: TranslateService, @Inject(DOCUMENT) private document, private questionsService: QuestionsService, private authenticationService: AuthenticationService, private utilService: UtilService, private configurationService: ConfigurationService) { }\n\n  /**\n   *\n   */\n  ngOnInit(): void {\n    this.domainId = this.route.snapshot.paramMap.get(\"domainid\");\n    this.language = this.route.snapshot.paramMap.get(\"language\");\n    if (this.language == null) {\n      this.language = \"en\";\n    }\n\n    // TBD: Switching the i18n language (according to the FAQ language) of the frontend itself is rather confusing, therefore we disabled the switch\n    //this.translateService.use(this.language); // TODO: Also update language switch (see footer)\n\n    this.getFAQ();\n\n    // INFO: Init empty answer\n    this.answer = new Answer();\n    this.answerReceived = false;\n\n    this.getUsername();\n\n    this.configurationService.getDomainDisplayInformation(this.domainId).then(response => {\n      this.domainInfo = <DomainDisplayInformation>response;\n    });\n  }\n\n  /**\n   *\n   */\n  getFAQ() {\n    //const loadUuidOnly: boolean = false;\n    const loadUuidOnly: boolean = true;\n\n    this.domainService.getFAQ(this.domainId, this.language, loadUuidOnly).then(response => {\n      this.topics = <FaqTopic[]>response;\n      if (this.domainId != null) {\n        console.info(\"All \" + this.topics.length + \" FAQ topics of domain '\" + this.domainId + \"' have been loaded.\");\n      } else {\n        console.info(\"All \" + this.topics.length + \" FAQ topics of domain 'ROOT' have been loaded.\");\n      }\n\n      if (loadUuidOnly) { // INFO: Load QnAs, because only UUIDs have been loaded above\n        // TODO: offset\n\n        var counterTopics: number = 0;\n        for (var topic of this.topics) {\n          counterTopics++;\n          if (counterTopics <= this.limitTopics) {\n            console.info(\"Resolve QnAs of topic: \" + topic.title);\n            this.resolveQnAs(topic);\n          }\n        }\n\n        this.moreTopics = counterTopics - this.limitTopics;\n        console.info(\"Number of topics which will not be displayed: \" + this.moreTopics);\n      } else { // INFO: QnAs have been loaded as part of the FAQ request, so we do not have to load them individually\n        this.pageOfTopics = this.topics;\n      }\n\n    });\n  }\n\n  /**\n   *\n   */\n  resolveQnAs(topic: FaqTopic): void {\n    // TODO: offset\n\n    var pageTopic = new FaqTopic();\n    pageTopic[\"title\"] = topic.title;\n    pageTopic[\"questions\"] = new Array<FaqQuestion>();\n\n    var counterQnAs: number = 0;\n    for (var qna of topic.questions) {\n      counterQnAs++;\n      if (counterQnAs <= this.limitQnAs) {\n        if (qna.uuid != null && qna.uuid.length > 0) {\n          console.info(\"QnA UUID: \" + qna.uuid);\n          this.questionsService.getTrainedQuestionAnswer(this.domainId, qna.uuid, null, false).then(response => {\n            var pageQnA = new FaqQuestion();\n            var questionAnswer = <QuestionAnswer>response;\n            pageQnA[\"uuid\"] = questionAnswer.uuid;\n            pageQnA[\"question\"] = questionAnswer.originalquestion;\n            pageQnA[\"answer\"] = questionAnswer.answer;\n\n            console.info(\"Add resolved QnA '\" + pageQnA.uuid + \", \" + pageQnA.question + \"' to topic '\" + pageTopic.title + \"' ...\");\n            pageTopic.questions.push(pageQnA);\n          });\n        } else {\n          console.warn(\"No QnA UUID available!\");\n          pageTopic.questions.push(qna);\n        }\n      }\n    }\n    pageTopic[\"moreQnAs\"] = counterQnAs - this.limitQnAs; \n\n    this.pageOfTopics.push(pageTopic);\n  }\n\n  /**\n   * Get answer from backend\n   * @param question Question of user\n   * @param email E-Mail address of user in case answer was not helpful\n   * @param toggleOverlay Toggle overlay when true and do not toggle when false\n   */\n  askQuestion(question: string, email: string, toggleOverlay: boolean): void {\n\n    if (question.length === 0) {\n      alert(\"WARNING: Please enter a question!\");\n      return;\n    }\n\n    //alert(\"DEBUG: Submit question: \" + question);\n    this.answerReceived = false;\n\n    var language = null;\n    if (email != null) {\n      language = this.translateService.currentLang;\n    }\n\n    this.askQuestionService.askQuestion(question, email, this.domainId, language).then(response => {\n      this.answer = <Answer>response;\n      this.answerReceived = true;\n      //alert(\"DEBUG: Answer received: \" + this.answer.answer);\n\n      // INFO: When question was submitted to expert and user is not signed in, whereas also see method below submitQuestionToExpert(string)\n      if (this.answer.email != null && toggleOverlay) {\n        this.document.getElementById('overlaySendToExpert').classList.toggle('open-overlay');\n        //alert(\"INFO: Question '\" + question + \"' resubmitted successfully, whereas we will try to answer your question as soon as possible and send you an email to '\" + email + \"'.\");\n      }\n    });\n  }\n\n  /**\n   * Submit question to expert (when user is signed in)\n   * @param question Question of user\n   */\n  submitQuestionToExpert(question: string): void {\n\n    if (question.length === 0) {\n      alert(\"WARNING: Please enter a question!\");\n      return;\n    }\n\n    //alert(\"Submit question to expert: \" + question);\n    this.askQuestionService.submitQuestionToExpert(question, this.domainId).then(response => {\n      this.answer = <Answer>response;\n    });\n  }\n\n  /**\n   *\n   */\n  toggleAnswer(uuid: string): void {\n    //alert(\"DEBUG: Toggle answer of QnA '\" + uuid + \"' ...\");\n\n    if (this.document.getElementById(\"answer-\" + uuid).classList.contains(\"answer-collapsed\")) {\n      this.document.getElementById(\"icon-\" + uuid).classList.remove('down');\n      this.document.getElementById(\"icon-\" + uuid).classList.add('up');\n\n      // INFO: Refresh answer when answer is being opened (not really necessary actually!)\n      this.getAnswer(uuid);\n\n      this.document.getElementById(\"answer-\" + uuid).classList.remove('answer-collapsed');\n      this.document.getElementById(\"answer-\" + uuid).classList.add('answer-expanded');\n    } else {\n      this.document.getElementById(\"icon-\" + uuid).classList.remove('up');\n      this.document.getElementById(\"icon-\" + uuid).classList.add('down');\n\n      this.document.getElementById(\"answer-\" + uuid).classList.remove('answer-expanded');\n      this.document.getElementById(\"answer-\" + uuid).classList.add('answer-collapsed');\n    }\n  }\n\n  /**\n   * Get answer from server and set innerHTML\n   * @param uuid UUID of answer\n   */\n  getAnswer(uuid: string) {\n    //alert(\"DEBUG: Get answer of QnA '\" + uuid + \"' ...\");\n    this.questionsService.getTrainedQuestionAnswer(this.domainId, uuid, null, true).then(response => {\n      var questionAnswer = <QuestionAnswer>response;\n      this.document.getElementById(\"answer-\" + uuid).innerHTML = this.utilService.linkify(questionAnswer.answer);\n    });\n  }\n\n  /**\n   * Get username of signed in user\n   */\n  getUsername(): void {\n    this.authenticationService.getUsername().then(response => {\n      this.username = <Username>response;\n\n      if (this.username !=  null) {\n        //alert(\"Username: \" + this.username.username);\n        console.info(\"Username: \" + this.username.username);\n      } else {\n        console.debug(\"AskQuestionComponent#getUsername(): User not signed in!\");\n      }\n    });\n  }\n\n}\n","<div class=\"sub-header\">\n  <p class=\"font-weight-600\"><a *ngIf=\"domainInfo != null\" href=\"/#/domain/{{domainId}}\">{{domainInfo.name}}</a> - {{ 'katie.faq' | translate }}</p>\n</div>\n\n<main class=\"align-center\">\n\n  <div class=\"container\">\n    <app-ask-katie [domainId]=\"domainId\"></app-ask-katie>\n  </div>\n\n  <div class=\"container\">\n      <!--<h2 id=\"title-faq-topics\">Topics</h2>-->\n      <br/>&#160;<br/>\n      <ul>\n        <li *ngFor=\"let topic of pageOfTopics\">\n          <div class=\"flex align-center\">\n            <span class=\"topic\">{{ topic.title }}</span>\n          </div>\n          <br/>\n          <div>\n            <li *ngFor=\"let question of topic.questions\">\n\n              <div *ngIf=\"question.uuid.length > 0\">\n                <div (click)=\"toggleAnswer(question.uuid)\" class=\"faq-question\">\n                  <span>{{ question.question }}</span>&#160;&#160;&#160;\n                  <span class=\"down\" id=\"icon-{{question.uuid}}\">&#160;&#160;&#160;&#160;&#160;&#160;</span>\n                </div>\n                <div id=\"answer-{{question.uuid}}\" class=\"answer-collapsed\"><span class=\"answer\" [innerHTML]=\"question.answer | linkify\"></span></div>\n                <!--<div id=\"answer-{{question.uuid}}\" class=\"answer-collapsed\">UUID of Answer: {{question.uuid}}</div>-->\n              </div>\n\n              <span *ngIf=\"question.uuid.length === 0\">{{ question.question }}</span>\n              <br/>\n            </li>\n            <div *ngIf=\"topic.moreQnAs > 0\">This topic has {{topic.moreQnAs}} more QnAs</div>\n          </div>\n          <br/>&#160;<br/>\n        </li>\n      </ul>\n\n      <div *ngIf=\"moreTopics > 0\">There are {{moreTopics}} more topics</div>\n  </div>\n</main>\n","import { Component, OnInit } from '@angular/core';\nimport { Question } from '../models/question';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { QuestionsService } from \"../services/questions.service\";\nimport { Context } from '../models/context';\nimport { ConfigurationService } from \"../services/configuration.service\";\n\n@Component({\n  selector: 'app-asked-questions',\n  templateUrl: './asked-questions.component.html',\n  styleUrls: ['./asked-questions.component.css']\n})\nexport class AskedQuestionsComponent implements OnInit {\n\n  domainId: string;\n  domain: Context;\n\n  questions: Question[] = [];\n\n  /**\n   *\n   */\n  constructor(private route: ActivatedRoute, private questionsService: QuestionsService, private configurationService: ConfigurationService) { }\n\n  /**\n   *\n   */\n  ngOnInit(): void {\n    this.domainId = this.route.snapshot.paramMap.get(\"domainid\") || null;\n    if (this.domainId != null) {\n      console.info(\"Domain Id: \" + this.domainId);\n      this.getDomain();\n    }\n\n    this.getAllAskedQuestions();\n  }\n\n  /**\n   * Get all asked questions\n   */\n  getAllAskedQuestions(): void {\n    if (this.domainId != null) {\n      console.info(\"Get all questions of domain Id: \" + this.domainId);\n    } else {\n      console.info(\"Get all questions of all domains ...\");\n    }\n\n    this.questionsService.getAllAskedQuestions(this.domainId).then(response => {\n      this.questions = <Question[]>response;\n      //alert(\"DEBUG: Number of questions: \" + this.questions.length);\n      if (this.questions !=  null) {\n        console.info(\"Number of questions: \" + this.questions.length);\n      } else {\n        console.info(\"No questions available!\");\n      }\n    });\n  }\n\n  /**\n   *\n   */\n  getDomain(): void {\n    this.configurationService.getContext(this.domainId).then(response => {\n      this.domain = <Context>response;\n      console.info(\"Domain '\" + this.domain.id + \"' has been loaded.\");\n    });\n  }\n}\n","<div *ngIf=\"domainId != null\" class=\"sub-header\">\n  <p class=\"font-weight-600\">{{ 'katie.questions_and_answers' | translate }} (<a href=\"/#/domain/{{domainId}}/qna\">{{ domain.name}}</a>)</p>\n</div>\n<div *ngIf=\"domainId === null\" class=\"sub-header\">\n  <p class=\"font-weight-600\">{{ 'katie.questions_and_answers' | translate }}</p>\n</div>\n\n<main class=\"align-center\">\n  <div class=\"content justify-center flex min-padding\">\n\n<!-- TODO: Implement left hand side navigation\n    <nav class=\"side-nav mt-64\">\n      <div class=\"active sidenav-item\">\n        <img src=\"assets/img/inbox_icon.svg\" alt=\"\">\n        <a class=\"ml-24\" href=\"#\">Inbox</a>\n      </div>\n      <div class=\"sidenav-item\">\n        <a href=\"#\">Open</a>\n      </div>\n      <div class=\"sidenav-item\">\n        <a href=\"\">Archive</a>\n      </div>\n    </nav>\n-->\n\n    <div class=\"large mt-24\">\n\n<!-- TODO: Implement filter\n      <section class=\"toolbar space-between\">\n        <input type=\"checkbox\" name=\"\" value=\"\">\n        <button type=\"button\" name=\"filter\" class=\"icon\">\n          <img src=\"assets/img/filter_icon.svg\" alt=\"icon of a filter\">\n        </button>\n      </section>\n-->\n\n      <!-- TODO: Rephrase \"All asked questions\" -->\n      <h2 id=\"title-all-questions\">All asked questions</h2>\n      <p class=\"mt-24 mb-24\" *ngIf=\"questions.length === 0 && domainId != null\">\n        No asked questions for domain '<em>{{ domainId }}</em>'.\n      </p>\n      <p class=\"mt-24 mb-24\" *ngIf=\"questions.length === 0 && domainId === null\">\n        No asked questions.\n      </p>\n      <ul>\n        <!-- TODO: Add switch to reverse order: <li *ngFor=\"let question of questions.reverse()\">-->\n        <li *ngFor=\"let question of questions\">\n          <div class=\"flex align-center\">\n            <a class=\"ml-12\">{{ question.question }}</a>\n          </div>\n          <p class=\"mid-grey\">&#160;&#160;&#160;&#160;{{ question.timestamp | epochHumanReadable }}</p>\n\n          <p *ngIf=\"question.answerUUID != null\" class=\"mid-grey\">&#160;&#160;&#160;&#160;<a href=\"/#/domain/{{ question.domainId }}/qna/{{ question.answerUUID }}\" target=\"_blank\">Answer provided by Katie</a></p>\n          <p *ngIf=\"question.answerUUID == null\" class=\"mid-grey\">&#160;&#160;&#160;&#160;No answer</p>\n\n          <p class=\"mid-grey\" *ngIf=\"question.username != null\">&#160;&#160;&#160;&#160;Username: {{ question.username }}</p>\n          <p *ngIf=\"question.answerUUID != null\" class=\"mid-grey\">&#160;&#160;&#160;&#160;Permission: {{ question.permissionStatus }}</p>\n          <p *ngIf=\"question.slackChannelId != null\" class=\"mid-grey\">&#160;&#160;&#160;&#160;Channel is Slack: {{ question.slackChannelId }}</p>\n          <p *ngIf=\"question.emailFrom != null\" class=\"mid-grey\">&#160;&#160;&#160;&#160;Channel is E-Mail: {{ question.emailFrom }}</p>\n          <p class=\"mid-grey\" *ngIf=\"question.moderationStatus != null\">&#160;&#160;&#160;&#160;Moderation: {{ question.moderationStatus }} <span *ngIf=\"question.moderationStatus === 'NEEDS_APPROVAL'\"><a href=\"/#/approve-answer?qid={{ question.uuid }}\">{{ 'katie.approve' | translate }} / {{ 'katie.discard' | translate }}</a></span></p>\n          <br/>\n        </li>\n      </ul>\n    </div>\n  </div>\n</main>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Context } from '../models/context';\nimport { ConfigurationService } from \"../services/configuration.service\";\nimport { DomainService } from \"../services/domain.service\";\nimport { User } from '../models/user';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'app-domain-members',\n  templateUrl: './domain-members.component.html',\n  styleUrls: ['./domain-members.component.css']\n})\nexport class DomainMembersComponent implements OnInit {\n\n  domain: Context;\n  domainId: string;\n  members: User[] = [];\n\n  constructor(private configurationService: ConfigurationService, private route: ActivatedRoute, private domainService: DomainService, @Inject(DOCUMENT) private document) { }\n\n  ngOnInit(): void {\n    this.domainId = this.route.snapshot.paramMap.get(\"id\");\n\n    this.getDomain();\n    this.getMembers();\n  }\n\n  /**\n   *\n   */\n  getDomain(): void {\n    this.configurationService.getContext(this.domainId).then(response => {\n      this.domain = <Context>response;\n      console.info(\"Domain '\" + this.domain.id + \"' has been loaded.\");\n    });\n  }\n\n  /**\n   *\n   */\n  getMembers(): void {\n    this.domainService.getAllMembers(this.domainId).then(response => {\n      this.members = <User[]>response;\n      console.info(\"All members of domain '\" + this.domainId + \"' have been loaded.\");\n    });\n  }\n\n  /**\n   *\n   */\n  inviteMember(email: string): void {\n    //alert(\"DEBUG: Invite member with email '\" + email + \"' ...\");\n    console.info(\"Invite member with email '\" + email + \"' ...\");\n    if (email != null && email.length > 0) {\n      this.document.getElementById('inviteMemberOverlay').classList.toggle('open-overlay');\n\n      this.domainService.inviteMember(this.domainId, email).then(response => {\n        console.info(\"New member invited.\");\n        this.getMembers();\n      });\n    } else {\n      alert(\"Please enter the email of the person you'd like to invite.\");\n    }\n  }\n\n  /**\n   *\n   */\n  toggleUserIsModerator(username: string) {\n      //alert(\"DEBUG: Toggle whether user '\" + username + \"' is moderator ...\");\n      this.domainService.toggleUserIsModerator(this.domainId, username).then(response => {\n        var isModerator = response;\n        console.info(\"Member '' is moderator: \" + isModerator);\n\n        // INFO: Display current values\n        this.getMembers();\n        //this.document.getElementById(username + '_isModerator').innerHTML = isModerator;\n      });\n  }\n\n  /**\n   *\n   */\n  toggleUserIsExpert(username: string) {\n      //alert(\"DEBUG: Toggle whether user '\" + username + \"' is expert ...\");\n      this.domainService.toggleUserIsExpert(this.domainId, username).then(response => {\n        var isExpert = response;\n        console.info(\"Member '' is expert: \" + isExpert);\n\n        // INFO: Update and display current values\n        this.getMembers();\n      });\n  }\n\n}\n","<div class=\"sub-header\">\n  <p class=\"font-weight-600\" *ngIf=\"domain != null\"><a href=\"/#/dashboard\">Dashboard</a> / <a href=\"/#/domain/{{domainId}}\">{{domain.name}}</a></p>\n</div>\n\n<main class=\"align-center\">\n  <app-domain-navigation [domainId]=\"domainId\" [pageId]=\"'members'\"></app-domain-navigation>\n  <div class=\"content p-24 justify-center\">\n    <div class=\"container\">\n<h2>{{ 'katie.team_members' | translate }}</h2>\n\n      <p class=\"mt-24 mb-24\" *ngIf=\"members.length === 0\">\n        No members yet.\n      </p>\n\n      <div *ngIf=\"members.length > 0\">\n        <br/>\n      <table border=\"1\">\n        <tr>\n          <th>{{ 'katie.iam_first_last_name' | translate }}</th>\n          <th>{{ 'katie.iam_username' | translate }}</th>\n          <th>E-Mail</th>\n          <th width=\"110px\">Expert <a href=\"https://ukatie.com/#/read-answer?domain-id=ROOT&uuid=36277e09-62d9-4549-a649-b08bed5841df\" target=\"_blank\"><img src=\"assets/img/icon/info_black_24dp.svg\" style=\"vertical-align: bottom;\"/></a></th>\n          <th width=\"150px\">Moderator <a href=\"https://ukatie.com/#/read-answer?domain-id=ROOT&uuid=45595eb6-1f95-4123-aa17-959ea2e24673\" target=\"_blank\"><img src=\"assets/img/icon/info_black_24dp.svg\" style=\"vertical-align: bottom;\"/></a></th>\n        </tr>\n        <tr *ngFor=\"let member of members\">\n          <td>\n          <div class=\"flex align-center\">\n            <a class=\"ml-12\">{{ member.firstname }} {{ member.lastname }}</a>\n          </div>\n          </td>\n          <td>\n          <p class=\"mid-grey\">{{ member.username }}</p>\n          </td>\n          <td>\n          <p class=\"mid-grey\">{{ member.email }}</p>\n          </td>\n          <td>\n          <p class=\"mid-grey\">{{ member.isExpert }}&#160;&#160;<img *ngIf=\"member.isExpert\" class=\"toggle_icon\" src=\"assets/img/toggle-on-solid.svg\" (click)=\"toggleUserIsExpert(member.username)\"/><img *ngIf=\"!member.isExpert\" class=\"toggle_icon\" src=\"assets/img/toggle-off-solid.svg\" (click)=\"toggleUserIsExpert(member.username)\"/></p>\n          </td>\n          <td>\n          <p class=\"mid-grey\"><span id=\"{{member.username}}_isModerator\">{{ member.isModerator }}</span>&#160;&#160;<img *ngIf=\"member.isModerator\" class=\"toggle_icon\" src=\"assets/img/toggle-on-solid.svg\" (click)=\"toggleUserIsModerator(member.username)\"/><img *ngIf=\"!member.isModerator\" class=\"toggle_icon\" src=\"assets/img/toggle-off-solid.svg\" (click)=\"toggleUserIsModerator(member.username)\"/></p>\n          </td>\n        </tr>\n      </table>\n      </div>\n\n        <br/>\n        <p>\n          <button (click)=\"inviteMemberOverlay.classList.toggle('open-overlay')\" class=\"fw-600 bg-blue white solid-button\">{{ 'katie.add_member' | translate }}</button>\n        </p>\n\n        <div class=\"close-overlay overlay\" #inviteMemberOverlay id=\"inviteMemberOverlay\">\n          <div class=\"resubmit-form\">\n            <h2>{{ 'katie.add_member' | translate }}</h2>\n            <p class=\"mt-24\">{{ 'katie.add_member_instruction' | translate }}</p>\n            <input #email id=\"email\" class=\"form-field mt-24\" type=\"email\" placeholder=\"E-Mail\" (keydown.enter)=\"inviteMember(email.value)\"/>\n            <div class=\"space-between align-center mt-48\">\n              <button type=\"button\" name=\"close\" class=\"text-button blue mr-24\" (click)=\"inviteMemberOverlay.classList.toggle('open-overlay')\">{{ 'katie.cancel' | translate }}</button>\n              <button class=\"fw-600 solid-button bg-blue white\" (click)=\"inviteMember(email.value)\">{{ 'katie.add' | translate }}</button>\n            </div>\n          </div>\n        </div>\n\n    </div>\n  </div>\n</main>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { QuestionsService } from \"../services/questions.service\";\nimport { Question } from '../models/question';\nimport { QuestionAnswer } from '../models/question_answer';\n\n@Component({\n  selector: 'app-approve-answer',\n  templateUrl: './approve-answer.component.html',\n  styleUrls: ['./approve-answer.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ApproveAnswerComponent implements OnInit {\n\n  qid: string;\n  askedQuestion: Question;\n  email: string;\n  qna: QuestionAnswer;\n  approvedQuestion: Question;\n  discardedQuestion: Question;\n\n  /**\n   *\n   */\n  constructor(private route: ActivatedRoute, private questionsService: QuestionsService) { }\n\n  /**\n   *\n   */\n  ngOnInit(): void {\n    this.route\n      .queryParams\n      .subscribe(params => {\n        this.qid = params['qid'] || 'NO_QID_QUERY_PARAMETER';\n        //alert(\"DEBUG: Value of query parameter: \" + this.qid);\n        console.info(\"Value of query parameter: \" + this.qid);\n      });\n    this.getAskedQuestion();\n  }\n\n  /**\n   *\n   */\n  getAskedQuestion(): void {\n    //alert(\"DEBUG: Get asked question '\" + this.qid + \"'\");\n\n    this.questionsService.getAskedQuestion(this.qid).then(response => {\n      this.askedQuestion = <Question>response;\n\n      this.getAnswer(this.askedQuestion.domainId, this.askedQuestion.answerUUID);\n\n      if (this.askedQuestion.channelType === 'EMAIL') {\n        this.getEmailContainingQuestion();\n      }\n    });\n  }\n\n  /**\n   * @param uuid UUID of QnA\n   */\n  getAnswer(domainId: string, uuid: string): void {\n    this.questionsService.getTrainedQuestionAnswer(domainId, uuid, null, true).then(response => {\n      this.qna = <QuestionAnswer>response;\n    });\n  }\n\n  /**\n   * Get email containing question\n   */\n  getEmailContainingQuestion(): void {\n    this.questionsService.getEmailContainingQuestion(this.qid).then(response => {\n      this.email = <string>response;\n    });\n  }\n\n  /**\n   *\n   */\n  discardAnswer(): void {\n    //alert(\"DEBUG: Discard answer to question '\" + this.qid + \"'\");\n\n    this.questionsService.discardAnswer(this.qid).then(response => {\n      this.discardedQuestion = <Question>response;\n    });\n  }\n\n  /**\n   *\n   */\n  approveAnswer(): void {\n    //alert(\"DEBUG: Approve answer to question '\" + this.qid + \"'\");\n\n    this.questionsService.approveAnswer(this.qid).then(response => {\n      this.approvedQuestion = <Question>response;\n      if (this.approvedQuestion != null) {\n        //alert(\"DEBUG: Thank you for approving the question/answer '\" + this.approvedQuestion.answerUUID + \"' of question '\" + this.approvedQuestion.question + \"'.\");\n        console.info(\"Approval of question with UUID '\" + this.qid + \"' was successful!\");\n      } else {\n        console.info(\"Approval of question with UUID '\" + this.qid + \"' failed!\");\n      }\n    });\n  }\n\n}\n","<div class=\"sub-header\">\n  <p class=\"font-weight-600\">Approve answer</p>\n</div>\n\n<main class=\"align-center\">\n  <div class=\"content p-24 justify-center\">\n    <div class=\"container\">\n    <div *ngIf=\"approvedQuestion == null && discardedQuestion == null && askedQuestion != null && askedQuestion.moderationStatus == 'NEEDS_APPROVAL'\" class=\"container\">\n      <p>Please approve the following answer:</p>\n<!--\n      <br/><p>DEBUG: Moderation status: {{askedQuestion.moderationStatus}}</p>\n-->\n      <br/>\n      <p>Question: {{askedQuestion.question}}</p>\n\n      <div *ngIf=\"qna != null\">\n        <br/>\n        <p>Suggested Answer:</p>\n        <div id=\"answer\" [innerHTML]=\"qna.answer | linkify\"></div> <!-- INFO: In order to have CSS applied, encapsulation has to be set -->\n        <br/>\n        <p>Original question: {{qna.originalquestion}}</p>\n      </div>\n\n      <br/>\n      <p *ngIf=\"askedQuestion.channelType === 'EMAIL'\">Channel is E-Mail: <button (click)=\"emailMessageOverlay.classList.toggle('open-overlay')\" class=\"blue text-button mt-24\">Show email containing question ...</button></p>\n\n\n      <p *ngIf=\"askedQuestion.channelType === 'SLACK'\">Channel is Slack: TODO:SlackChannelId</p>\n\n      <button class=\"fw-600 bg-blue white solid-button mt-24\" (click)=\"approveAnswer()\" type=\"button\">{{ 'katie.approve' | translate }}</button>\n      &#160;&#160;\n      <button class=\"fw-600 bg-blue white solid-button mt-24\" (click)=\"discardAnswer()\" type=\"button\">{{ 'katie.discard' | translate }}</button>\n    </div>\n\n    <div *ngIf=\"approvedQuestion != null\" class=\"container\">\n      <p>Thank you for approving the question/answer <em>\"{{ approvedQuestion.answerUUID }}\"</em> of question <em>\"{{ approvedQuestion.question }}\".</em></p>\n    </div>\n\n    <div *ngIf=\"discardedQuestion != null\" class=\"container\">\n      <p>The question/answer <em>\"{{ discardedQuestion.answerUUID }}\"</em>&#160;of question <em>\"{{ discardedQuestion.question }}\"</em>&#160;has been discarded.</p>\n    </div>\n\n    <div *ngIf=\"askedQuestion != null && askedQuestion.moderationStatus == 'APPROVED'\" class=\"container\">\n      <br/>\n      <p>Answer to question <strong>'{{askedQuestion.question}}'</strong> was already approved.<!-- Moderation status: {{askedQuestion.moderationStatus}}--></p>\n<!--\n      <br/><p>Approved by TODO</p>\n-->\n    </div>\n\n    <div *ngIf=\"askedQuestion != null && askedQuestion.moderationStatus == 'DISCARDED'\" class=\"container\">\n      <br/>\n      <p>Answer to question <strong>'{{askedQuestion.question}}'</strong> was already discarded.<!-- Moderation status: {{askedQuestion.moderationStatus}}--></p>\n<!--\n      <br/><p>Discarded by TODO</p>\n-->\n    </div>\n    </div>\n  </div>\n\n  <div class=\"close-overlay overlay\" #emailMessageOverlay id=\"emailMessageOverlay\">\n    <div class=\"email-source\">\n      <h2>Original Message</h2>\n      <br/>\n      <p><textarea>{{email}}</textarea></p>\n      <button class=\"fw-600 bg-blue white solid-button mt-24\" (click)=\"emailMessageOverlay.classList.toggle('open-overlay')\" type=\"button\">Close</button>\n    </div>\n  </div>\n</main>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { QuestionsService } from \"../services/questions.service\";\nimport { ResubmittedQuestion } from '../models/resubmitted_question';\nimport { QuestionAnswer } from '../models/question_answer';\nimport { AuthenticationService } from \"../services/authentication.service\";\nimport { ConfigurationService } from \"../services/configuration.service\";\nimport { DomainService } from \"../services/domain.service\";\nimport { Context } from '../models/context';\nimport { FaqTopic } from \"../models/faq_topic\";\nimport { User } from \"../models/user\";\nimport { AesencryptDecryptService } from '../services/aesencrypt-decrypt.service';\n\nimport { Inject }  from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\ndeclare var tinymce: any;\n\n@Component({\n  selector: 'app-answer-resubmitted-question',\n  templateUrl: './answer-resubmitted-question.component.html',\n  styleUrls: ['./answer-resubmitted-question.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AnswerResubmittedQuestionComponent implements OnInit {\n\n  tinymce_content: string;\n  answerClientSideEncryptedAlgorithm: string;\n\n  answerClientSideEncrypted: boolean;\n\n  uuid: string;\n  reQuestion: ResubmittedQuestion;\n  question: string;\n  contextId: string;\n  status: string;\n  trained: boolean;\n\n  answerLinkType: string;\n\n  channelType: string;\n  channelRequestId: string;\n\n  email: string;\n  fcmtoken: string;\n  slackChannelId: string;\n\n  remoteAddress: string;\n\n  respondentId: string;\n  respondent: User;\n\n  rating: string;\n  feedback: string;\n  //timestampResubmitted: int;\n\n  context: Context;\n\n  ownershipRadio: string;\n  qaOwnership: string;\n\n  faqLanguages: string[] = [];\n  topics: FaqTopic[] = [];\n  KATIE_NO_TOPIC_SELECTED: string = \"KATIE_NO_TOPIC_SELECTED\";\n\n  /**\n   *\n   */\n  constructor(private router: Router, private route: ActivatedRoute, private questionsService: QuestionsService, private authenticationService: AuthenticationService, private configurationService: ConfigurationService, private domainService: DomainService, private aesEncryptDecryptService: AesencryptDecryptService, @Inject(DOCUMENT) private document) { }\n\n  /**\n   *\n   */\n  ngOnInit(): void {\n    //tinymce.init({selector: \"#tinymce4answer\"});\n\n    this.ownershipRadio = \"iam_source\"; // Initially checked\n\n    this.route\n      .queryParams\n      .subscribe(params => {\n        this.uuid = params['uuid'] || 'NO_UUID_QUERY_PARAMETER';\n        //alert(\"Query parameter: \" + this.uuid);\n        console.info(\"Query parameter: \" + this.uuid);\n      });\n    this.getResubmittedQuestion(this.uuid);\n  }\n\n  /**\n   *\n   */\n  toggleEditQuestion() {\n    //alert(\"DEBUG: Toggle edit question.\");\n    if (!this.document.getElementById('question').isContentEditable) {\n      //alert(\"DEBUG: Enable editing of question\");\n      this.document.getElementById('editBtn').innerHTML = \"<img src='assets/img/icon/check_circle_outline_black_24dp.svg' title='Finish editing question'/>\";\n\n      this.document.getElementById('question').contentEditable = \"true\";\n    } else {\n      var updatedQuestion = this.document.getElementById('question').innerHTML;\n      //alert(\"DEBUG: Save updated question: \" + updatedQuestion);\n      this.questionsService.updateQuestionOfResubmittedQuestion(this.uuid, updatedQuestion).then(response => {\n        //alert(\"DEBUG: Answer has been saved.\");\n        console.info(\"Question with UUID '\" + this.uuid + \"' has been updated successfully.\");\n      });\n\n      this.document.getElementById('editBtn').innerHTML = \"<img src='assets/img/icon/edit_black_24dp.svg' title='Edit question, for example to fix typos'/>\";\n\n      this.document.getElementById('question').contentEditable = \"false\";\n    }\n  }\n\n  /**\n   *\n   */\n  getFAQLanguagesAndTopics() {\n    console.info(\"Get FAQ languages and topics of domain '\" + this.contextId + \"' ...\");\n    this.domainService.getFAQLanguages(this.contextId).then(response => {\n      this.faqLanguages = <string[]>response;\n      console.info(\"Number of FAQ languages: \" + this.faqLanguages.length);\n\n      if (this.faqLanguages.length > 0) {\n        this.getFAQTopics(this.contextId, this.faqLanguages[0]);\n      }\n    });\n  }\n\n  /**\n   * Reload FAQ topics for a particular language\n   */\n  reloadFAQTopics(language: string) {\n    //alert(\"DEBUG: Reload FAQ topics for language '\" + language + \"' ...\");\n    console.info(\"DEBUG: Reload FAQ topics for language '\" + language + \"' ...\");\n    this.getFAQTopics(this.contextId, language);\n  }\n\n  /**\n   *\n   */\n  getFAQTopics(domainId: string, language: string) {\n    this.domainService.getFAQ(domainId, language, true).then(response => {\n      this.topics = <FaqTopic[]>response;\n      console.info(\"All \" + this.topics.length + \" FAQ topics of domain '\" + domainId + \"' have been loaded.\");\n    });\n  }\n\n  /**\n   * Encrypt answer\n   * @param password Secret key in order to encrypt answer\n   */\n  encryptAnswer(password: string): void {\n      var unencryptedAnswer = this.tinymce_content;\n      if (unencryptedAnswer != null && unencryptedAnswer.length > 0 && password != null && password.length > 0) {\n        alert(\"DEBUG: Encrypt answer '\" + unencryptedAnswer + \"' ...\");\n        this.tinymce_content = this.aesEncryptDecryptService.encrypt(unencryptedAnswer, password);\n        this.answerClientSideEncrypted = true;\n        alert(\"DEBUG: Encrypted answer: \" + this.tinymce_content);\n        // TODO: Hide textarea\n        this.document.getElementById('encryptOverlay').classList.toggle('open-overlay');\n      } else {\n        alert(\"Cannot encrypt answer, because either no answer or no password provided yet!\");\n      }\n  }\n\n  /**\n   * Decrypt answer\n   * @param password Secret key in order to decrypt answer\n   */\n  decryptAnswer(password: string): void {\n      var encryptedAnswer = this.tinymce_content;\n      alert(\"DEBUG: Decrypt answer: \" + encryptedAnswer);\n      if (encryptedAnswer != null && encryptedAnswer.length > 0 && password != null && password.length > 0) {\n        alert(\"DEBUG: Decrypt answer '\" + encryptedAnswer + \"' ...\");\n        this.tinymce_content = this.aesEncryptDecryptService.decrypt(encryptedAnswer, password);\n        this.answerClientSideEncrypted = false;\n        alert(\"DEBUG: Decrypted answer: \" + this.tinymce_content);\n        this.document.getElementById('decryptOverlay').classList.toggle('open-overlay');\n      } else {\n        alert(\"Cannot decrypt answer, because either no encrypted answer or no password  provided yet!\");\n      }\n  }\n\n  /**\n   * Decrypt saved answer\n   * @param password Secret key in order to decrypt answer\n   */\n  decryptSavedAnswer(password: string): void {\n      var encryptedAnswer = this.tinymce_content;\n      //alert(\"DEBUG: Try to decrypt answer: \" + encryptedAnswer);\n      if (encryptedAnswer != null && encryptedAnswer.length > 0 && password != null && password.length > 0) {\n        //alert(\"DEBUG: Decrypt answer '\" + encryptedAnswer + \"' ...\");\n        var decryptedAnswer = this.aesEncryptDecryptService.decrypt(encryptedAnswer, password);\n        alert(\"Decrypted answer: \" + decryptedAnswer);\n        this.document.getElementById('decryptAnswerOverlay').classList.toggle('open-overlay');\n/*\n        this.tinymce_content = this.aesEncryptDecryptService.decrypt(encryptedAnswer, password);\n        this.answerClientSideEncrypted = false;\n        alert(\"DEBUG: Decrypted answer: \" + this.tinymce_content);\n*/\n      } else {\n        alert(\"Cannot decrypt answer, because either no encrypted answer or no password  provided yet!\");\n      }\n  }\n\n  /**\n   *\n   */\n  getResubmittedQuestion(uuid: string): void {\n    this.questionsService.getResubmittedQuestion(uuid).then(response => {\n      this.reQuestion = <ResubmittedQuestion>response;\n\n      this.question = this.reQuestion.question;\n      this.contextId = this.reQuestion.contextId;\n\n      this.getContextConfigurationAndResetOwnership(this.contextId);\n      this.qaOwnership = this.reQuestion.ownership;\n\n      this.status = this.reQuestion.status;\n      //alert(\"DEBUG: Status: \" + this.status);\n\n      if (this.status === 'answer-pending') {\n        // INFO: No answer yet provided by expert\n        this.tinymce_content = \"\";\n      } else {\n        this.getQnA(this.contextId, this.reQuestion.uuid);\n      }\n\n      this.answerLinkType = this.reQuestion.answerLinkType;\n\n      this.channelType = this.reQuestion.channelType;\n      this.channelRequestId = this.reQuestion.channelRequestId;\n\n      this.email = this.reQuestion.email;\n      //alert(\"DEBUG: Email: \" + this.email);\n      this.fcmtoken = this.reQuestion.fcmtoken;\n      this.slackChannelId = \"TODO\"; // TODO: Get Slack channel Id using channelType and channelRequestId\n\n      this.remoteAddress = this.reQuestion.remoteAddress;\n\n      this.respondentId = this.reQuestion.respondentUserId;\n      this.respondent = this.reQuestion.respondent;\n\n      //this.timestampResubmitted = this.reQuestion.timestampResubmitted;\n      if (this.reQuestion !=  null) {\n        //alert(\"Question: \" + this.reQuestion.question);\n        console.info(\"Question: \" + this.reQuestion.question);\n      } else {\n        console.info(\"No question available for UUID '\" + uuid + \"'!\");\n      }\n\n      this.getFAQLanguagesAndTopics();\n    });\n  }\n\n  /**\n   * Get answer which was provided by expert\n   * @param domainId Domain Id\n   * @param uuid UUID of QnA\n   */\n  getQnA(domainId: string, uuid: string) : void {\n    //alert(\"DEBUG: Get answer for resubmitted question '\" + uuid + \"' of domain '\" + domainId + \"' ...\");\n\n    this.questionsService.getTrainedQuestionAnswer(domainId, uuid, null, true).then(response => {\n      var qna = <QuestionAnswer>response;\n      if (qna.answer != null) {\n        this.tinymce_content = qna.answer;\n\n        this.answerClientSideEncryptedAlgorithm = qna.answerClientSideEncryptionAlgorithm;\n        if (this.answerClientSideEncryptedAlgorithm != null) {\n          //alert(\"DEBUG: Client side encryption algorithm: \" + this.answerClientSideEncryptedAlgorithm);\n        } else {\n          //alert(\"DEBUG: Answer not encrypted\");\n        }\n      } else {\n        alert(\"ERROR: No answer available for QnA '\" + uuid + \"' of domain '\" + domainId + \"'!\");\n        this.tinymce_content = \"\";\n      }\n\n      this.trained = qna.trained;\n      this.rating = qna.rating;\n      this.feedback = qna.feedback;\n    });\n  }\n\n  /**\n   * Train Katie with question/answer\n   */\n  train(): void {\n    alert(\"DEBUG: Train AskKatie with answer of resubmitted question with UUID '\" + this.uuid);\n    console.info(\"Train AskKatie with answer of resubmitted question with UUID '\" + this.uuid);\n\n    this.questionsService.train(this.uuid).then(response => {\n      //alert(\"DEBUG: AskKatie trained.\");\n      console.info(\"AskKatie trained.\");\n      this.reQuestion = <ResubmittedQuestion>response;\n      this.router.navigate(['/resubmitted-questions/' + this.contextId]);\n    });\n  }\n\n  /**\n   * Delete resubmitted question\n   */\n  deleteResubmittedQuestion(): void {\n    //alert(\"DEBUG: Delete resubmitted question '\" + this.uuid + \"'\");\n    console.info(\"Delete resubmitted question '\" + this.uuid + \"'\");\n\n    this.questionsService.deleteResubmittedQuestion(this.uuid).then(response => {\n      //alert(\"DEBUG: Resubmitted question '\" + this.uuid + \"' has been deleted.\");\n      console.info(\"Resubmitted question '\" + this.uuid + \"' has been deleted.\");\n      this.router.navigate(['/resubmitted-questions/' + this.contextId]);\n    });\n  }\n\n  /**\n   * Save answer of resubmitted question\n   * @param sendEmail True when email shall be sent to user\n   * @param train True when AskKatie shall be trained with resubmitted question and provided answer\n   * @param faqLanguage FAQ language, e.g. \"de\"\n   * @param faqTopicId FAQ topic Id, e.g. \"slack_integration\" or \"legal\"\n   */\n  answerResubmittedQuestion(sendEmail: boolean, train: boolean, faqLanguage: string, faqTopicId: string): void {\n    //alert(\"DEBUG: Content of TinyMCE: \" + this.tinymce_content);\n    var answer = this.tinymce_content;\n\n    // INFO: Because of a race condition we have to remove tinymce manually, whereas see https://stackoverflow.com/questions/33278834/getting-ns-error-unexpected-while-using-tinymce-in-mozilla and https://ittone.ma/ittone/javascript-import-tinymce-explicitly-in-angular-tinymce-angular/\n    try {\n      tinymce.remove(\"#tinymce4answer\");\n    } catch(e) {\n      alert(\"ERROR: \" + e);\n    }\n\n    //alert(\"DEBUG: Selected ownership: \" + this.ownershipRadio);\n    console.info(\"Selected ownership: \" + this.ownershipRadio);\n\n    if (answer === null || answer.length === 0) {\n      alert(\"No answer provided, please make sure to enter an answer before submitting!\");\n      return; \n    }\n\n    // TODO: Also check whether domain is protected or rather the topics of the requested FAQ\n    if (faqTopicId != this.KATIE_NO_TOPIC_SELECTED && this.ownershipRadio != \"iam_public\") {\n      alert(\"WARNING: Please note that your answer is configured as protected and therefore will not get displayed on your FAQ page if the FAQ page itself is configured as public.\");\n      // TODO: Add Continue / Cancel buttons such that user gets a chance to configure answer as public\n      //alert(\"Either click on the lock icon to set your answer to be public or do not add it to the FAQ.\");\n      //return;\n    }\n \n    //alert(\"DEBUG: Answer to resubmitted question '\" + this.uuid + \"': \" + answer);\n    console.info(\"Answer to resubmitted question '\" + this.uuid + \"': \" + answer);\n\n    this.questionsService.answerResubmittedQuestion(this.uuid, answer, this.answerClientSideEncrypted, this.ownershipRadio).then(response => {\n      //alert(\"DEBUG: Answer has been saved.\");\n      console.info(\"Answer with UUID '\" + this.uuid + \"' has been saved.\");\n\n      if (sendEmail) {\n        //alert(\"DEBUG: Try to notify user ...\");\n        console.info(\"Try to notify user ...\");\n        this.questionsService.sendAnswerToUser(this.uuid).then(response => {\n          //alert(\"DEBUG: User has been notified.\");\n          console.info(\"User has been notified.\");\n          //this.reQuestion = <ResubmittedQuestion>response;\n        });\n      }\n\n      if (train) {\n        //alert(\"DEBUG: Train AskKatie ...\");\n        console.info(\"Train AskKatie ...\");\n        this.questionsService.train(this.uuid).then(response => {\n          //alert(\"DEBUG: AskKatie trained.\");\n          console.info(\"AskKatie trained.\");\n          //this.reQuestion = <ResubmittedQuestion>response;\n        });\n      }\n\n      console.info(\"Selected FAQ topic Id: \" + faqTopicId);\n      if (faqTopicId != this.KATIE_NO_TOPIC_SELECTED) {\n        console.info(\"Add resubmitted question to FAQ topic '\" + faqTopicId + \"' ...\");\n        this.domainService.addQnAtoFAQ(this.contextId, faqLanguage, faqTopicId, this.uuid).then(response => {\n          //alert(\"DEBUG: QnA added successfully.\");\n          console.info(\"QnA added successfully.\");\n        });\n      }\n\n      //alert(\"DEBUG: Redirect ...\");\n      console.info(\"Redirect to overview of resubmitted questions ...\");\n      // TODO: Reload current page, instead redirecting to overview\n      //this.router.navigate(['/answer-question'], {queryParams: {'uuid': uuid }});\n      this.router.navigate(['/resubmitted-questions/' + this.contextId]);\n    });\n\n    console.info(\"Resubmitted question has been answered.\");\n  }\n\n  /**\n   *\n   */\n  getContextConfigurationAndResetOwnership(contextId: string): void {\n    console.info(\"Get domain '\" + contextId + \"' ...\");\n\n\n    this.configurationService.getContext(contextId).then(response => {\n      this.context = <Context>response;\n\n      if (this.context !=  null) {\n        console.info(\"Answers of context '\" + this.context.id + \"' generally protected: \" + this.context.answersGenerallyProtected);\n        if (this.context.answersGenerallyProtected === true) {\n          this.ownershipRadio = \"iam_context\";\n        } else {\n          this.ownershipRadio = \"iam_public\";\n        }\n      } else {\n        console.error(\"No domain available for id '\" + contextId + \"', something went wrong!\");\n      }\n    });\n  }\n\n}\n","<div class=\"sub-header\">\n  <p class=\"font-weight-600\">Questions and Answers</p>\n</div>\n\n<main class=\"align-center\">\n  <div class=\"min-padding mt-24 justify-center\">\n    <div class=\"large\">\n      <section class=\"toolbar\">\n        <button type=\"button\" name=\"back_button\" class=\"icon mr-12\">\n          <img src=\"assets/img/icon/arrow_back_black_24dp.svg\" alt=\"Back to overview of submitted questions\" title=\"Back to overview of submitted questions\" [routerLink]=\"['/resubmitted-questions/' + contextId]\">\n        </button>\n\n        <div class=\"flex\">\n          <button type=\"button\" name=\"delete\" class=\"icon ml-48 mr-12\">\n            <img src=\"assets/img/icon/delete_black_24dp.svg\" (click)=\"deleteResubmittedQuestion()\" alt=\"Delete question\" title=\"Delete question\">\n          </button>\n\n<!-- TODO: Implement \"Assign to me\"\n          <button type=\"button\" name=\"assign\" class=\"icon mr-12\">\n            <img src=\"assets/img/human_icon.svg\" alt=\"Assign to me\" title=\"Assign to me\">\n          </button>\n-->\n\n          <button *ngIf=\"status === 'answer-pending'\" (click)=\"access_controll.classList.toggle('opened-dd')\" type=\"button\" name=\"access control button\" class=\"icon mr-12\">\n            <img src=\"assets/img/icon/lock_black_24dp.svg\" alt=\"Privacy\" title=\"Privacy\">\n          </button>\n\n          <ul #access_controll class=\"closed-dd p-24 dd-content mt-48 transform-translateX50\">\n            <li class=\"flex align-center\">\n              <input type=\"radio\" name=\"ownership\" [(ngModel)]=\"ownershipRadio\" [value]=\"'iam_source'\" id=\"source\"/>\n              &#160;&#160;\n              <img src=\"assets/img/icon/lock_icon.svg\" alt=\"\">\n              <div class=\"ml-8 text-align-left\">\n                <p>Private</p>\n                <p class=\"minion\">Only you and questioner have access</p>\n              </div>\n            </li>\n            <li class=\"flex align-center mt-24\">\n              <input type=\"radio\" name=\"ownership\" [(ngModel)]=\"ownershipRadio\" [value]=\"'iam_context'\" id=\"context\"/>\n              &#160;&#160;\n              <img src=\"assets/img/icon/apartment.svg\" alt=\"\">\n              <div class=\"ml-8 text-align-left\">\n                <p>Organisation / Corporate / Domain</p>\n                <p class=\"minion\">Everyone within the organisation has access</p>\n              </div>\n            </li>\n            <li class=\"flex align-center mt-24\">\n              <input type=\"radio\" name=\"ownership\" [(ngModel)]=\"ownershipRadio\" [value]=\"'iam_public'\" id=\"public\"/>\n              &#160;&#160;\n              <img src=\"assets/img/icon/world.svg\" alt=\"\">\n              <div class=\"ml-8 text-align-left\">\n                <p>Public</p>\n                <p class=\"minion\">Everyone has access</p>\n              </div>\n            </li>\n          </ul>\n        </div>\n\n        <button type=\"button\" name=\"more-information\" class=\"icon mr-12\" (click)=\"metaInfoOverlay.classList.toggle('open-overlay')\">\n          <img src=\"assets/img/icon/info_black_24dp.svg\" alt=\"More information\" title=\"More information\">\n        </button>\n\n        <div class=\"close-overlay overlay\" #metaInfoOverlay id=\"metaInfoOverlay\">\n          <div class=\"more-information\">\n            <h2>{{ 'katie.more_information' | translate }}</h2>\n            <div class=\"mt-24\">\n              <h3 class=\"mid-grey\">Status</h3>\n              <p class=\"mt-8\">{{ status }}</p>\n            </div>\n            <div class=\"mt-24\">\n              <h3 class=\"mid-grey\">Domain Id</h3>\n              <p class=\"mt-8\">{{ contextId }}</p>\n            </div>\n            <div class=\"mt-24\" *ngIf=\"status != 'answer-pending'\">\n              <h3 class=\"mid-grey\">Ownership</h3>\n              <p class=\"mt-8\">{{ qaOwnership }}</p>\n            </div>\n            <div class=\"mt-24\" *ngIf=\"trained === true\">\n              <h3 class=\"mid-grey\">AI trained</h3>\n              <p class=\"mt-8\">{{ trained }}</p>\n            </div>\n            <div class=\"mt-24\">\n              <h3 class=\"mid-grey\">Channel</h3>\n              <p>{{ channelType }}</p>\n            </div>\n            <div class=\"mt-24\" *ngIf=\"email != null\">\n              <h3 class=\"mid-grey\">Asked by user with email</h3>\n              <p class=\"mt-8\">{{ email }} (Remote address: {{ remoteAddress }})</p>\n            </div>\n            <div class=\"mt-24\" *ngIf=\"answerLinkType != null\">\n              <h3 class=\"mid-grey\">Link type:</h3>\n              <p>{{ answerLinkType }}</p>\n            </div>\n            <div class=\"mt-24\" *ngIf=\"fcmtoken != null\">\n              <h3 class=\"mid-grey\">FCM token</h3>\n              <p>{{ fcmtoken }} (Remote address: {{ remoteAddress }})</p>\n            </div>\n            <div class=\"mt-24\" *ngIf=\"channelType === 'SLACK'\">\n              <h3 class=\"mid-grey\">Slack channel Id</h3>\n              <p>{{ slackChannelId }}</p>\n            </div>\n            <div *ngIf=\"status === 'answer-rated'\">\n              <h3 class=\"mid-grey mt-24\">Rating</h3>\n              <p class=\"mt-8\">{{ rating }}</p>\n            </div>\n            <div *ngIf=\"status === 'answer-rated'\">\n              <h3 class=\"mid-grey mt-24\">Feedback</h3>\n              <p class=\"mt-8\">{{ feedback }}</p>\n            </div>\n            <div class=\"mt-24\">\n              <h3 class=\"mid-grey\">UUID</h3>\n              <p class=\"mt-8\">{{ uuid }}</p>\n            </div>\n              <button class=\"fw-600 bg-blue white solid-button mt-24\" (click)=\"metaInfoOverlay.classList.toggle('open-overlay')\" type=\"button\">{{ 'katie.close' | translate }}</button>\n          </div>\n        </div>\n\n      </section> <!-- End toolbar -->\n\n\n      <div class=\"mr-12 ml-12\">\n        <section class=\"mt-48 mb-48\">\n          <div class=\"\">\n            <h2 class=\"mt-8\"><span contenteditable=\"false\" id=\"question\">{{ question }}</span>&#160;&#160;<button *ngIf=\"status === 'answer-pending'\" id=\"editBtn\" (click)=\"toggleEditQuestion()\"><img src=\"assets/img/icon/edit_black_24dp.svg\" title=\"Edit question, for example to fix typos\"/></button></h2>\n\n            <div class=\"mt-24\" *ngIf=\"status != 'answer-pending'\">\n              <div id=\"answer\" [innerHTML]=\"tinymce_content | linkify\"></div>\n              <br/>\n              <p class=\"mid-grey\"><span *ngIf=\"answerClientSideEncryptedAlgorithm != null\">Encrypted </span>Answer <span *ngIf=\"respondentId != null\">by <a href=\"/#/domain/{{contextId}}\">{{ respondent.firstname }} {{ respondent.lastname }}</a></span></p>\n            </div>\n\n            <div class=\"mt-24\" *ngIf=\"trained === false && status != 'answer-pending'\">\n              <br/>\n              <div>\n                <img src=\"assets/img/icon/warning_amber_black_24dp.svg\" alt=\"QnA not trained yet\" title=\"QnA not trained yet\" style=\"float: left; margin-right: 10px;\">\n                Answer has been sent to questioner, but Katie has not been trained yet with question/answer.<br/>Would you like to train Katie now?\n               </div>\n              <button class=\"fw-600 bg-blue white solid-button mt-24\" (click)=\"train()\" type=\"button\">Train Katie with answer</button>\n            </div>\n\n            <br />\n\n            <div *ngIf=\"answerClientSideEncryptedAlgorithm != null\">\n              <button (click)=\"decryptAnswerOverlay.classList.toggle('open-overlay')\" class=\"blue text-button mt-24\">{{ 'katie.decrypt_answer' | translate }} ...</button>\n            </div>\n\n            <div class=\"close-overlay overlay\" #decryptAnswerOverlay id=\"decryptAnswerOverlay\">\n              <div class=\"resubmit-form\">\n                <h2>Decrypt encrypted answer</h2>\n                <p class=\"mt-24\">Please enter a password in order to decrypt answer using client side encryption <a href=\"https://cryptojs.gitbook.io/docs/#the-cipher-algorithms\" target=\"_blank\">(info)</a></p>\n                <input #passwordDecryptAnswer id=\"passwordDecryptAnswer\" class=\"form-field mt-24\" type=\"password\" placeholder=\"Password\" (keydown.enter)=\"decryptSavedAnswer(passwordDecryptAnswer.value)\" />\n                <div class=\"space-between align-center mt-48\">\n                  <button type=\"button\" name=\"close\" class=\"text-button blue mr-24\" (click)=\"decryptAnswerOverlay.classList.toggle('open-overlay')\">{{ 'katie.cancel' | translate }}</button>\n                  <button class=\"fw-600 solid-button bg-blue white\" (click)=\"decryptSavedAnswer(passwordDecryptAnswer.value)\">Decrypt</button>\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </section>\n\n        <section class=\"mt-48\" *ngIf=\"status === 'answer-pending'\">\n<editor id=\"tinymce4answer\" outputFormat=\"html\"\n   [(ngModel)]=\"tinymce_content\"\n   [init]=\"{\n     base_url: '/tinymce',\n     suffix: '.min',\n     height: 300,\n     entity_encoding: 'raw',\n     menubar: false,\n     plugins: [\n       'advlist autolink lists link image charmap print preview anchor',\n       'searchreplace visualblocks code fullscreen',\n       'insertdatetime media table paste code help wordcount'\n     ],\n     toolbar:\n       'undo redo | formatselect | bold italic backcolor | link | \\\n       bullist numlist outdent indent | code | help'\n   }\"\n ></editor>\n\n\n          <br /><br />\n          <!-- TODO: Only show button when permissions is set to 'Private' -->\n          <button (click)=\"encryptOverlay.classList.toggle('open-overlay')\" *ngIf=\"!answerClientSideEncrypted\" class=\"blue text-button mt-24\">{{ 'katie.encrypt_answer' | translate }} ...</button>\n          <button (click)=\"decryptOverlay.classList.toggle('open-overlay')\" *ngIf=\"answerClientSideEncrypted\" class=\"blue text-button mt-24\">{{ 'katie.decrypt_answer' | translate }} ...</button>\n\n          <div class=\"close-overlay overlay\" #encryptOverlay id=\"encryptOverlay\">\n            <div class=\"resubmit-form\">\n              <h2>{{ 'katie.encrypt_answer' | translate }}</h2>\n              <p class=\"mt-24\">Please enter a password in order to encrypt answer using client side encryption <a href=\"https://cryptojs.gitbook.io/docs/#the-cipher-algorithms\" target=\"_blank\">(info)</a></p>\n              <p class=\"mt-24\">Make sure to remember your password, because otherwise you will not be able to decrypt your answer anymore.</p>\n              <input #passwordEncrypt id=\"passwordEncrypt\" class=\"form-field mt-24\" type=\"password\" placeholder=\"Password\" (keydown.enter)=\"encryptAnswer(passwordEncrypt.value)\" />\n              <div class=\"space-between align-center mt-48\">\n                <button type=\"button\" name=\"close\" class=\"text-button blue mr-24\" (click)=\"encryptOverlay.classList.toggle('open-overlay')\">{{ 'katie.cancel' | translate }}</button>\n                <button class=\"fw-600 solid-button bg-blue white\" (click)=\"encryptAnswer(passwordEncrypt.value)\">Encrypt</button>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"close-overlay overlay\" #decryptOverlay id=\"decryptOverlay\">\n            <div class=\"resubmit-form\">\n              <h2>{{ 'katie.decrypt_answer' | translate }}</h2>\n              <p class=\"mt-24\">Please enter a password in order to decrypt answer using client side encryption <a href=\"https://cryptojs.gitbook.io/docs/#the-cipher-algorithms\" target=\"_blank\">(info)</a></p>\n              <input #passwordDecrypt id=\"passwordDecrypt\" class=\"form-field mt-24\" type=\"password\" placeholder=\"Password\" (keydown.enter)=\"decryptAnswer(passwordDecrypt.value)\" />\n              <div class=\"space-between align-center mt-48\">\n                <button type=\"button\" name=\"close\" class=\"text-button blue mr-24\" (click)=\"decryptOverlay.classList.toggle('open-overlay')\">{{ 'katie.cancel' | translate }}</button>\n                <button class=\"fw-600 solid-button bg-blue white\" (click)=\"decryptAnswer(passwordDecrypt.value)\">Decrypt</button>\n              </div>\n            </div>\n          </div>\n\n          <div id=\"add_qna_to_faq\" [ngClass]=\"{ 'add_qna_to_faq_visible': faqLanguages.length > 0, 'add_qna_to_faq_not_visible': faqLanguages.length == 0}\"> <!-- INFO: Hide with CSS when there are no FAQ languages, because ngIf does not work, because faq_language.value and faq_topic.value will not be available further down -->\n            <br/><br/>\n            <!-- TODO: See how plus sign is used by Trello + {{ 'katie.add_qna_to_faq' | translate }}: -->\n            {{ 'katie.add_qna_to_faq' | translate }}:\n            &#160;\n            <select class=\"form-field mt-48\" #faq_language name=\"faq_language\" id=\"faq_language\" (change)=\"reloadFAQTopics(faq_language.value)\">\n              <option *ngFor=\"let language of faqLanguages\" value=\"{{language}}\">{{language}}</option>\n            </select>\n            &#160;\n            <!-- TODO: Reload topic names when language is switched -->\n            <select class=\"form-field mt-48\" #faq_topic name=\"faq_topic\" id=\"faq_topic\">\n              <option selected=\"true\" value=\"{{KATIE_NO_TOPIC_SELECTED}}\">Select Topic ...</option>\n              <option *ngFor=\"let topic of topics\" value=\"{{topic.id}}\">{{topic.title}}</option>\n            </select>\n          </div>\n\n          <br/>\n          <button class=\"blue text-button mt-48 mr-24\" *ngIf=\"channelType === 'MATRIX' || channelType === 'WEBHOOK'\" (click)=\"answerResubmittedQuestion(true, false, faq_language.value, faq_topic.value)\" type=\"button\">Send answer to questioner</button>\n          <button class=\"blue text-button mt-48 mr-24\" *ngIf=\"channelType === 'MS_TEAMS'\" (click)=\"answerResubmittedQuestion(true, false, faq_language.value, faq_topic.value)\" type=\"button\">Send answer to MS Teams</button>\n          <button class=\"blue text-button mt-48 mr-24\" *ngIf=\"channelType === 'SLACK'\" (click)=\"answerResubmittedQuestion(true, false, faq_language.value, faq_topic.value)\" type=\"button\">Send answer to Slack channel</button>\n          <button class=\"blue text-button mt-48 mr-24\" *ngIf=\"email != null\" (click)=\"answerResubmittedQuestion(true, false, faq_language.value, faq_topic.value)\" type=\"button\">Send email</button>\n          <button class=\"fw-600 bg-blue white solid-button mt-24\" *ngIf=\"fcmtoken != null\" (click)=\"answerResubmittedQuestion(true, false, faq_language.value, faq_topic.value)\" type=\"button\">Safe and send push notification to user for rating before training Katie</button>\n\n          <button class=\"fw-600 bg-blue white solid-button mt-24\" *ngIf=\"channelType === 'MATRIX' || channelType === 'WEBHOOK'\" (click)=\"answerResubmittedQuestion(true, true, faq_language.value, faq_topic.value)\" type=\"button\">Send answer to questioner & train Katie</button>\n          <button class=\"fw-600 bg-blue white solid-button mt-24\" *ngIf=\"channelType === 'MS_TEAMS'\" (click)=\"answerResubmittedQuestion(true, true, faq_language.value, faq_topic.value)\" type=\"button\">Send answer to MS Teams & train Katie</button>\n          <button class=\"fw-600 bg-blue white solid-button mt-24\" *ngIf=\"channelType === 'SLACK'\" (click)=\"answerResubmittedQuestion(true, true, faq_language.value, faq_topic.value)\" type=\"button\">Send answer to Slack channel & train Katie</button>\n          <button class=\"fw-600 bg-blue white solid-button mt-24\" *ngIf=\"email != null\" (click)=\"answerResubmittedQuestion(true, true, faq_language.value, faq_topic.value)\" type=\"button\">Send email & train Katie</button>\n          <button class=\"fw-600 bg-blue white solid-button mt-24\" *ngIf=\"fcmtoken != null\" (click)=\"answerResubmittedQuestion(true, true, faq_language.value, faq_topic.value)\" type=\"button\">Safe, send push notification to user and train Katie without waiting for rating by user</button>\n        </section>\n      </div>\n    </div>\n  </div>\n</main>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Error } from '../models/error';\nimport { ResubmittedQuestion } from '../models/resubmitted_question';\nimport { Question } from '../models/question';\nimport { Answer } from '../models/answer';\nimport { QuestionAnswer } from '../models/question_answer';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionsService {\n\n  baseUrl = environment.apiBaseUrl;\n\n  qAnswers: QuestionAnswer[] = [];\n  _questions: Question[] = [];\n  questions: ResubmittedQuestion[] = [];\n  reQuestion: ResubmittedQuestion;\n  questionAnswer: QuestionAnswer;\n\n  askedQuestion: Question;\n  emailContainingQuestion: string;\n  approvedQuestion: Question;\n  discardedQuestion: Question;\n\n  /**\n   *\n   */\n  constructor(private httpClient: HttpClient, private router: Router, private translate: TranslateService) {\n    console.info(\"Loading Questions service ...\");\n  }\n\n  /**\n   * Get trained question/answer, for example to display to backend team member, in order to edit trained question/answer\n   * @param uuid UUID of trained question/answer\n   * @param redirect When true and QnA is protected, then redirect to login screen\n   */\n  async getTrainedQuestionAnswer(domainId: string, uuid: string, jwtToken: string, redirect: boolean): Promise<any> {\n    //alert(\"DEBUG: Get trained question/answer '\" + domainId + \"/\" + uuid + \"' ...\");\n    console.info(\"Get trained question/answer with UUID '\" + uuid + \"' of domain '\" + domainId + \"' ...\");\n\n    let headers = null;\n    if (jwtToken != null) {\n      console.info(\"Add Authorization header\");\n      headers = new HttpHeaders().set('Authorization', 'Bearer ' + jwtToken);\n    } else {\n      headers = new HttpHeaders();\n    }\n    const httpOptions = {\n      headers: headers\n    };\n\n    var url = this.baseUrl + \"/v1/question/trained/\" + domainId + \"/\" + uuid;\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.get(url, httpOptions)\n      //this.httpClient.get(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          this.questionAnswer = <QuestionAnswer>response;\n          //alert(\"DEBUG: Question/answer: \" + this.questionAnswer.originalquestion);\n          console.info(\"Question/answer retrieved: \" + this.questionAnswer.originalquestion);\n          resolve(this.questionAnswer);\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured when trying to get question/answer: \" + error.message + \", \" + error.code);\n          if (response.status === 403) {\n            //alert(\"DEBUG: Access to trained question/answer with UUID '\" + uuid + \"' denied, please login or switch user!\");\n            console.warn(\"Access to trained question/answer with UUID '\" + uuid + \"' denied, please login or switch user!\");\n            if (redirect) {\n              this.router.navigate(['/login'], {queryParams: {'answer-question-uuid': uuid, 'message': 'Trained question/answer is protected, please login as backend team member ...'}});\n            } else {\n              console.info(\"Do not redirect to login screen.\");\n            }\n            reject();\n          } else if (response.status === 400) {\n            alert(\"No such trained question/answer with uuid '\" + uuid + \"'!\");\n            console.info(\"No such trained question/answer with uuid '\" + uuid + \"'!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject();\n          }\n        });\n    });\n    return promise;\n  }\n\n  /**\n   * Update question of trained QnA\n   * @param uuid UUID of QnA\n   * @param question Updated question\n   */\n  updateQuestionOfTrainedQnA(domainId: string, uuid: string, question: string): Promise<any> {\n    //alert(\"DEBUG: Update question of trained QnA '\" + uuid + \"': \" + question);\n    console.info(\"Update question of trained QnA '\" + uuid + \"': \" + question);\n\n    var url = this.baseUrl + \"/v1/question/trained/\" + domainId + \"/\" + uuid + \"/question\";\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.patch(url, { question }, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          this.questionAnswer = <QuestionAnswer>response;\n          //alert(\"DEBUG: Question of trained QnA updated: \" + this.questionAnswer.originalquestion);\n          console.info(\"Question of trained QnA updated: \" + this.questionAnswer.originalquestion);\n          resolve(this.questionAnswer);\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured when trying to update trained question/answer: \" + error.message + \", \" + error.code);\n          if (response.status === 403) {\n            alert(\"Access denied, please login!\");\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.message + \", \" + response.status);\n            reject();\n          }\n        });\n    });\n    //alert(\"DEBUG: Trying to update question ...\");\n    console.info(\"Trying to update question ...\");\n    return promise;\n    }\n\n  /**\n   * Update trained question answer\n   * @param uuid UUID of QnA \n   * @param answer Answer (plaintext or decrypted)\n   * @param ownership Ownership, e.g. 'user', 'group' or 'public'\n   */\n  updateTrainedQuestionAnswer(domainId: string, uuid: string, answer: string, ownership: string): Promise<any> {\n    //alert(\"DEBUG: Update trained question/answer '\" + uuid + \"': \" + answer);\n    console.info(\"Update trained question/answer '\" + uuid + \"': \" + answer);\n\n    //alert(\"DEBUG: Selected ownership to view answer: \" + ownership);\n\n    var url = this.baseUrl + \"/v1/question/trained/\" + domainId + \"/\" + uuid;\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.put(url, { answer }, { responseType: 'json' })\n      //this.httpClient.put(url, { answer, ownership }, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          this.questionAnswer = <QuestionAnswer>response;\n          //alert(\"DEBUG: Trained question/answer updated: \" + this.questionAnswer.answer);\n          console.info(\"Trained question/answer updated: \" + this.questionAnswer.answer);\n          resolve(this.questionAnswer);\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured when trying to update trained question/answer: \" + error.message + \", \" + error.code);\n          if (response.status === 403) {\n            alert(\"Access denied, please login!\");\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else if (response.status === 400 && error.code === 'NO_ANSWER_PROVIDED') {\n            alert(\"WARNING: No answer provided, please make sure to enter an answer!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject();\n          }\n        });\n    });\n    //alert(\"DEBUG: Trying to update answer ...\");\n    console.info(\"Trying to update answer ...\");\n    return promise;\n    }\n\n  /**\n   * Get trained questions/answers\n   * @param domainId Domain Id, e.g. 'ROOT'\n   * @param offset Offset indicates the start of the returned trained QnAs\n   * @param limit Limit the number of returned trained QnAs\n   */\n  async getTrainedQuestionsAnswers(domainId: string, offset: number, limit: number): Promise<any> {\n    //alert(\"DEBUG: Get trained questions/answers ...\");\n    console.info(\"Get trained questions/answers ...\");\n\n    var url = this.baseUrl + \"/v1/questions/trained\";\n\n    if (domainId != null) {\n      url = url + \"?domainId=\" + domainId;\n      if (offset != null) {\n        url = url + \"&offset=\" + offset;\n      }\n      if (limit != null) {\n        url = url + \"&limit=\" + limit;\n      }\n    }\n    // TODO: Also set offset and limit when no domain Id provided\n\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.get(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          this.qAnswers = <QuestionAnswer[]>response;\n          console.info(\"Total number of trained questions/answers: \" + this.qAnswers.length);\n          resolve(this.qAnswers);\n          // resolve([]);\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          if (response.status === 403) {\n            console.info(\"Access denied, please login!\");\n            var msg = this.translate.instant('katie.overview_trained_questions_answers_protected');\n            this.router.navigate(['/login'], {queryParams: {'message': msg}});\n            resolve();\n          } else {\n            alert(\"An error occured: \" + error.code + \", \" + error.message);\n            reject();\n          }\n        });\n    });\n    return promise;\n  }\n\n  /**\n   * Get all asked questions\n   * @param domainId Domain Id, e.g. 'ROOT'\n   */\n  async getAllAskedQuestions(domainId: string): Promise<any> {\n    //alert(\"DEBUG: Get all asked questions ...\");\n    console.info(\"Get all asked questions ...\");\n\n    var url = this.baseUrl + \"/v1/questions/asked?limit=75&offset=0\";\n    if (domainId != null) {\n      url = url + \"&contextId=\" + domainId;\n    }\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.get(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          this._questions = <Question[]>response;\n          console.info(\"Total number of asked questions: \" + this._questions.length);\n          resolve(this._questions);\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          if (response.status === 403) {\n            console.info(\"Access denied, please login!\");\n            var msg = this.translate.instant('katie.overview_asked_questions_protected');\n            this.router.navigate(['/login'], {queryParams: {'message': msg}});\n            resolve();\n          } else {\n            if (error.code === 'NO_QUESTIONS') {\n              console.info(\"No questions yet.\");\n            } else {\n              alert(\"An error occured: \" + error.code + \", \" + error.message);\n            }\n            reject();\n          }\n        });\n    });\n    return promise;\n  }\n\n  /**\n   * Get resubmitted questions with a particular status\n   * @param status Status of question, e.g. 'answer-pending' or null in order to get all resubmitted questions\n   * @param domainId Domain Id, e.g. 'ROOT'\n   */\n  async getResubmittedQuestions(status: string, domainId: string, limit: number, offset: number): Promise<any> {\n    //alert(\"Get resubmitted questions ...\");\n    console.info(\"Get resubmitted questions ...\");\n\n    var url = this.baseUrl + \"/v1/questions/resubmitted?limit=\" + limit + \"&offset=\" + offset;\n    if (status != null || domainId != null) {\n      if (status != null) {\n        url = url + \"&status=\" + status;\n      }\n      if (domainId != null && status != null) {\n        url = url + \"&contextId=\" + domainId;\n      }\n      if (domainId != null && status == null) {\n        url = url + \"&contextId=\" + domainId;\n      }\n    }\n\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.get(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          this.questions = <ResubmittedQuestion[]>response;\n          if (status != null) {\n            console.info(\"Number of resubmitted questions with status '\" + status + \"' (domain id: '\" + domainId + \"'): \" + this.questions.length);\n          } else {\n            console.info(\"Total number of resubmitted questions: \" + this.questions.length);\n          }\n          resolve(this.questions);\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          if (response.status === 403) {\n            console.info(\"Access denied, please login!\");\n            var msg = this.translate.instant('katie.overview_resubmitted_questions_protected');\n            this.router.navigate(['/login'], {queryParams: {'message': msg}});\n            resolve();\n          } else {\n            alert(\"An error occured: \" + error.code + \", \" + error.message);\n            reject();\n          }\n        });\n    });\n    return promise;\n  }\n\n  /**\n   * @param qid Question Id\n   */\n  getAskedQuestion(qid: string): Promise<any> {\n    //alert(\"DEBUG: Get asked question '\" + qid + \"'\");\n    console.info(\"Get asked question '\" + qid + \"'\");\n\n    var url = this.baseUrl + \"/v1/questions/asked/\" + qid;\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.get(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          this.askedQuestion = <Question>response;\n          //alert(\"DEBUG: Asked question: \" + this.askedQuestion.question);\n          console.info(\"Asked question: \" + this.askedQuestion.question);\n          resolve(this.askedQuestion);\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured when trying to get asked question: \" + error.message + \", \" + error.code);\n          if (response.status === 403) {\n            alert(\"Access denied, please login!\");\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else if (response.status === 400) {\n            alert(\"An error occured: \" + error.message);\n            console.info(\"An error occured: \" + error.message);\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject();\n          }\n        });\n    });\n    return promise;\n  }\n\n  /**\n   * @param qid Question Id\n   */\n  approveAnswer(qid: string): Promise<any> {\n    //alert(\"DEBUG: Approve answer of question '\" + qid + \"'\");\n    console.info(\"Approve answer of question '\" + qid + \"'\");\n\n    var url = this.baseUrl + \"/v1/questions/asked/\" + qid + \"/approve\";\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.get(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          this.approvedQuestion = <Question>response;\n          //alert(\"DEBUG: Approved question: \" + this.approvedQuestion.question);\n          console.info(\"Approved question: \" + this.approvedQuestion.question);\n          resolve(this.approvedQuestion);\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured when trying to approve question: \" + error.message + \", \" + error.code);\n          if (response.status === 403) {\n            alert(\"Access denied, please login!\");\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else if (response.status === 400) {\n            alert(\"An error occured: \" + error.message);\n            console.info(\"An error occured: \" + error.message);\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject();\n          }\n        });\n    });\n    return promise;\n  }\n\n  /**\n   * @param qid Question Id\n   */\n  discardAnswer(qid: string): Promise<any> {\n    //alert(\"DEBUG: Discard answer of question '\" + qid + \"'\");\n    console.info(\"Discard answer of question '\" + qid + \"'\");\n\n    var url = this.baseUrl + \"/v1/questions/asked/\" + qid + \"/discard\";\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.get(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          this.discardedQuestion = <Question>response;\n          //alert(\"DEBUG: Discarded question: \" + this.discardedQuestion.question);\n          console.info(\"Discarded question: \" + this.discardedQuestion.question);\n          resolve(this.discardedQuestion);\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured when trying to discard question: \" + error.message + \", \" + error.code);\n          if (response.status === 403) {\n            alert(\"Access denied, please login!\");\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else if (response.status === 400) {\n            alert(\"An error occured: \" + error.message);\n            console.info(\"An error occured: \" + error.message);\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject();\n          }\n        });\n    });\n    return promise;\n  }\n\n  /**\n   * Get original email containing question\n   * @param qid Question Id\n   */\n  getEmailContainingQuestion(qid: string): Promise<any> {\n    //alert(\"DEBUG: Get email containing question '\" + qid + \"'\");\n    console.info(\"Get email containing question '\" + qid + \"'\");\n\n    var url = this.baseUrl + \"/v1/questions/asked/\" + qid + \"/email\";\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.get(url, { responseType: 'text' })\n        .toPromise()\n        .then(response => {\n          this.emailContainingQuestion = <string>response;\n          //alert(\"DEBUG: Email containing question: \" + this.emailContainingQuestion);\n          console.info(\"Email containing question: \" + this.emailContainingQuestion);\n          resolve(this.emailContainingQuestion);\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured when trying to get email containing question: \" + error.message + \", \" + error.code);\n          if (response.status === 403) {\n            alert(\"Access denied, please login!\");\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else if (response.status === 400) {\n            alert(\"An error occured: \" + error.message);\n            console.info(\"An error occured: \" + error.message);\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject();\n          }\n        });\n    });\n    return promise;\n  }\n\n  /**\n   *\n   */\n  rateAnswer(domainId: string, uuid: string, rating: string): Promise<any> {\n    //alert(\"Rate answer '\" + domainId + \"/\" + uuid + \"': \" + rating + \" ...\");\n    console.info(\"Rate answer '\" + domainId + \"/\" + uuid + \"': \" + rating + \" ...\");\n\n    var url = this.baseUrl + \"/v1/question/resubmitted/\" + domainId + \"/\" + uuid + \"/rateAnswer?rating=\" + rating;\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.get(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          this.questionAnswer = <QuestionAnswer>response;\n          //alert(\"QnA: \" + this.questionAnswer.originalquestion);\n          console.info(\"QnA retrieved: \" + this.questionAnswer.originalquestion);\n          resolve(this.questionAnswer);\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured when trying to get QnA: \" + error.message + \", \" + error.code);\n          if (response.status === 403) {\n            alert(\"Access denied, please login!\");\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else if (response.status === 404) {\n            alert(\"No such QnA with uuid '\" + uuid + \"'!\");\n            console.info(\"No such QnA with uuid '\" + uuid + \"'!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject();\n          }\n        });\n    });\n    return promise;\n  }\n\n  /**\n   * Get answer of resubmitted question, for example to display to user who resubmitted question\n   * @param domainId Domain Id  of resubmitted question\n   * @param uuid UUID of resubmitted question\n   */\n  async getAnswerOfResubmittedQuestion(domainId: string, uuid: string): Promise<any> {\n    //alert(\"DEBUG: Get answer of resubmitted question with UUID '\" + uuid + \"' of domain '\" + domainId + \"' ...\");\n    console.info(\"Get answer of resubmitted question with UUID '\" + uuid + \"' of domain '\" + domainId + \"' ...\");\n\n    var url = this.baseUrl + \"/v1/question/resubmitted/\" + domainId + \"/\" + uuid + \"/answer\";\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.get(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          this.reQuestion = <ResubmittedQuestion>response;\n          //alert(\"Resubmitted question: \" + this.reQuestion.question);\n          console.info(\"Resubmitted question retrieved: \" + this.reQuestion.question);\n          resolve(this.reQuestion);\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured when trying to get resubmitted question: \" + error.message + \", \" + error.code);\n          if (response.status === 403) {\n            //alert(\"DEBUG: Access to resubmitted question with UUID '\" + uuid + \"' denied, please login!\");\n            console.info(\"Access to resubmitted question with UUID '\" + uuid + \"' denied, please login!\");\n            this.router.navigate(['/login'], {queryParams: {'answer-question-uuid': uuid, 'message': 'Answer of resubmitted question is protected, please login ...'}});\n            reject();\n          } else if (response.status === 400) {\n            alert(\"No such resubmitted question with uuid '\" + uuid + \"'!\");\n            console.info(\"No such resubmitted question with uuid '\" + uuid + \"'!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject();\n          }\n        });\n    });\n    return promise;\n  }\n\n  /**\n   * Get resubmitted question, for example to display to backend team member, in order to handle resubmitted question\n   * @param uuid UUID of resubmitted question\n   */\n  async getResubmittedQuestion(uuid: string): Promise<any> {\n    //alert(\"Get resubmitted question '\" + uuid + \"' ...\");\n    console.info(\"Get resubmitted question with UUID '\" + uuid + \"' ...\");\n\n    var url = this.baseUrl + \"/v1/question/resubmitted/\" + uuid;\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.get(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          this.reQuestion = <ResubmittedQuestion>response;\n          //alert(\"Resubmitted question: \" + this.reQuestion.question);\n          console.info(\"Resubmitted question retrieved: \" + this.reQuestion.question);\n          resolve(this.reQuestion);\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured when trying to get resubmitted question: \" + error.message + \", \" + error.code);\n          if (response.status === 403) {\n            //alert(\"DEBUG: Access to resubmitted question with UUID '\" + uuid + \"' denied, please login!\");\n            console.info(\"Access to resubmitted question with UUID '\" + uuid + \"' denied, please login!\");\n            this.router.navigate(['/login'], {queryParams: {'answer-question-uuid': uuid, 'message': 'Answering resubmitted question is protected, please login as backend team member ...'}});\n            reject();\n          } else if (response.status === 400) {\n            alert(\"No such resubmitted question with uuid '\" + uuid + \"'!\");\n            console.info(\"No such resubmitted question with uuid '\" + uuid + \"'!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject();\n          }\n        });\n    });\n    return promise;\n  }\n\n  /**\n   * Delete resubmitted question\n   */\n  async deleteResubmittedQuestion(uuid: string): Promise<any> {\n    //alert(\"DEBUG: Delete resubmitted question '\" + uuid + \"'\");\n    console.info(\"Delete resubmitted question '\" + uuid + \"'\");\n\n    var url = this.baseUrl + \"/v1/question/resubmitted/\" + uuid;\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.delete(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          //alert(\"DEBUG: Resubmitted question deleted: \" + uuid);\n          console.info(\"Resubmitted question deleted: \" + uuid);\n          resolve();\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured when trying to delete resubmitted question: \" + error.message + \", \" + error.code);\n          if (response.status === 403) {\n            alert(\"Access denied, please login!\");\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject();\n          }\n        });\n    });\n    //alert(\"DEBUG: Trying to delete question ...\");\n    console.info(\"Trying to delete question ...\");\n    return promise;\n    }\n\n  /**\n   * Delete trained QnA\n   */\n  async deleteTrainedQnA(domainId: string, uuid: string): Promise<any> {\n    //alert(\"DEBUG: Delete trained QnA '\" + domainId + \"/\" + uuid + \"'\");\n    console.info(\"Delete trained QnA '\" + domainId + \"/\" + uuid + \"'\");\n\n    var url = this.baseUrl + \"/v1/question/trained/\" + domainId + \"/\" + uuid;\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.delete(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          //alert(\"DEBUG: Trained QnA deleted: \" + uuid);\n          console.info(\"Trained QnA deleted: \" + uuid);\n          resolve();\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured when trying to delete trained QnA: \" + error.message + \", \" + error.code);\n          if (response.status === 403) {\n            alert(\"Access denied, please login!\");\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject();\n          }\n        });\n    });\n    //alert(\"DEBUG: Trying to delete trained QnA ...\");\n    console.info(\"Trying to delete trained QnA ...\");\n    return promise;\n    }\n\n  /**\n   * Share information with another user\n   */\n  shareInformationWithAnotherUser(domainId: string, uuid: string, email: string): Promise<any> {\n    console.info(\"Share information \" + domainId + \" / \" + uuid + \" with another user: \" + email);\n\n    let headers = new HttpHeaders();\n    const httpOptions = {\n      headers: headers\n    };\n\n    var url = this.baseUrl + \"/v1/question/trained/\" + domainId + \"/\" + uuid + \"/share?email=\" + email;\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.put(url, {}, httpOptions)\n        .toPromise()\n        .then(response => {\n          console.info(\"Information shared successfully with another user.\");\n          resolve();\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured when trying to share information with another user: \" + error.message + \", \" + error.code);\n          if (response.status === 403) {\n            alert(\"Access denied, please login!\");\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject();\n          }\n        });\n    });\n    //alert(\"DEBUG: Trying to share information with another user...\");\n    console.info(\"Trying to share information with another user ...\");\n    return promise;\n  }\n\n  /**\n   * Share information with Katie\n   * @param information Information user wants to share with Katie, e.g. \"The best seats in the movie theatre Alba are seats 12 and 13, row 5\"\n   */\n  shareInformationWithKatie(information: string, domainId: string): Promise<any> {\n    console.info(\"Share information with Katie: \" + information);\n\n    let headers = new HttpHeaders();\n    const httpOptions = {\n      headers: headers\n    };\n\n    var url = this.baseUrl + \"/v1/share/\" + domainId + \"/text\";\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.post(url, { information }, httpOptions)\n      //this.httpClient.post(url, { information }, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          console.info(\"Information shared successfully.\");\n          resolve();\n/*\n          var uuid = response['uuid'];\n          console.info(\"Information shared: \" + uuid);\n          resolve(uuid);\n*/\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured when trying to share information: \" + error.message + \", \" + error.code);\n          if (response.status === 403) {\n            alert(\"Access denied, please login!\");\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject();\n          }\n        });\n    });\n    //alert(\"DEBUG: Trying to share information ...\");\n    console.info(\"Trying to share information ...\");\n    return promise;\n  }\n\n  /**\n   * Share URL with Katie\n   * @param url URL user wants to share with Katie, e.g. \"https://www.sciencedirect.com/science/article/pii/S2590188520300032#fn0004\"\n   * @param keywords Keywords user wants to share with Katie, e.g. \"Translating natural language to SPARQL\"\n   */\n  shareURLWithKatie(url: string, keywords: string, domainId: string): Promise<any> {\n    console.info(\"Share URL with Katie: \" + url);\n\n    let headers = new HttpHeaders();\n    const httpOptions = {\n      headers: headers\n    };\n\n    var requestUrl = this.baseUrl + \"/v1/share/\" + domainId + \"/link\";\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.post(requestUrl, { url, keywords }, httpOptions)\n        .toPromise()\n        .then(response => {\n          console.info(\"URL shared successfully.\");\n          resolve();\n/*\n          var uuid = response['uuid'];\n          console.info(\"URL shared: \" + uuid);\n          resolve(uuid);\n*/\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured when trying to share URL: \" + error.message + \", \" + error.code);\n          if (response.status === 403) {\n            alert(\"Access denied, please login!\");\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject();\n          }\n        });\n    });\n    //alert(\"DEBUG: Trying to share URL ...\");\n    console.info(\"Trying to share URL ...\");\n    return promise;\n  }\n\n  /**\n   * Share credentials with Katie\n   * @param credentialsHint Hint re credentials, e.g. \"My Netflix credentials\"\n   * @param encryptedCredentials Encrypted credentials\n   * @param clientSideEncryptionAlgorithm Client side encryption algorithm, e.g. \"aes-2562\n   */\n  shareCredentialsWithKatie(credentialsHint: string, encryptedCredentials: string, clientSideEncryptionAlgorithm: string, domainId: string): Promise<any> {\n    console.info(\"Share credentials with Katie: \" + credentialsHint);\n\n    let headers = new HttpHeaders();\n    const httpOptions = {\n      headers: headers\n    };\n\n    var requestUrl = this.baseUrl + \"/v1/share/\" + domainId + \"/credentials\";\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.post(requestUrl, { credentialsHint, encryptedCredentials, clientSideEncryptionAlgorithm }, httpOptions)\n        .toPromise()\n        .then(response => {\n          console.info(\"Credentials shared successfully.\");\n          resolve();\n/*\n          var uuid = response['uuid'];\n          console.info(\"URL shared: \" + uuid);\n          resolve(uuid);\n*/\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured when trying to share credentials: \" + error.message + \", \" + error.code);\n          if (response.status === 403) {\n            alert(\"Access denied, please login!\");\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject();\n          }\n        });\n    });\n    //alert(\"DEBUG: Trying to share credentials ...\");\n    console.info(\"Trying to share credentials ...\");\n    return promise;\n  }\n\n  /**\n   * Share shopping list with Katie\n   * @param keywords Hint re shopping list, e.g. \"Things to buy at the supermarket\"\n   * @param information Shopping list items\n   */\n  shareShoppingListWithKatie(keywords: string, information: string, domainId: string): Promise<any> {\n    console.info(\"Share shopping list with Katie: \" + keywords);\n\n    let headers = new HttpHeaders();\n    const httpOptions = {\n      headers: headers\n    };\n\n    var requestUrl = this.baseUrl + \"/v1/share/\" + domainId + \"/shopping-list\";\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.post(requestUrl, { keywords, information }, httpOptions)\n        .toPromise()\n        .then(response => {\n          console.info(\"Shopping list shared successfully.\");\n          resolve();\n/*\n          var uuid = response['uuid'];\n          console.info(\"URL shared: \" + uuid);\n          resolve(uuid);\n*/\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured when trying to share shopping list: \" + error.message + \", \" + error.code);\n          if (response.status === 403) {\n            alert(\"Access denied, please login!\");\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject();\n          }\n        });\n    });\n    //alert(\"DEBUG: Trying to share shopping list ...\");\n    console.info(\"Trying to share shopping list ...\");\n    return promise;\n  }\n\n  /**\n   * Add and train new QnA\n   * @param question Question\n   * @param answer Answer\n   */\n  addQnA(originalQuestion: string, answer: string, domainId: string, jwtToken: string): Promise<any> {\n    console.info(\"Add and train new QnA: \" + originalQuestion + \", \" + answer);\n\n    let headers = null;\n    if (jwtToken != null) {\n      console.info(\"Add Authorization header\");\n      headers = new HttpHeaders().set('Authorization', 'Bearer ' + jwtToken);\n    } else {\n      headers = new HttpHeaders();\n    }\n    const httpOptions = {\n      headers: headers\n    };\n\n    var url = this.baseUrl + \"/v1/question/trained/\" + domainId;\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.post(url, { answer, originalQuestion }, httpOptions)\n      //this.httpClient.post(url, { answer, originalQuestion }, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          var uuid = response['uuid'];\n          console.info(\"New QnA added and trained: \" + uuid);\n          resolve(uuid);\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured when trying to add and train new QnA: \" + error.message + \", \" + error.code);\n          if (response.status === 403) {\n            alert(\"Access denied, please login!\");\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject();\n          }\n        });\n    });\n    //alert(\"DEBUG: Trying to add and train new QnA ...\");\n    console.info(\"Trying to add and train new QnA ...\");\n    return promise;\n    }\n\n  /**\n   * Update question of resubmitted question\n   * @param uuid UUID of resubmitted question\n   * @param question Updated question of resubmitted question\n   */\n  updateQuestionOfResubmittedQuestion(uuid: string, question: string): Promise<any> {\n    //alert(\"DEBUG: Updated question of resubmitted question '\" + uuid + \"': \" + question);\n    console.info(\"Updated question of  resubmitted question '\" + uuid + \"': \" + question);\n\n    var url = this.baseUrl + \"/v1/question/resubmitted/\" + uuid + \"/question\";\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.put(url, { question }, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          this.reQuestion = <ResubmittedQuestion>response;\n          //alert(\"DEBUG: Resubmitted question putted: \" + this.reQuestion.question);\n          console.info(\"Resubmitted question putted: \" + this.reQuestion.question);\n          resolve(this.reQuestion);\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured when trying to put resubmitted question: \" + error.message + \", \" + error.code);\n          if (response.status === 403) {\n            alert(\"Access denied, please login!\");\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else if (response.status === 400 && error.code === 'NO_UPDATED_QUESTION_PROVIDED') {\n            alert(\"WARNING: No question provided!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject();\n          }\n        });\n    });\n    //alert(\"DEBUG: Trying to save updated question ...\");\n    console.info(\"Trying to save updated question ...\");\n    return promise;\n    }\n\n  /**\n   * Submit answer to resubmitted question\n   * @param uuid UUID of resubmitted question\n   * @param answer Answer (plaintext or encrypted)\n   * @param answerClientSideEncrypted True when answer was client side encrypted and false otherwise\n   * @param ownership Ownership, e.g. 'user', 'group' or 'public'\n   */\n  answerResubmittedQuestion(uuid: string, answer: string, answerClientSideEncrypted: boolean, ownership: string): Promise<any> {\n    //alert(\"DEBUG: Answer resubmitted question '\" + uuid + \"': \" + answer);\n    console.info(\"Answer resubmitted question '\" + uuid + \"': \" + answer);\n\n    //alert(\"DEBUG: Selected ownership to view answer: \" + ownership);\n\n    var answerClientSideEncryptedAlgorithm = null;\n    if (answerClientSideEncrypted) {\n      answerClientSideEncryptedAlgorithm = \"aes-256\";\n    }\n\n    var url = this.baseUrl + \"/v1/question/resubmitted/\" + uuid;\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.put(url, { answer, answerClientSideEncryptedAlgorithm, ownership }, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          this.reQuestion = <ResubmittedQuestion>response;\n          //alert(\"DEBUG: Resubmitted question putted: \" + this.reQuestion.question);\n          console.info(\"Resubmitted question putted: \" + this.reQuestion.question);\n          resolve(this.reQuestion);\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured when trying to get resubmitted question: \" + error.message + \", \" + error.code);\n          if (response.status === 403) {\n            alert(\"Access denied, please login!\");\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else if (response.status === 400 && error.code === 'NO_ANSWER_PROVIDED') {\n            alert(\"WARNING: No answer provided, please make sure to enter an answer!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject();\n          }\n        });\n    });\n    //alert(\"DEBUG: Trying to save answer ...\");\n    console.info(\"Trying to save answer ...\");\n    return promise;\n    }\n\n  /**\n   *\n   */\n  sendAnswerToUser(uuid: string): Promise<any> {\n    //alert(\"DEBUG: Try to send answer to user re resubmitted question with UUID '\" + uuid + \"' ...\");\n    console.info(\"Try to send answer to user re resubmitted question with UUID '\" + uuid + \"' ...\");\n\n    var url = this.baseUrl + \"/v1/question/resubmitted/\" + uuid + \"/sendAnswer\";\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.get(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          //alert(\"DEBUG: Answer sent to user\");\n          console.info(\"Answer sent to user\");\n          resolve(response);\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured when trying to get resubmitted question: \" + error.message + \", \" + error.code);\n          if (response.status === 403) {\n            alert(\"Access denied, please login!\");\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else if (response.status === 400) {\n            alert(\"No such resubmitted question with uuid '\" + uuid + \"'!\");\n            console.info(\"No such resubmitted question with uuid '\" + uuid + \"'!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject();\n          }\n        });\n    });\n    //alert(\"DEBUG: Continue trying to send answer ...\");\n    console.info(\"Continue trying to send answer ...\");\n    return promise;\n  }\n\n  /**\n   *\n   */\n  train(uuid: string): Promise<any> {\n    //alert(\"DEBUG: Try to train AskKatie with answer of resubmitted question with UUID '\" + uuid + \"' ...\");\n    console.info(\"Try to train AskKatie with answer of resubmitted question with UUID '\" + uuid + \"' ...\");\n\n    var url = this.baseUrl + \"/v1/question/resubmitted/\" + uuid + \"/train\";\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.get(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          //alert(\"DEBUG: AskKatie trained\");\n          console.info(\"AskKatie trained\");\n          resolve(response);\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured when trying to get resubmitted question: \" + error.message + \", \" + error.code);\n          if (response.status === 403) {\n            alert(\"Access denied, please login!\");\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else if (response.status === 400) {\n            alert(\"No such resubmitted question with uuid '\" + uuid + \"'!\");\n            console.info(\"No such resubmitted question with uuid '\" + uuid + \"'!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject();\n          }\n        });\n    });\n    //alert(\"DEBUG: Continue trying to train AskKatie ...\");\n    console.info(\"Continue trying to train AskKatie ...\");\n    return promise;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Context } from '../models/context';\nimport { ConfigurationService } from \"../services/configuration.service\";\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-domain',\n  templateUrl: './domain.component.html',\n  styleUrls: ['./domain.component.css']\n})\nexport class DomainComponent implements OnInit {\n\n  domainId: string;\n  domain: Context;\n\n  /**\n   *\n   */\n  constructor(private configurationService: ConfigurationService, private route: ActivatedRoute) { }\n\n  /**\n   *\n   */\n  ngOnInit(): void {\n    this.domainId = this.route.snapshot.paramMap.get(\"id\");\n    this.getDomain();\n  }\n\n  /**\n   * Get domain name from domain object\n   */\n  get domainName() {\n      return (this.domain) ? this.domain.name : \"Loading domain ...\";\n  }\n\n  /**\n   * Get domain\n   */\n  getDomain(): void {\n    this.configurationService.getContext(this.domainId).then(response => {\n      this.domain = <Context>response;\n      console.info(\"Domain '\" + this.domain.id + \"' has been loaded.\");\n    });\n  }\n\n}\n","<div class=\"sub-header\">\n  <p class=\"font-weight-600\" *ngIf=\"domain != null\"><a href=\"/#/dashboard\">Dashboard</a> / <a href=\"/#/domain/{{domainId}}\">{{domainName}}</a></p>\n</div>\n\n<main class=\"align-center\">\n  <app-domain-navigation [domainId]=\"domainId\" [pageId]=\"'qna'\"></app-domain-navigation>\n  <div class=\"content p-24 justify-center\">\n    <div class=\"container\">\n\n<h2>{{ 'katie.questions_and_answers' | translate }}</h2>\n<p class=\"ml-24 mid-grey text-button\" [routerLink]=\"['/resubmitted-questions/' + domainId ]\">Questions which need to be answered</p>\n<p class=\"ml-24 mid-grey text-button\" [routerLink]=\"['/trained-questions-answers/' + domainId ]\">Questions/Answers Katie got trained with</p>\n<p class=\"ml-24 mid-grey text-button\" [routerLink]=\"['/asked-questions/' + domainId ]\">All Questions which were asked</p>\n<br/>\n<p><button [routerLink]=\"['/trained-questions-answers/' + domainId + '/add']\" class=\"fw-600 bg-blue white solid-button\">{{ 'katie.add_qna' | translate }}</button></p>\n\n    </div>\n  </div>\n</main>\n","import { Component, OnInit, HostListener, ElementRef, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  currentLanguage: string;\n\n  @HostListener('document:click', ['$event'])\n  clickout(event) {\n    if(this.eRef.nativeElement.contains(event.target)) {\n      //console.info(\"clicked inside footer component: \" + event.target);\n      if (event.target.id != \"language-switch-image\" && event.target.id != \"language-switch-text\" && this.document.getElementById('language_switcher_dd').classList.contains('opened-dd')) {\n        console.info(\"Close modal.\");\n        this.document.getElementById('language_switcher_dd').classList.toggle('opened-dd');\n      }\n    } else {\n      //console.info(\"clicked outside footer component\");\n      if (this.document.getElementById('language_switcher_dd').classList.contains('opened-dd')) {\n        console.info(\"Close modal.\");\n        this.document.getElementById('language_switcher_dd').classList.toggle('opened-dd');\n      }\n    }\n  }\n\n  constructor(@Inject(DOCUMENT) private document, private translate: TranslateService, private eRef: ElementRef) { }\n\n  ngOnInit(): void {\n    // INFO: Set language\n    var browserLanguage = navigator.language;\n    if (browserLanguage.indexOf(\"de\") === 0) {\n      this.useLanguage(\"de\");\n    } else if (browserLanguage.indexOf(\"pt\") === 0) {\n      this.useLanguage(\"pt\");\n    } else if (browserLanguage.indexOf(\"fr\") === 0) {\n      this.useLanguage(\"fr\");\n    } else {\n      this.useLanguage(\"en\");\n    }\n  }\n\n  /**\n   * Change language of translation\n   */\n  useLanguage(language: string) {\n    this.translate.use(language);\n    this.currentLanguage = language;\n\n    var buttonID = 'button_lang_' + language;\n    //alert(\"DEBUG: Button Id: \" + buttonID);\n    this.document.getElementById(\"button_lang_en\").className = \"black-grey text-button\";\n    this.document.getElementById(\"button_lang_de\").className = \"black-grey text-button\";\n    this.document.getElementById(\"button_lang_pt\").className = \"black-grey text-button\";\n    this.document.getElementById(\"button_lang_fr\").className = \"black-grey text-button\";\n    this.document.getElementById(buttonID).className = \"mid-grey fw-600\";\n  }\n}\n","<footer class=\"mt-128\">\n      <div class=\"dd\">\n        <button class=\"text-btn-icon\" (click)=\"language_switcher_dd.classList.toggle('opened-dd');\">\n          <img id=\"language-switch-image\" src=\"assets/img/icon/world.svg\" alt=\"Icon of a globe\">\n          <p id=\"language-switch-text\" class=\"dark-grey ml-8\">{{ 'katie.language_' + currentLanguage | translate}}</p>\n        </button>\n        <div class=\"p-24 dd-content closed-dd transform-translateY-100\" id=\"language_switcher_dd\" #language_switcher_dd>\n          <!-- INFO: See translate.setDefaultLang('en') inside src/app/app.component.ts -->\n          <p class=\"black-grey\"><button id=\"button_lang_en\" (click)=\"useLanguage('en')\">{{ 'katie.language_en' | translate}}</button></p>\n          <p class=\"mt-12 black-grey\"><button id=\"button_lang_pt\" (click)=\"useLanguage('pt')\">{{ 'katie.language_pt' | translate}}</button></p>\n          <p class=\"mt-12 black-grey\"><button id=\"button_lang_fr\" (click)=\"useLanguage('fr')\">{{ 'katie.language_fr' | translate}}</button></p>\n          <p class=\"mt-12 black-grey\"><button id=\"button_lang_de\" (click)=\"useLanguage('de')\">{{ 'katie.language_de' | translate}}</button></p>\n        </div>\n      </div>\n      <div>\n        <p class=\"dark-grey\">© <a href=\"https://wyona.com\">Wyona</a></p>\n      </div>\n</footer>\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DatePipe } from '@angular/common';\n\n@Pipe({\n  name: 'epochHumanReadable'\n})\nexport class EpochHumanReadablePipe extends DatePipe implements PipeTransform {\n\n  /**\n   *\n   */\n  transform(timestamp: number, ...args: unknown[]): any {\n    return super.transform(new Date(timestamp), \"MMM dd, yyyy, HH:mm:ss ('GMT'Z)\"); // Apr 02, 2021, 01:12:07 (GMT+0200)\n    //return new Date(timestamp); // Fri Apr 02 2021 01:12:07 GMT+0200 (Mitteleuropäische Sommerzeit)\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Error } from '../models/error';\nimport { User } from '../models/user';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IamService {\n\n  baseUrl = environment.apiBaseUrl;\n\n  users: User[] = [];\n  user: User;\n\n  /**\n   *\n   */\n  constructor(private httpClient: HttpClient) {\n    console.info(\"Loading IAM service ...\");\n  }\n\n  /**\n   * Reset password\n   * @param password New password\n   * @param resetToken Reset token\n   */\n  async resetPassword(password: string, resetToken: string): Promise<any> {\n    //alert(\"DEBUG: Submit new password ...\");\n    console.info(\"Submit new password ...\");\n\n    var url = this.baseUrl + \"/v1/user/reset-password\";\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.put(url, { password, resetToken }, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          console.info(\"Password reset successful.\");\n          resolve();\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          if (response.status === 403) {\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.code + \", \" + error.message);\n            reject();\n          }\n        });\n    });\n    return promise;\n  }\n\n  /**\n   * Submit email or username when forgot password\n   */\n  async submitUsername(username: string): Promise<any> {\n    //alert(\"DEBUG: Submit username '\" + username + \"' ...\");\n    console.info(\"Submit username '\" + username + \"' ...\");\n\n    var url = this.baseUrl + \"/v1/user/forgot-password?username=\" + username;\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.post(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          console.info(\"Username submitted successfully.\");\n          resolve();\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          if (response.status === 403) {\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.code + \", \" + error.message);\n            reject();\n          }\n        });\n    });\n    return promise;\n  }\n\n  /**\n   * Add user\n   * @param language Two-letter language code, e.g. \"en\" or \"de\"\n   * @param createMyKatie When true, then create a personal MyKatie domain for this new user\n   */\n  async addUser(email: string, username: string, password: string, firstname: string, lastname: string, role: string, language: string, createMyKatie: boolean): Promise<any> {\n    console.info(\"Add user '\" + username + \"' ...\");\n\n    var url = this.baseUrl + \"/v1/user/?mykatie=\" + createMyKatie;\n    \n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.post(url, { email: email, username: username, firstname: firstname, lastname: lastname, password: password, role: role, language: language }, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          //this.TODO = <TODO>response;\n          //alert(\"DEBUG: User updated successfully\");\n          console.info(\"User updated successfully\");\n          resolve();\n          //resolve(this.TODO);\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured when trying to update user: \" + error.message + \", \" + error.code);\n          if (response.status === 403) {\n            alert(\"Access denied, please login!\");\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject();\n          }\n        });\n    });\n\n    //alert(\"DEBUG: Trying to add user ...\");\n    console.info(\"Trying to add user ...\");\n    return promise;\n  }\n\n  /**\n   * Update a particular user\n   */\n  async updateUser(user: User): Promise<any> {\n    console.info(\"Update user '\" + user.id + \"' ...\");\n\n    var url = this.baseUrl + \"/v1/user/\" + user.id;\n\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.put(url, { id: user.id, firstname: user.firstname, lastname: user.lastname, email: user.email, password: user.password, language: user.language }, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          //this.TODO = <TODO>response;\n          //alert(\"DEBUG: User updated successfully\");\n          console.info(\"User updated successfully\");\n          resolve();\n          //resolve(this.TODO);\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          console.info(\"An error occured when trying to update user: \" + error.message + \", \" + error.code);\n          if (response.status === 403) {\n            alert(\"Access denied, please login!\");\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.message);\n            reject();\n          }\n        });\n    });\n\n    //alert(\"DEBUG: Trying to update user ...\");\n    console.info(\"Trying to update user ...\");\n    return promise;\n  }\n\n  /**\n   * Get a particular user\n   */\n  async getUser(id: string): Promise<any> {\n    //alert(\"DEBUG: Get user ...\");\n    console.info(\"Get user with id '\" + id + \"' ...\");\n\n    var url = this.baseUrl +  \"/v1/user/\" + id;\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.get(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          this.user = <User>response;\n          resolve(this.user);\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          if (response.status === 403) {\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.code + \", \" + error.message);\n            reject();\n          }\n        });\n    });\n    return promise;\n  }\n\n  /**\n   * Get all users\n   */\n  async getAllUsers(): Promise<any> {\n    //alert(\"DEBUG: Get users ...\");\n    console.info(\"Get users ...\");\n\n    var url = this.baseUrl +  \"/v1/users\";\n    let promise = new Promise((resolve, reject) => {\n      this.httpClient.get(url, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          this.users = <User[]>response;\n          console.info(\"Total number of users: \" + this.users.length);\n          resolve(this.users);\n          })\n        .catch(response => {\n          console.info(\"Response status: \" + response.status);\n          var error = <Error>response.error; // INFO: This works, because we use httpClient instead http\n          if (response.status === 403) {\n            console.info(\"Access denied, please login!\");\n            reject();\n          } else {\n            alert(\"An error occured: \" + error.code + \", \" + error.message);\n            reject();\n          }\n        });\n    });\n    return promise;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from \"../services/authentication.service\";\nimport { Message } from \"../models/message\";\nimport { Router } from '@angular/router';\nimport { DataSharingService } from '../services/data-sharing.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  /**\n   *\n   */\n  constructor(private authenticationService: AuthenticationService, private router: Router, private dataSharingService: DataSharingService) {\n  }\n\n  /**\n   *\n   */\n  ngOnInit(): void {\n    this.doLogout();\n  }\n\n  /**\n   * Do logout\n   */\n  doLogout(): void {\n    //alert('DEBUG: Logout ...');\n    console.info(\"Logout ...\");\n\n    this.authenticationService.doLogout().then(response => {\n      //alert(\"Message: \" + <Message>response.message);\n      console.info(\"Message: \" + <Message>response.message);\n      this.dataSharingService.isUserLoggedIn.next(false);\n      this.router.navigate(['']);\n    });\n  }\n}\n","<p>logout ...</p>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Context } from '../models/context';\nimport { Webhook } from '../models/webhook';\nimport { ConfigurationService } from \"../services/configuration.service\";\nimport { DomainService } from \"../services/domain.service\";\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-domain-webhooks',\n  templateUrl: './domain-webhooks.component.html',\n  styleUrls: ['./domain-webhooks.component.css']\n})\nexport class DomainWebhooksComponent implements OnInit {\n\n  domainId: string;\n  domain: Context;\n\n  webhooks: Webhook[] = [];\n\n  constructor(private configurationService: ConfigurationService, private route: ActivatedRoute, private domainService: DomainService, @Inject(DOCUMENT) private document) { }\n\n  ngOnInit(): void {\n    this.domainId = this.route.snapshot.paramMap.get(\"id\");\n    this.getDomain();\n    this.getWebhooks();\n  }\n\n  /**\n   * Get domain\n   */\n  getDomain(): void {\n    this.configurationService.getContext(this.domainId).then(response => {\n      this.domain = <Context>response;\n      console.info(\"Domain '\" + this.domain.id + \"' has been loaded.\");\n    });\n  }\n\n  /**\n   * @param url Payload URL\n   */\n  addWebhook(url: string): void {\n    //alert(\"DEBUG: Add webhook '\" + url + \"' ...\");\n\n    this.domainService.addWebhook(this.domainId, url).then(response => {\n      //alert(\"DEBUG: Webhook has been added successfully!\");\n\n      // INFO: Reload webhooks\n      this.getWebhooks();\n\n      this.document.getElementById('addWebhookOverlay').classList.toggle('open-overlay');\n    });\n  }\n\n  /**\n   * Get all webhooks associated with this domain\n   */\n  getWebhooks(): void {\n    console.info(\"Get all webhooks ...\");\n\n    this.domainService.getWebhooks(this.domainId).then(response => {\n      this.webhooks = <Webhook[]>response;\n    });\n  }\n\n  /**\n   * @param id Webhook ID\n   */\n  deleteWebhook(id: string): void {\n    //alert(\"DEBUG: Delete Webhook '\" + this.domainId + \"/\" + id + \"' ...\");\n    this.domainService.deleteWebhook(this.domainId, id).then(response => {\n      //alert(\"DEBUG: Webhook '\" + id + \"' has been deleted.\");\n      console.info(\"Webhook '\" + id + \"' has been deleted.\");\n\n      // INFO: Reload webhooks\n      this.getWebhooks();\n    });\n  }\n\n}\n","<div class=\"sub-header\">\n  <p class=\"font-weight-600\" *ngIf=\"domain != null\"><a href=\"/#/dashboard\">Dashboard</a> / <a href=\"/#/domain/{{domainId}}\">{{domain.name}}</a></p>\n</div>\n\n<main class=\"align-center\">\n  <app-domain-navigation [domainId]=\"domainId\" [pageId]=\"'NULL'\"></app-domain-navigation>\n  <div class=\"content p-24 justify-center\">\n\n    <div id=\"settings-navigation\" style=\"float: left; margin-right: 30px; padding: 20px; background-color: var(--white-grey);\">\n      <ul>\n        <li><a href=\"/#/domain/{{domainId}}/settings\">General</a></li>\n        <li><a href=\"/#/domain/{{domainId}}/settings\">Index Configuration</a></li>\n        <li><a href=\"/#/domain/{{domainId}}/settings\">Mail Configuration</a></li>\n        <li><a href=\"/#/domain/{{domainId}}/settings\">IMAP Configuration</a></li>\n        <li>Webhooks</li>\n      </ul>\n    </div>\n\n    <div class=\"container\">\n      <h2>Webhooks</h2>\n      <br/>\n      <p>Webhooks allow external services to be notified when certain events happen, for example when an expert is answering a question. When the specified events happen, we’ll send a POST request to each of the URLs you provide. Learn more in our <a href=\"webhooks-guide.html\" class=\"blue\">Webhooks Guide</a>.</p>\n      <br/>\n        <p>\n          <button (click)=\"addWebhookOverlay.classList.toggle('open-overlay')\" class=\"fw-600 bg-blue white solid-button\">{{ 'katie.add_webhook' | translate }}</button>\n        </p>\n\n            <div class=\"close-overlay overlay\" #addWebhookOverlay id=\"addWebhookOverlay\">\n              <div class=\"resubmit-form\">\n                <h2>{{ 'katie.add_webhook' | translate }}</h2>\n                <!--<p class=\"mt-24\">{{ 'katie.add_webhook_instruction' | translate }}</p>-->\n                <input #url id=\"url\" class=\"form-field mt-24\" type=\"text\" placeholder=\"Payload URL\"/>\n                <!--<input #url id=\"url\" class=\"form-field mt-24\" type=\"text\" placeholder=\"Payload URL, e.g. https://postman-echo.com/post\"/>-->\n<!--\n                <select #method class=\"form-field mt-48\" id=\"method\">\n                  <option value=\"POST\">POST</option>\n                  <option value=\"PUT\">PUT</option>\n                </select>\n-->\n                <div class=\"space-between align-center mt-48\">\n                  <button type=\"button\" name=\"close\" class=\"text-button blue mr-24\" (click)=\"addWebhookOverlay.classList.toggle('open-overlay')\">{{ 'katie.cancel' | translate }}</button>\n                  <button class=\"fw-600 solid-button bg-blue white\" (click)=\"addWebhook(url.value)\">{{ 'katie.add' | translate }}</button>\n                </div>\n              </div>\n            </div>\n      <br/>\n      <div *ngIf=\"webhooks.length > 0\">\n      <table id=\"webhook-list\" border=\"1\" width=\"100%\">\n        <tr>\n          <th>Payload URL</th>\n          <th>Method</th>\n          <th>Content type</th>\n          <th>Active</th>\n          <th>{{ 'katie.iam_actions' | translate }}</th>\n        </tr>\n        <tr *ngFor=\"let webhook of webhooks\">\n          <td>{{webhook.payloadURL}}</td>\n          <td>POST</td>\n          <td>application/json</td>\n          <td>{{webhook.enabled}}</td>\n          <td><a (click)=\"deleteWebhook(webhook.id)\"><img alt=\"Delete webhook\" width=\"20px\" id=\"trash_icon\" src=\"assets/img/icon/delete_black_24dp.svg\" style=\"vertical-align: middle;\"/></a> | <a href=\"/#/domain/{{domainId}}/settings/webhooks/{{webhook.id}}/deliveries\">View Deliveries</a></td>\n        </tr>\n      </table>\n      </div>\n    </div>\n  </div>\n</main>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { QuestionsService } from \"../services/questions.service\";\nimport { ResubmittedQuestion } from '../models/resubmitted_question';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-display-answer-of-resubmitted-question',\n  templateUrl: './display-answer-of-resubmitted-question.component.html',\n  styleUrls: ['./display-answer-of-resubmitted-question.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class DisplayAnswerOfResubmittedQuestionComponent implements OnInit {\n\n  domainId: string;\n  uuid: string;\n  username: string;\n  reQuestion: ResubmittedQuestion;\n  question: string;\n  answer: string;\n\n  constructor(private route: ActivatedRoute, private questionsService: QuestionsService) { }\n\n  ngOnInit(): void {\n    this.route\n      .queryParams\n      .subscribe(params => {\n        this.domainId = params['domain-id'] || 'NO_DOMAIN_ID_QUERY_PARAMETER';\n        this.uuid = params['uuid'] || 'NO_UUID_QUERY_PARAMETER';\n        // TODO: Use username to prefill login when answer is protected\n        this.username = params['username'] || 'NO_USERNAME_PARAMETER';\n        //alert(\"Query parameters: \" + this.domainId + \", \" + this.uuid + \", \" + this.username);\n        console.info(\"Query parameters: \" + this.domainId + \", \" + this.uuid + \", \" + this.username);\n      });\n    this.getAnswerOfResubmittedQuestion(this.domainId, this.uuid);\n  }\n\n  /**\n   *\n   */\n  getAnswerOfResubmittedQuestion(domainId: string, uuid: string): void {\n    this.questionsService.getAnswerOfResubmittedQuestion(domainId, uuid).then(response => {\n      this.reQuestion = <ResubmittedQuestion>response;\n      this.question = this.reQuestion.question;\n      this.answer = this.reQuestion.answer;\n/*\n      this.status = this.reQuestion.status;\n      this.email = this.reQuestion.email;\n      this.answerLinkType = this.reQuestion.answerLinkType;\n      this.fcmtoken = this.reQuestion.fcmtoken;\n      this.remoteAddress = this.reQuestion.remoteAddress;\n      this.respondent = this.reQuestion.respondent;\n      this.rating = this.reQuestion.rating;\n      this.feedback = this.reQuestion.feedback;\n*/\n      //this.timestampResubmitted = this.reQuestion.timestampResubmitted;\n      if (this.reQuestion !=  null) {\n        //alert(\"Question: \" + this.reQuestion.question);\n        console.info(\"Question: \" + this.reQuestion.question);\n      } else {\n        console.info(\"No question available for UUID '\" + uuid + \"'!\");\n      }\n    });\n  }\n}\n","<div class=\"sub-header\">\n  <p class=\"font-weight-600\">{{ 'katie.answer_to_your_question' | translate }}</p>\n</div>\n\n<main class=\"align-center\">\n\n<div class=\"container mt-48\">\n<div><strong>{{ 'katie.question' | translate }}</strong>: <div>{{ question }}</div></div>\n<br/>\n<div><strong>{{ 'katie.answer' | translate }}</strong>: <div class=\"answer\" [innerHTML]=\"answer | linkify\"></div></div>\n</div>\n\n<div class=\"container mt-48\">\n<p>{{ 'katie.answer_helpful_please_rate' | translate }}</p>\n<br/>\n<p><a href=\"/#/rate-answer?domain-id={{domainId}}&uuid={{ uuid }}&rating=2\">1</a>&#160;<a href=\"/#/rate-answer?domain-id={{domainId}}&uuid={{ uuid }}&rating=4\">2</a>&#160;<a href=\"/#/rate-answer?domain-id={{domainId}}&uuid={{ uuid }}&rating=6\">3</a>&#160;<a href=\"/#/rate-answer?domain-id={{domainId}}&uuid={{ uuid }}&rating=8\">4</a>&#160;<a href=\"/#/rate-answer?domain-id={{domainId}}&uuid={{ uuid }}&rating=10\">5</a></p>\n</div>\n</main>\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeStyle, SafeScript, SafeUrl, SafeResourceUrl } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safecontent'\n})\nexport class SafecontentPipe implements PipeTransform {\n\n  /**\n   *\n   */\n  constructor(protected sanitizer: DomSanitizer) {}\n\n  /**\n   *\n   */\n  public transform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n    switch (type) {\n      case 'html': return this.sanitizer.bypassSecurityTrustHtml(value);\n      case 'style': return this.sanitizer.bypassSecurityTrustStyle(value);\n      case 'script': return this.sanitizer.bypassSecurityTrustScript(value);\n      case 'url': return this.sanitizer.bypassSecurityTrustUrl(value);\n      case 'resourceUrl': return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n      default: throw new Error(`Invalid safe type specified: ${type}`);\n    }\n  }\n}\n","import { Component, OnInit, Inject, ViewEncapsulation } from '@angular/core';\nimport { Answer } from \"../models/answer\";\nimport { TranslateService } from '@ngx-translate/core';\nimport { AskQuestionService } from \"../services/ask-question.service\";\nimport { ConfigurationService } from \"../services/configuration.service\";\nimport { Context } from '../models/context';\nimport { QuestionsService } from \"../services/questions.service\";\nimport { QuestionAnswer } from '../models/question_answer';\nimport { DOCUMENT } from '@angular/common';\nimport { AesencryptDecryptService } from '../services/aesencrypt-decrypt.service';\nimport { AuthenticationService } from \"../services/authentication.service\";\nimport { User } from '../models/user';\n\n//declare var tinymce: any;\n\n@Component({\n  selector: 'app-my-katie',\n  templateUrl: './my-katie.component.html',\n  styleUrls: ['./my-katie.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MyKatieComponent implements OnInit {\n\n  answer: Answer;\n  answerReceived: boolean;\n  question: string;\n\n  domainId: string;\n  myKatieDomain: Context;\n\n  isAskTabSelected: boolean;\n  isShareTabSelected: boolean;\n\n  currentItemType: string;\n\n  tinymce_note: string;\n\n  tinymce_shopping_list: string;\n\n  tinymce_recipe_ingredients: string;\n  tinymce_recipe_preparation: string;\n\n  qAnswers: QuestionAnswer[] = [];\n  user: User;\n\n  sharedItemUUID: string;\n\n  /**\n   *\n   */\n  constructor(private translateService: TranslateService, private askQuestionService: AskQuestionService, private configurationService: ConfigurationService, private questionsService: QuestionsService, @Inject(DOCUMENT) private document, private aesEncryptDecryptService: AesencryptDecryptService, private authenticationService: AuthenticationService) { }\n\n  /**\n   *\n   */\n  ngOnInit(): void {\n    // INFO: Init empty answer\n    this.answer = new Answer();\n    this.answerReceived = false;\n\n    this.getMyKatieDomain();\n\n    this.isAskTabSelected = true;\n    this.isShareTabSelected = false;\n\n    this.currentItemType = \"item_one-liner\";\n\n    this.getSignedInUser();\n  }\n\n  /**\n   * Get user object of signed in user\n   */\n  getSignedInUser(): void {\n    this.authenticationService.getUser().then(response => {\n      this.user = <User>response;\n\n      if (this.user !=  null) {\n        //alert(\"DEBUG: IamUpdateProfileComponent#getUser(): Username: \" + this.user.username);\n        console.info(\"Username: \" + this.user.username);\n      } else {\n        console.debug(\"IamUpdateProfileComponent#getUser(): User not signed in!\");\n      }\n    });\n  }\n\n  /**\n   *\n   */\n  toggleItemMenu(uuid: string): void {\n    var itemId = \"item_menu_\" + uuid;\n\n    //alert(\"DEBUG: Toggle menu of item '\" + uuid + \"' (Current style display: \" + this.document.getElementById(itemId).style.display + \")  ...\");\n\n    if (this.document.getElementById(itemId).style.display === 'none') {\n      this.document.getElementById(itemId).style.display = \"block\";\n    } else {\n      this.document.getElementById(itemId).style.display = \"none\";\n    }\n  }\n\n  /**\n   * Get trained questions/answers\n   */\n  getTrainedQuestionsAnswers(): void {\n    console.info(\"Get trained QnAs of domain: \" + this.domainId);\n    // TODO: Implement pagination\n    this.questionsService.getTrainedQuestionsAnswers(this.domainId, 0, 100).then(response => {\n      this.qAnswers = <QuestionAnswer[]>response;\n      //alert(\"DEBUG: Number of trained questions/answers: \" + this.qAnswers.length);\n\n      this.setDisplay();\n    });\n  }\n\n  /**\n   *\n   */\n  setDisplay() {\n      if (this.qAnswers !=  null && this.qAnswers.length > 0) {\n        console.info(\"Number of trained questions/answers: \" + this.qAnswers.length);\n\n        this.document.getElementById('shareWithKatie').style.display = \"none\";\n        this.document.getElementById('askKatie').style.display = \"flex\";\n        this.document.getElementById('askKatieAnswer').style.display = \"flex\";\n        this.document.getElementById('sharedItems').style.display = \"block\"; // INFO: div appear below each other\n        this.document.getElementById('linkAllSharedItems').style.display = \"flex\";\n        this.document.getElementById('welcomeNoSharedItemsYet').style.display = \"none\";\n      } else {\n        console.info(\"No trained questions/answers available!\");\n\n        this.document.getElementById('shareWithKatie').style.display = \"none\";\n        this.document.getElementById('askKatie').style.display = \"none\";\n        this.document.getElementById('askKatieAnswer').style.display = \"none\";\n        this.document.getElementById('sharedItems').style.display = \"none\";\n        this.document.getElementById('linkAllSharedItems').style.display = \"none\";\n        this.document.getElementById('welcomeNoSharedItemsYet').style.display = \"flex\";\n      }\n  }\n\n  /**\n   *\n   */\n  shareOneLiner(info: string): void {\n    //alert(\"DEBUG: Share one liner: \" + info);\n    this.shareInformation(info);\n  }\n\n  /**\n   *\n   */\n  shareNote(): void {\n    //alert(\"DEBUG: Share note: \" + text);\n    this.shareInformation(this.tinymce_note);\n  }\n\n  /**\n   *\n   */\n  shareLink(link: string, keywords: string): void {\n    //alert(\"DEBUG: Share link: \" + link);\n\n    if (this.domainId === null) {\n      alert(\"ERROR: No MyKatie domain Id configured!\");\n      return;\n    }\n\n    //alert(\"DEBUG: Share URL: \" + link);\n    this.questionsService.shareURLWithKatie(link, keywords, this.domainId).then(response => {\n      //var uuid = response;\n      //console.info(\"URL shared successfully: \" + uuid);\n      console.info(\"URL shared successfully\");\n      alert(\"Thank you for sharing this URL!\");\n\n      this.getTrainedQuestionsAnswers();\n    });\n  }\n\n  /**\n   *\n   */\n  shareAppointment(title: string, location: string, startDate: string, endDate: string): void {\n    //alert(\"DEBUG: Share appointment: \" + title);\n    this.shareInformation(title + \" \" + location + \" \" + startDate + \" \" + endDate);\n  }\n\n  /**\n   * @param hint Hint for what the credentials are used, e.g. \"Netflix account\"\n   * @param pwd4Encryption Password for client side encryption\n   */\n  sharePassword(hint: string, username: string, password: string, pwd4Encryption: string): void {\n    if (this.domainId === null) {\n      alert(\"ERROR: No MyKatie domain Id configured!\");\n      return;\n    }\n\n    //alert(\"DEBUG: Share credentials hint: \" + hint);\n    var encryptedCredentials = this.aesEncryptDecryptService.encrypt(\"Username: \" + username + \" Password: \" + password, pwd4Encryption);\n    this.questionsService.shareCredentialsWithKatie(hint, encryptedCredentials, \"aes-256\", this.domainId).then(response => {\n      //var uuid = response;\n      //console.info(\"Credentials shared successfully: \" + uuid);\n      console.info(\"Credentials shared successfully\");\n      alert(\"Thank you for sharing credentials!\");\n\n      this.getTrainedQuestionsAnswers();\n    });\n  }\n\n  /**\n   *\n   */\n  shareContact(name: string, email: string, phoneNumber: string, address: string): void {\n    //alert(\"DEBUG: Share contact: \" + name);\n    this.shareInformation(name + \" \" + email + \" \" + phoneNumber + \" \" + address);\n  }\n\n  /**\n   *\n   */\n  shareShoppingList(): void {\n    if (this.domainId === null) {\n      alert(\"ERROR: No MyKatie domain Id configured!\");\n      return;\n    }\n\n    //alert(\"DEBUG: Share shopping list: \" + items);\n    this.questionsService.shareShoppingListWithKatie(\"shopping list things to buy\", this.tinymce_shopping_list, this.domainId).then(response => {\n      //var uuid = response;\n      //console.info(\"Shopping list shared successfully: \" + uuid);\n      console.info(\"Shopping list shared successfully\");\n      alert(\"Thank you for sharing shopping list!\");\n\n      this.getTrainedQuestionsAnswers();\n    });\n  }\n\n  /**\n   *\n   */\n  shareRecipe(title: string): void {\n    //alert(\"DEBUG: Share recipe: \" + title);\n    this.shareInformation(title + \" \" + this.tinymce_recipe_ingredients + \" \" + this.tinymce_recipe_preparation);\n\n    // INFO: Because of a race condition we have to remove tinymce manually, whereas see https://stackoverflow.com/questions/33278834/getting-ns-error-unexpected-while-using-tinymce-in-mozilla and https://ittone.ma/ittone/javascript-import-tinymce-explicitly-in-angular-tinymce-angular/\n/*\n    try {\n      tinymce.remove(\"#tinymce4answer1\");\n    } catch(e) {\n      alert(\"ERROR: \" + e);\n    }\n    try {\n      tinymce.remove(\"#tinymce4answer2\");\n    } catch(e) {\n      alert(\"ERROR: \" + e);\n    }\n*/\n  }\n\n  /** \n   *\n   */\n  selectShareItemType(type: string): void {\n    //alert(\"DEBUG: Selected item type: \" + type);\n    this.document.getElementById(this.currentItemType).style.display = \"none\";\n    this.currentItemType = type;\n    this.document.getElementById(this.currentItemType).style.display = \"flex\";\n  }\n\n  /**\n   *\n   */\n  cancel(): void {\n    //alert(\"DEBUG: Cancel sharing\");\n    this.setDisplay();\n  }\n\n  /**\n   *\n   */\n  toggleShareTab(): void {\n    // this.setDisplay();\n    this.isAskTabSelected = false;\n    this.isShareTabSelected = true;\n\n    this.document.getElementById('shareWithKatie').style.display = \"flex\";\n    this.document.getElementById('askKatie').style.display = \"none\";\n    this.document.getElementById('askKatieAnswer').style.display = \"none\";\n    this.document.getElementById('sharedItems').style.display = \"none\";\n    this.document.getElementById('linkAllSharedItems').style.display = \"none\";\n    this.document.getElementById('welcomeNoSharedItemsYet').style.display = \"none\";\n\n/*\n    if (this.isAskTabSelected) {\n      //alert(\"DEBUG: Toggle share tab ...\");\n      this.isAskTabSelected = false;\n      this.isShareTabSelected = true;\n\n      this.document.getElementById('shareWithKatie').style.display = \"flex\";\n      this.document.getElementById('askKatie').style.display = \"none\";\n      this.document.getElementById('askKatieAnswer').style.display = \"none\";\n      this.document.getElementById('welcomeNoSharedItemsYet').style.display = \"none\";\n\n      this.document.getElementById('shareTab').classList.toggle('share-tab-selected');\n      this.document.getElementById('askTab').classList.toggle('ask-tab-selected');\n    } else {\n      alert(\"DEBUG: .toggleShareTab(): Do not toggle styles\");\n    }\n*/\n  }\n\n  /**\n   *\n   */\n  toggleAskTab(): void {\n    if (this.isShareTabSelected) {\n      //alert(\"DEBUG: Toggle ask tab ...\");\n      this.isAskTabSelected = true;\n      this.isShareTabSelected = false;\n\n      this.document.getElementById('shareWithKatie').style.display = \"none\";\n      this.document.getElementById('askKatie').style.display = \"flex\";\n      this.document.getElementById('askKatieAnswer').style.display = \"flex\";\n\n      this.document.getElementById('shareTab').classList.toggle('share-tab-selected');\n      this.document.getElementById('askTab').classList.toggle('ask-tab-selected');\n    } else {\n      //alert(\"DEBUG: .toggleAskTab(): Do not toggle styles.\");\n    }\n  }\n\n  /**\n   *\n   */\n  getMyKatieDomain(): void {\n    this.domainId = null;\n\n    this.configurationService.getMyKatieDomain().then(response => {\n      this.myKatieDomain = <Context>response;\n      if (this.myKatieDomain != null) {\n        this.domainId = this.myKatieDomain.id;\n        this.getTrainedQuestionsAnswers();\n      } else {\n        console.warn(\"No MyKatie domain Id configured!\");\n        this.document.getElementById('noMyKatieConfigured').style.display = \"block\"; // INFO: div appear below each other\n      }\n    });\n  }\n\n  /**\n   *\n   */\n  askQuestion(question: string): void {\n    if (this.domainId === null) {\n      alert(\"ERROR: No MyKatie domain Id configured!\");\n      return;\n    }\n\n    //alert(\"DEBUG: Ask question: \" + question);\n\n    if (question.length === 0) {\n      alert(\"WARNING: Please enter a question!\");\n      return;\n    }\n\n    this.answerReceived = false;\n\n    var language = this.translateService.currentLang;\n\n    this.askQuestionService.askQuestion(question, null, this.domainId, language).then(response => {\n      this.answer = <Answer>response;\n      this.answerReceived = true;\n      //alert(\"DEBUG: Answer received: \" + this.answer.answer);\n    })\n  }\n\n  /**\n   *\n   */\n  shareInformation(information: string): void {\n    if (this.domainId === null) {\n      alert(\"ERROR: No MyKatie domain Id configured!\");\n      return;\n    }\n\n    //alert(\"DEBUG: Share information: \" + information);\n    this.questionsService.shareInformationWithKatie(information, this.domainId).then(response => {\n      //var uuid = response;\n      //console.info(\"Information shared successfully: \" + uuid);\n      console.info(\"Information shared successfully\");\n      alert(\"Thank you for sharing this information!\");\n\n      this.getTrainedQuestionsAnswers();\n    });\n  }\n\n  /**\n   *\n   */\n  openShareItemOverlay(uuid: string): void {\n    this.sharedItemUUID = uuid;\n\n    //alert(\"DEBUG: Share QnA '\" + this.domainId + \"/\" + uuid + \"' ...\");\n\n    this.toggleItemMenu(uuid);\n    this.document.getElementById('shareItemOverlay').classList.toggle('open-overlay');\n  }\n\n  /**\n   * Share information with another user\n   * @param email E-Mail of other user\n   */\n  shareItem(email: string): void {\n    //alert(\"DEBUG: Share QnA '\" + this.sharedItemUUID + \"' with '\" + email + \"' ...\");\n    this.document.getElementById('shareItemOverlay').classList.toggle('open-overlay');\n\n    this.questionsService.shareInformationWithAnotherUser(this.domainId, this.sharedItemUUID, email).then(response => {\n      console.info(\"Information shared successfully with another user\");\n      //alert(\"DEBUG: Information shared successfully with another user\");\n    });\n  }\n\n  /**\n   *\n   */\n  deleteItem(uuid: string): void {\n    //alert(\"DEBUG: Delete QnA '\" + this.domainId + \"/\" + uuid + \"' ...\");\n\n    this.questionsService.deleteTrainedQnA(this.domainId, uuid).then(response => {\n      //alert(\"DEBUG: Trained QnA '\" + uuid + \"' has been deleted.\");\n      console.info(\"Trained QnA '\" + uuid + \"' has been deleted.\");\n\n      // INFO: When deleting item which was answer to question\n      this.answer[\"answer\"] = null;\n      this.answerReceived = false;\n\n      // INFO: Reload items\n      this.getTrainedQuestionsAnswers();\n    });\n  }\n\n  /**\n   *\n   */\n  decryptAnswer(password: string): void {\n    alert(\"Decrypted answer: \" + this.aesEncryptDecryptService.decrypt(this.answer.answer, password));\n    this.document.getElementById('secretKey').value = \"\";\n    this.document.getElementById('overlayDecrypt').classList.toggle('open-overlay');\n  }\n\n  /**\n   *\n   */\n  togglePw(): void {\n    var passwordType = <HTMLInputElement>document.getElementById(\"secretKey\");\n    var y = <HTMLInputElement>document.getElementById(\"eye_icon\");\n    if (passwordType.type === \"password\") {\n      passwordType.type = \"text\";\n      y.src = \"assets/img/eye_icon_strike.svg\";\n    } else {\n      passwordType.type = \"password\";\n      y.src = \"assets/img/eye_icon.svg\";\n    }\n  }\n}\n","<!--\n<div class=\"sub-header\">\n  <p class=\"font-weight-600\">MyKatie</p>\n</div>\n-->\n<main class=\"align-center\">\n\n<!-- INFO: The display CSS of the various screens is set to none until init has completed, whereas see getMyKatieDomain() and setDisplay() -->\n\n  <div *ngIf=\"domainId === null\" id=\"noMyKatieConfigured\">\n    <div class=\"content p-24 justify-center\">\n      <p><strong>WARNING:</strong> No MyKatie domain configured for your user!</p>\n    </div>\n    <div class=\"content p-24 justify-center\">\n      <p>Please contact system administrator: <a href=\"mailto:contact@wyona.com?subject=No MyKatie domain configured\">contact@wyona.com</a></p>\n    </div>\n  </div>\n\n<!-- START:  WELCOME SCREEN -->\n  <div id=\"welcomeNoSharedItemsYet\">\n    <div class=\"content p-24 justify-center\">\n      <section class=\"container flex-column\">\n        <h3 *ngIf=\"user != null\">{{ 'katie.welcome' | translate }} {{user.firstname}}</h3>\n        <p class=\"mt-24\">I'm Katie, MyKatie, your Katie, your digital companion. I will help you to remember whatever you want to share with me, such as for example</p>\n        <div class=\"mt-24\">\n          <ul>\n          <li>Recipes</li>\n          <li>Links of interesting articles</li>\n          <li>Passwords / Credentials</li>\n          <li>Shopping lists</li>\n          <li>Best places to sit in your favourite movie theatres</li>\n          <li>Birthday present ideas</li>\n          <li>...</li>\n          </ul>\n        </div>\n        <p class=\"mt-24\">Let's start by clicking on the button below to share your first something with Katie</p>\n        <p class=\"mt-24\"><button (click)=\"toggleShareTab()\" class=\"fw-600 bg-blue white solid-button\">{{ 'katie.share_with_katie' | translate }}</button></p>\n      </section>\n    </div>\n  </div>\n<!-- END:  WELCOME SCREEN -->\n\n  <div id=\"tabs\">\n    <button id=\"askTab\" class=\"ask-tab-selected\" (click)=\"toggleAskTab()\">{{ 'katie.ask' | translate }}</button> | <button id=\"shareTab\" class=\"\" (click)=\"toggleShareTab()\">{{ 'katie.share' | translate }}</button>\n  </div>\n\n<!-- START: SHARE SCREEN -->\n  <div class=\"content p-24 justify-center\" id=\"shareWithKatie\" #shareWithKatie>\n    <div class=\"container\">\n          <select #_shared_item_type class=\"form-field mt-24\" id=\"shared_item_type\" name=\"shared_item_type\" (change)=\"selectShareItemType($event.target.value)\">\n              <option value=\"item_one-liner\">{{ 'katie.one_liner' | translate }}</option>\n              <option value=\"item_note\">{{ 'katie.note_idea' | translate }}</option>\n              <option value=\"item_link\">{{ 'katie.link_article_link' | translate }}</option>\n              <!-- TODO: translation and dedicated method <option value=\"item_appointment\">Appointment / Birthday</option>-->\n              <option value=\"item_password\">{{ 'katie.password' | translate }} / Credentials</option>\n              <!-- TODO: translation and dedicated method <option value=\"item_contact\">Contact Information</option>-->\n              <option value=\"item_shopping-list\">{{ 'katie.shopping_list' | translate }}</option>\n              <option value=\"item_recipe\">{{ 'katie.recipe' | translate }}</option>\n          </select>\n\n          <!-- Share one liner -->\n          <div class=\"mt-12\" id=\"item_one-liner\">\n            <table>\n              <tr><td><input #_oneliner class=\"form-field mt-12\" type=\"text\" size=\"30\" placeholder=\"{{ 'katie.one_liner' | translate }}\"/></td></tr>\n              <tr><td>\n                <button class=\"fw-600 bg-blue white solid-button mt-24\" (click)=\"cancel()\" type=\"button\">{{ 'katie.cancel' | translate }}</button>\n                &#160;\n                <button class=\"fw-600 bg-blue white solid-button mt-24\" (click)=\"shareOneLiner(_oneliner.value)\" type=\"button\">{{ 'katie.share' | translate }}</button>\n              </td></tr>\n            </table>\n          </div>\n\n          <!-- Share note / idea  -->\n          <div class=\"mt-12\" id=\"item_note\">\n            <table>\n              <tr><td>\n<editor id=\"tinymce4answer3\" outputFormat=\"html\"\n   [(ngModel)]=\"tinymce_note\"\n   [init]=\"{\n     base_url: '/tinymce',\n     suffix: '.min',\n\n     menubar: false,\n     plugins: [\n       'advlist autolink lists link image charmap print preview anchor',\n       'searchreplace visualblocks code fullscreen',\n       'insertdatetime media table paste code help wordcount'\n     ],\n     toolbar:\n       'undo redo | formatselect | bold italic backcolor | link | \\\n       bullist numlist outdent indent | code | help'\n   }\"\n ></editor>\n              </td></tr>\n              <tr><td>\n                <button class=\"fw-600 bg-blue white solid-button mt-24\" (click)=\"cancel()\" type=\"button\">{{ 'katie.cancel' | translate }}</button>\n                &#160;\n                <button class=\"fw-600 bg-blue white solid-button mt-24\" (click)=\"shareNote()\" type=\"button\">{{ 'katie.share' | translate }}</button>\n              </td></tr>\n            </table>\n          </div>\n\n          <!-- Share article Link / URL / Bookmark  -->\n          <div class=\"mt-12\" id=\"item_link\">\n            <table>\n              <tr><td><input #_link_link  class=\"form-field mt-12\" size=\"30\" type=\"text\" placeholder=\"URL (https://...)\"/></td></tr>\n              <tr><td><input #_link_keywords class=\"form-field mt-12\" size=\"30\" type=\"text\" placeholder=\"{{ 'katie.link_keywords' | translate }}\"/></td></tr>\n              <tr><td>\n                <button class=\"fw-600 bg-blue white solid-button mt-24\" (click)=\"cancel()\" type=\"button\">{{ 'katie.cancel' | translate }}</button>\n                &#160;\n                <button class=\"fw-600 bg-blue white solid-button mt-24\" (click)=\"shareLink(_link_link.value, _link_keywords.value)\" type=\"button\">{{ 'katie.share' | translate }}</button>\n              </td></tr>\n            </table>\n          </div>\n\n          <!-- Share calendar entry / Appointment / Date of birth  -->\n          <div class=\"mt-12\" id=\"item_appointment\">\n            <table>\n              <tr><td><input #_appointment_title type=\"text\" class=\"form-field mt-12\" size=\"30\" placeholder=\"About / title\"/></td></tr>\n              <tr><td><input #_appointment_location type=\"text\" class=\"form-field mt-12\" size=\"30\" placeholder=\"Location\"/></td></tr>\n              <tr><td><input #_appointment_start type=\"text\" class=\"form-field mt-12\" size=\"30\" placeholder=\"Start date / time\"/></td></tr>\n              <tr><td><input #_appointment_end type=\"text\" class=\"form-field mt-12\" size=\"30\" placeholder=\"End date / time\"/></td></tr>\n              <tr><td>\n                <button class=\"fw-600 bg-blue white solid-button mt-24\" (click)=\"cancel()\" type=\"button\">{{ 'katie.cancel' | translate }}</button>\n                &#160;\n                <button class=\"fw-600 bg-blue white solid-button mt-24\" (click)=\"shareAppointment(_appointment_title.value, _appointment_location.value, _appointment_start.value, _appointment_end.value)\" type=\"button\">{{ 'katie.share' | translate }}</button>\n              </td></tr>\n            </table>\n          </div>\n\n          <!-- Share password / credentials  -->\n          <div class=\"mt-12\" id=\"item_password\">\n            <table>\n              <tr><td><input #_password_hint type=\"text\" class=\"form-field mt-12\" size=\"30\" placeholder=\"About / hint\"/></td></tr>\n              <tr><td><input #_password_username type=\"text\" class=\"form-field mt-12\" size=\"30\" placeholder=\"{{ 'katie.iam_username' | translate }}\"/></td></tr>\n              <tr><td><input #_password_password type=\"text\" class=\"form-field mt-12\" size=\"30\" placeholder=\"{{ 'katie.password' | translate }}\"/></td></tr>\n              <tr><td><input #_password_pwd_encryption type=\"text\" class=\"form-field mt-12\" size=\"30\" placeholder=\"Password for client side encryption\"/></td></tr>\n              <tr><td>\n                <button class=\"fw-600 bg-blue white solid-button mt-24\" (click)=\"cancel()\" type=\"button\">{{ 'katie.cancel' | translate }}</button>\n                &#160;\n                <button class=\"fw-600 bg-blue white solid-button mt-24\" (click)=\"sharePassword(_password_hint.value, _password_username.value, _password_password.value, _password_pwd_encryption.value)\" type=\"button\">{{ 'katie.share' | translate }}</button>\n              </td></tr>\n            </table>\n          </div>\n\n          <!-- Share contact information (e-mail, phone number, address, ...)  -->\n          <div class=\"mt-12\" id=\"item_contact\">\n            <table>\n              <tr><td><input #_contact_name type=\"text\" class=\"form-field mt-12\" size=\"30\" placeholder=\"First and last name\"/></td></tr>\n              <tr><td><input #_contact_email type=\"text\" class=\"form-field mt-12\" size=\"30\" placeholder=\"E-Mail\"/></td></tr>\n              <tr><td><input #_contact_phone_number type=\"text\" class=\"form-field mt-12\" size=\"30\" placeholder=\"Phone number\"/></td></tr>\n              <tr><td><input #_contact_address type=\"text\" class=\"form-field mt-12\" size=\"30\" placeholder=\"Address\"/></td></tr>\n              <tr><td>\n                <button class=\"fw-600 bg-blue white solid-button mt-24\" (click)=\"cancel()\" type=\"button\">{{ 'katie.cancel' | translate }}</button>\n                &#160;\n                <button class=\"fw-600 bg-blue white solid-button mt-24\" (click)=\"shareContact(_contact_name.value, _contact_email.value, _contact_phone_number.value, _contact_address.value)\" type=\"button\">{{ 'katie.share' | translate }}</button>\n              </td></tr>\n            </table>\n          </div>\n\n          <!-- Share shopping list  -->\n          <div class=\"mt-12\" id=\"item_shopping-list\">\n            <table>\n              <tr><td>\n<editor id=\"tinymce4answer4\" outputFormat=\"html\"\n   [(ngModel)]=\"tinymce_shopping_list\"\n   [init]=\"{\n     base_url: '/tinymce',\n     suffix: '.min',\n\n     menubar: false,\n     plugins: [\n       'advlist autolink lists link image charmap print preview anchor',\n       'searchreplace visualblocks code fullscreen',\n       'insertdatetime media table paste code help wordcount'\n     ],\n     toolbar:\n       'undo redo | formatselect | bold italic backcolor | link | \\\n       bullist numlist outdent indent | code | help'\n   }\"\n ></editor>\n              </td></tr>\n              <tr><td>\n                <button class=\"fw-600 bg-blue white solid-button mt-24\" (click)=\"cancel()\" type=\"button\">{{ 'katie.cancel' | translate }}</button>\n                &#160;\n                <button class=\"fw-600 bg-blue white solid-button mt-24\" (click)=\"shareShoppingList()\" type=\"button\">{{ 'katie.share' | translate }}</button>\n              </td></tr>\n            </table>\n          </div>\n\n          <!-- Share recipe  -->\n          <div class=\"mt-12\" id=\"item_recipe\">\n            <table>\n              <tr><td><input #_recipe_title type=\"text\" class=\"form-field mt-12\" size=\"30\" placeholder=\"{{ 'katie.recipe_title' | translate }}\"/></td></tr>\n              <tr><td>\n                <h4>{{ 'katie.recipe_ingredients' | translate }}</h4>\n<editor id=\"tinymce4answer1\" outputFormat=\"html\"\n   [(ngModel)]=\"tinymce_recipe_ingredients\"\n   [init]=\"{\n     base_url: '/tinymce',\n     suffix: '.min',\n\n     menubar: false,\n     plugins: [ \n       'advlist autolink lists link image charmap print preview anchor',\n       'searchreplace visualblocks code fullscreen',\n       'insertdatetime media table paste code help wordcount'\n     ],\n     toolbar:\n       'undo redo | formatselect | bold italic backcolor | link | \\\n       bullist numlist outdent indent | code | help'\n   }\"\n ></editor>\n              </td></tr>\n              <tr><td>\n                <h4>{{ 'katie.recipe_preparation' | translate }}</h4>\n<editor id=\"tinymce4answer2\" outputFormat=\"html\"\n   [(ngModel)]=\"tinymce_recipe_preparation\"\n   [init]=\"{\n     base_url: '/tinymce',\n     suffix: '.min',\n\n     menubar: false,\n     plugins: [ \n       'advlist autolink lists link image charmap print preview anchor',\n       'searchreplace visualblocks code fullscreen',\n       'insertdatetime media table paste code help wordcount'\n     ],\n     toolbar:\n       'undo redo | formatselect | bold italic backcolor | link | \\\n       bullist numlist outdent indent | code | help'\n   }\"\n ></editor>\n               </td></tr>\n              <tr><td>\n                <button class=\"fw-600 bg-blue white solid-button mt-24\" (click)=\"cancel()\" type=\"button\">{{ 'katie.cancel' | translate }}</button>\n                &#160;\n                <button class=\"fw-600 bg-blue white solid-button mt-24\" (click)=\"shareRecipe(_recipe_title.value)\" type=\"button\">{{ 'katie.share' | translate }}</button>\n              </td></tr>\n            </table>\n          </div>\n    </div>\n  </div>\n<!-- END: SHARE SCREEN -->\n\n<!-- START: ASK SCREEN -->\n  <div class=\"content p-24 justify-center\" id=\"askKatie\" #askKatie>\n    <div class=\"container\">\n      <div id=\"input-form\">\n        <input id=\"question\" #question type=\"text\" size=\"50\" (keydown.enter)=\"askQuestion(question.value)\" placeholder=\"{{ 'katie.ask_katie' | translate }}\"/>\n<!--\n        <button>\n          <img src=\"assets/img/cross.svg\" alt=\"Clear question\">\n        </button>\n-->\n        <button (click)=\"askQuestion(question.value)\">\n          <img src=\"assets/img/arrow_button.svg\" alt=\"Arrow button\">\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"content justify-center\" id=\"askKatieAnswer\" #askKatieAnswer>\n  <!--<div class=\"content p-24 justify-center\" id=\"askKatieAnswer\" #askKatieAnswer>-->\n    <div id=\"result\" *ngIf=\"answer.answer != null\">\n      <div *ngIf=\"answer.answerClientSideEncryptionAlgorithm == null\" id=\"answer\" [innerHTML]=\"answer.answer | linkify\"> <!-- INFO: In order to have CSS applied, encapsulation has to be set -->\n      </div>\n      <p *ngIf=\"answer.answerClientSideEncryptionAlgorithm != null && answer.answerClientSideEncryptionAlgorithm === 'aes-256'\" id=\"decrypt\">\n        Answer is encrypted, <button class=\"text-button blue mt-48\" (click)=\"overlayDecrypt.classList.toggle('open-overlay')\">decrypt answer ...</button>\n      </p>\n      <p *ngIf=\"answer.answerClientSideEncryptionAlgorithm != null && answer.answerClientSideEncryptionAlgorithm != 'aes-256'\">\n        Answer is encrypted, but encryption algorithm '{{ answer.answerClientSideEncryptionAlgorithm }}' is not supported!\n      </p>\n      <p *ngIf=\"answer.originalQuestion != null\" id=\"original-question\">\n        {{ answer.dateOriginalQuestion | epochHumanReadable }}&#160;&#160;&#160;&#160;&#160;&#160;<a href=\"/#/trained-questions-answers/{{domainId}}/{{answer.uuid}}/edit\"><img width=\"20px\" id=\"pencil_icon\" src=\"assets/img/black_pencil.svg\" style=\"vertical-align: bottom;\"/></a>&#160;&#160;&#160;<a (click)=\"deleteItem(answer.uuid)\"><img width=\"25px\" id=\"trash_icon\" src=\"assets/img/icon/delete_black_24dp.svg\" style=\"vertical-align: bottom;\"/></a>\n      </p>\n    </div>\n\n    <div id=\"no-result\" *ngIf=\"answer.answer == null && answerReceived == true\">\n      <p>{{ 'katie.no_answer_available' | translate }}</p>\n    </div>\n\n    <div class=\"close-overlay overlay\" #overlayDecrypt id=\"overlayDecrypt\">\n      <div class=\"resubmit-form\">\n        <h2>{{ 'katie.decrypt_answer' | translate }}</h2>\n        <p class=\"mt-24\">Please enter password in order to decrypt answer.</p>\n        <div class=\"icon-form-field mt-24\">\n          <input #secretKey id=\"secretKey\" type=\"password\" placeholder=\"{{ 'katie.password' | translate }}\" (keydown.enter)=\"decryptAnswer(secretKey.value)\" />\n          <div role=\"button\" (click)=togglePw() class=\"align-center mr-16\">\n            <img width=\"24px\" height=\"21px\" id=\"eye_icon\" src=\"assets/img/eye_icon.svg\">\n          </div>\n        </div>\n        <div class=\"space-between align-center mt-48\">\n          <button type=\"button\" name=\"close\" class=\"text-button blue mr-24\" (click)=\"overlayDecrypt.classList.toggle('open-overlay')\">{{ 'katie.cancel' | translate }}</button>\n          <button class=\"fw-600 solid-button bg-blue white\" (click)=\"decryptAnswer(secretKey.value)\">Decrypt</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n  <div id=\"sharedItems\">\n    <div class=\"mt-12 justify-center\">\n      <button (click)=\"toggleShareTab()\" class=\"fw-600 bg-blue white solid-button\">{{ 'katie.share_with_katie' | translate }}</button>\n    </div>\n    <div *ngFor=\"let question of qAnswers\" class=\"something\">\n      <span *ngIf=\"question.answerClientSideEncryptionAlgorithm == null\" class=\"answer\" [innerHTML]=\"question.answer | linkify\"></span>\n      <span *ngIf=\"question.answerClientSideEncryptionAlgorithm != null\" class=\"answer\">Encrypted credentials regarding <strong>'{{question.originalquestion}}'</strong></span>\n      <!-- <button class=\"text-button blue mt-48\" (click)=\"overlayDecrypt.classList.toggle('open-overlay')\">decrypt answer ...</button> -->\n\n      <!-- TODO: Close item menu when clicking anywhere else -->\n      <button (click)=\"toggleItemMenu(question.uuid)\">\n        <img src=\"assets/img/dots-three-vertical.svg\" alt=\"Menu\">\n      </button>\n\n      <div class=\"item_menu\" id=\"item_menu_{{question.uuid}}\" style=\"display: none;\">\n        <div><a href=\"/#/trained-questions-answers/{{domainId}}/{{question.uuid}}/edit\">{{ 'katie.edit' | translate}}<img src=\"assets/img/icon/edit_black_24dp.svg\"/></a></div>\n        <div><a (click)=\"openShareItemOverlay(question.uuid)\">{{ 'katie.share' | translate}}&#160;<img src=\"assets/img/share-bold.svg\" width=\"20px\"/></a></div>\n        <div><a (click)=\"deleteItem(question.uuid)\">{{ 'katie.delete' | translate}}<img src=\"assets/img/icon/delete_black_24dp.svg\"/></a></div>\n      </div>\n\n    </div>\n  </div>\n\n    <div class=\"close-overlay overlay\" #shareItemOverlay id=\"shareItemOverlay\">\n      <div class=\"resubmit-form\">\n        <h2>{{ 'katie.share' | translate}}</h2>\n        <p class=\"mt-24\">Please enter email of person you want to share this information with.</p>\n        <div class=\"icon-form-field mt-24\">\n          <input #email id=\"email\" type=\"text\" placeholder=\"E-Mail\" (keydown.enter)=\"shareItem(email.value)\" />\n        </div>\n        <div class=\"space-between align-center mt-48\">\n          <button type=\"button\" name=\"close\" class=\"text-button blue mr-24\" (click)=\"shareItemOverlay.classList.toggle('open-overlay')\">{{ 'katie.cancel' | translate }}</button>\n          <button class=\"fw-600 solid-button bg-blue white\" (click)=\"shareItem(email.value)\">{{ 'katie.share' | translate }}</button>\n        </div>\n      </div>\n    </div>\n\n  <div class=\"content p-24 justify-center\" id=\"linkAllSharedItems\">\n    <div class=\"container\">\n      <a href=\"/#/domain/{{domainId}}/qna\">MyKatie {{ 'katie.knowledge_base' | translate }}</a>\n      <!--<a href=\"/#/trained-questions-answers/{{domainId}}\">{{ 'katie.knowledge_shared_with_mykatie' | translate }}</a>-->\n    </div>\n  </div>\n<!-- END: ASK SCREEN -->\n\n<!--\n  <div class=\"content p-24 justify-center\">\n    <div class=\"container\">\n      <a href=\"my-katie.html\">{{ 'katie.about_mykatie' | translate }}</a>\n    </div>\n  </div>\n-->\n\n</main>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { DisplayAnswerOfResubmittedQuestionComponent } from './display-answer-of-resubmitted-question/display-answer-of-resubmitted-question.component';\nimport { AnswerResubmittedQuestionComponent } from './answer-resubmitted-question/answer-resubmitted-question.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { MyKatieComponent } from './my-katie/my-katie.component';\nimport { AddDomainComponent } from './add-domain/add-domain.component';\nimport { DomainComponent } from './domain/domain.component';\nimport { DomainFaqComponent } from './domain-faq/domain-faq.component';\nimport { DomainMembersComponent } from './domain-members/domain-members.component';\nimport { DomainSettingsComponent } from './domain-settings/domain-settings.component';\nimport { DomainWebhooksComponent } from './domain-webhooks/domain-webhooks.component';\nimport { DomainWebhookDeliveriesComponent } from './domain-webhook-deliveries/domain-webhook-deliveries.component';\nimport { DomainInsightsComponent } from './domain-insights/domain-insights.component';\nimport { DomainAskComponent } from './domain-ask/domain-ask.component';\nimport { ViewQnaComponent } from './view-qna/view-qna.component';\nimport { ResubmittedQuestionsComponent } from './resubmitted-questions/resubmitted-questions.component';\nimport { AskedQuestionsComponent } from './asked-questions/asked-questions.component';\nimport { TrainedQuestionsAnswersComponent } from './trained-questions-answers/trained-questions-answers.component';\nimport { IamComponent } from './iam/iam.component';\nimport { IamUpdateUserComponent } from './iam-update-user/iam-update-user.component';\nimport { IamUpdateProfileComponent } from './iam-update-profile/iam-update-profile.component';\nimport { TrainedQuestionAnswerComponent } from './trained-question-answer/trained-question-answer.component';\nimport { ImproveTrainedQnaComponent } from './improve-trained-qna/improve-trained-qna.component';\nimport { AddQnaComponent } from './add-qna/add-qna.component';\nimport { AskQuestionComponent } from './ask-question/ask-question.component';\nimport { HomeComponent } from './home/home.component';\nimport { FaqComponent } from './faq/faq.component';\nimport { RateQuestionComponent } from './rate-answer/rate-answer.component';\nimport { ApproveAnswerComponent } from './approve-answer/approve-answer.component';\n\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent},\n  { path: 'ask', component: AskQuestionComponent},\n  { path: 'faq', component: FaqComponent},\n  { path: 'faq/:domainid/:language', component: FaqComponent},\n  { path: 'login', component: LoginComponent},\n  { path: 'forgot-password', component: ForgotPasswordComponent},\n  { path: 'reset-password', component: ResetPasswordComponent},\n  { path: 'logout', component: LogoutComponent},\n  { path: 'answer-question', component: AnswerResubmittedQuestionComponent},\n  { path: 'dashboard', component: DashboardComponent},\n  { path: 'my-katie', component: MyKatieComponent},\n  { path: 'add-domain', component: AddDomainComponent},\n  { path: 'domain/:id', component: DomainAskComponent},\n  { path: 'domain/:id/faq', component: DomainFaqComponent},\n  { path: 'domain/:id/members', component: DomainMembersComponent},\n  { path: 'domain/:id/settings', component: DomainSettingsComponent},\n  { path: 'domain/:id/settings/webhooks', component: DomainWebhooksComponent},\n  { path: 'domain/:id/settings/webhooks/:whid/deliveries', component: DomainWebhookDeliveriesComponent},\n  { path: 'domain/:id/insights', component: DomainInsightsComponent},\n  { path: 'domain/:id/qna', component: DomainComponent},\n  { path: 'domain/:id/qna/:uuid', component: ViewQnaComponent},\n  { path: 'resubmitted-questions', component: ResubmittedQuestionsComponent},\n  { path: 'resubmitted-questions/:domainid', component: ResubmittedQuestionsComponent},\n  { path: 'asked-questions', component: AskedQuestionsComponent},\n  { path: 'asked-questions/:domainid', component: AskedQuestionsComponent},\n  { path: 'iam/user/:userid/edit', component: IamUpdateUserComponent},\n  { path: 'iam/profile/edit', component: IamUpdateProfileComponent},\n  { path: 'iam', component: IamComponent},\n  { path: 'trained-questions-answers', component: TrainedQuestionsAnswersComponent},\n  { path: 'trained-questions-answers/:domainid', component: TrainedQuestionsAnswersComponent},\n  { path: 'trained-questions-answers/:domainid/:uuid/edit', component: TrainedQuestionAnswerComponent},\n  { path: 'trained-questions-answers/:domainid/:uuid/improve', component: ImproveTrainedQnaComponent},\n  { path: 'trained-questions-answers/:domainid/add', component: AddQnaComponent},\n  { path: 'rate-answer', component: RateQuestionComponent},\n  { path: 'approve-answer', component: ApproveAnswerComponent},\n  { path: 'read-answer', component: DisplayAnswerOfResubmittedQuestionComponent},\n  { path: '**', component: HomeComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  //imports: [RouterModule.forRoot(routes, { useHash: true, anchorScrolling: 'enabled' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from \"../services/authentication.service\";\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DataSharingService } from '../services/data-sharing.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  // INFO: UUID of resubmitted question to be answered by backend team\n  uuid: string = null;\n\n  // INFO: Question related to protected answer\n  question: string = null;\n\n  // INFO: Message displayed on login screen in order to explain why resource is protected\n  message: string = null;\n\n  // INFO: JWT token\n  jwtToken: string = null;\n\n  // INFO: Username of user trying to login, for example already set as link inside email\n  username: string = null;\n\n  /**\n   *\n   */\n  constructor(private authenticationService: AuthenticationService, private router: Router, private route: ActivatedRoute, private dataSharingService: DataSharingService) {\n    console.info(\"Loading Login component ...\");\n  }\n\n  /**\n   *\n   */\n  ngOnInit(): void {\n    this.route\n      .queryParams\n      .subscribe(params => {\n        this.uuid = params['answer-question-uuid'] || null;\n        //this.uuid = params['answer-question-uuid'] || 'NO_UUID_QUERY_PARAMETER';\n\n        this.question = params['question'] || null;\n\n        this.message = params['message'] || null;\n\n        if (this.uuid != null) {\n          console.info(\"UUID as query parameter: \" + this.uuid);\n          //alert(\"INFO: UUID as query parameter: \" + this.uuid);\n        }\n\n        this.jwtToken = params['token'] || null;\n        if (this.jwtToken != null) {\n          this.doLoginUsingJWT();\n        }\n\n        this.username = params['username'] || null;\n        if (this.username != null) {\n          console.info(\"Provided username: \" + this.username);\n        }\n      });\n  }\n\n  /**\n   * Login using JWT token provided by query string\n   */\n  doLoginUsingJWT() {\n    //alert('DEBUG: Login using JWT token ' + this.jwtToken + ' ...');\n    this.authenticationService.doLoginUsingJWT(this.jwtToken).then(userDetails => {\n      console.info(\"Signed in as user: \" + userDetails.username);\n      this.router.navigate(['/dashboard']);\n    });\n  }\n\n  /**\n   * Do login\n   * @param username Username\n   * @param password Password\n   */\n  doLogin(username: string, password: string): void {\n    //alert('DEBUG: Login (' + username + ', ' + password + ')...');\n    console.info(\"Login ...\");\n\n    if (username.length === 0) {\n      alert(\"Please enter a username\");\n      return;\n    }\n\n    this.authenticationService.doLogin(username, password).then(userDetails => {\n      //alert(\"DEBUG: Signed in as user: \" + userDetails.username);\n      console.info(\"Signed in as user: \" + userDetails.username);\n      this.dataSharingService.isUserLoggedIn.next(true);\n\n      if (username !== userDetails.username) {\n          alert(\"WARN: Already signed in as '\" + userDetails.username + \"'! Logout first in order to be able to sign in as user '\" + username + \"' ...\");\n      }\n\n      if (this.uuid != null) {\n        this.router.navigate(['/answer-question'], {queryParams: {'uuid': this.uuid}});\n      } else if (this.question != null) {\n        // INFO: Ask question again in order to display protected answer after successfull login\n        console.info(\"Ask question '\" + this.question + \"' again as signed in user '\" + userDetails.username + \"' ...\");\n        this.router.navigate(['/ask'], {queryParams: {'q': this.question}});\n      } else {\n        //alert(\"DEBUG: Redirect depending on user role '\" + userDetails.roles[0] + \"' ...\");\n        if (userDetails.roles[0] === \"ROLE_ADMIN\") {\n          this.router.navigate(['/dashboard']);\n        } else {\n          this.router.navigate(['/dashboard']); // INFO: Also route USER to dashboard\n        }\n      }\n    });\n  }\n\n  /**\n   *\n   */\n  togglePw() {\n    var passwordType = <HTMLInputElement>document.getElementById(\"password\");\n    var y = <HTMLInputElement>document.getElementById(\"eye_icon\");\n    if (passwordType.type === \"password\") {\n      passwordType.type = \"text\";\n      y.src = \"assets/img/eye_icon_strike.svg\";\n    } else {\n      passwordType.type = \"password\";\n      y.src = \"assets/img/eye_icon.svg\";\n    }\n  }\n}\n","<main>\n  <!-- INFO: Sign in using JWT -->\n  <div id=\"login-container\" *ngIf=\"jwtToken != null\">\n    <img src=\"assets/img/logo.svg\" alt=\"logo\">\n\n    <h2 class=\"mt-24\">{{ 'katie.sign_in_using_jwt' | translate }}</h2>\n  </div>\n\n  <!-- INFO: Sign in using username and password -->\n  <div id=\"login-container\" *ngIf=\"jwtToken === null\">\n    <a href=\"/\"><img src=\"assets/img/logo.svg\" alt=\"logo\"/></a>\n\n    <h2 class=\"mt-24\">{{ 'katie.sign_in' | translate }}</h2>\n\n    <p class=\"mt-16\" *ngIf=\"message != null\">\n      {{ message }}\n    </p>\n\n    <form>\n      <input #_username id=\"username\" class=\"form-field mt-48\" type=\"email\" placeholder=\"{{ 'katie.username' | translate }}\" value=\"{{username}}\"/>\n      <br>\n      <div class=\"icon-form-field mt-24\">\n        <input id=\"password\" #password type=\"password\" placeholder=\"{{ 'katie.password' | translate }}\" (keydown.enter)=\"doLogin(_username.value, password.value)\" />\n        <div role=\"button\" (click)=togglePw() class=\"align-center mr-16\">\n          <img width=\"24px\" height=\"21px\" id=\"eye_icon\" src=\"assets/img/eye_icon.svg\">\n        </div>\n      </div>\n    </form>\n\n    <section class=\"mt-48\">\n      <button type=\"button\" class=\"blue text-button\" [routerLink]=\"['/forgot-password']\">{{ 'katie.forgot_password' | translate }}</button>\n      <button (click)=\"doLogin(_username.value, password.value)\" class=\"fw-600 bg-blue white solid-button\" type=\"submit\">{{ 'katie.sign_in' | translate }}</button>\n    </section>\n  </div>\n</main>\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../models/user';\nimport { IamService } from \"../services/iam.service\";\n\n@Component({\n  selector: 'app-iam',\n  templateUrl: './iam.component.html',\n  styleUrls: ['./iam.component.css']\n})\nexport class IamComponent implements OnInit {\n\n  users: User[] = [];\n\n  constructor(private iamService: IamService) { }\n\n  /**\n   *\n   */\n  ngOnInit(): void {\n    this.getAllUsers();\n  }\n\n  /**\n   *\n   */\n  getAllUsers(): void {\n    this.iamService.getAllUsers().then(response => {\n      this.users = <User[]>response;\n      console.info(\"All users have been loaded.\");\n    });\n  }\n}\n","<div class=\"sub-header\">\n  <p class=\"font-weight-600\">Identity and Access Management</p>\n</div>\n\n<main class=\"align-center\">\n  <div class=\"content justify-center flex min-padding\">\n\n<!-- TODO: Implement left hand side navigation\n    <nav class=\"side-nav mt-64\">\n      <div class=\"active sidenav-item\">\n        <img src=\"assets/img/inbox_icon.svg\" alt=\"\">\n        <a class=\"ml-24\" href=\"#\">Inbox</a>\n      </div>\n      <div class=\"sidenav-item\">\n        <a href=\"#\">Open</a>\n      </div>\n      <div class=\"sidenav-item\">\n        <a href=\"\">Archive</a>\n      </div>\n    </nav>\n-->\n\n    <div class=\"large mt-24\">\n\n<!-- TODO: Implement filter\n      <section class=\"toolbar space-between\">\n        <input type=\"checkbox\" name=\"\" value=\"\">\n        <button type=\"button\" name=\"filter\" class=\"icon\">\n          <img src=\"assets/img/filter_icon.svg\" alt=\"icon of a filter\">\n        </button>\n      </section>\n-->\n\n      <h2 id=\"title-user-management\">{{ 'katie.user_management' | translate }}</h2>\n      <br/>&#160;<br/>\n      <table border=\"1\">\n        <tr>\n          <th>{{ 'katie.iam_first_last_name' | translate }}</th>\n          <th>{{ 'katie.iam_username' | translate }}</th>\n          <th>E-Mail</th>\n          <th>{{ 'katie.language' | translate }}</th>\n          <th>{{ 'katie.iam_role' | translate }}</th>\n          <th>{{ 'katie.iam_actions' | translate }}</th>\n        </tr>\n        <tr *ngFor=\"let user of users\">\n          <td>\n          <div class=\"flex align-center\" *ngIf=\"user.firstname != null\">\n            {{ user.firstname }} {{ user.lastname }}\n          </div>\n          </td>\n          <td>\n          <div class=\"flex align-center\">\n            {{ user.username }}\n          </div>\n          </td>\n          <td>\n          <div class=\"flex align-center\">\n            <a class=\"ml-12\" href=\"mailto:{{ user.email }}\">{{ user.email }}</a>\n          </div>\n          </td>\n          <td>\n          <p class=\"mid-grey\">{{ user.language }}</p>\n          </td>\n          <td>\n          <p class=\"mid-grey\">{{ user.role }}</p>\n          </td>\n          <td>\n          <p><a href=\"/#/iam/user/{{ user.id }}/edit\"><img width=\"20px\" id=\"pencil_icon\" src=\"assets/img/black_pencil.svg\"></a></p>\n          </td>\n        </tr>\n      </table>\n    </div>\n  </div>\n</main>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataSharingService {\n\n  public isUserLoggedIn: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  /**\n   *\n   */\n  constructor() { }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}